<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics35.WebUI.Misc.v8.2</name>
    </assembly>
    <members>
        <member name="T:Infragistics.WebUI.Misc.Util.ClientStateXmlParser">
            <summary>
            Summary description for ClientStateXmlParser.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.Util.ClientStateXmlParser.ProcessXmlData(System.Web.UI.WebControls.WebControl,System.Xml.XmlNode,System.Object)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.Util.ClientStateXmlParser.ProcessXmlData(System.Web.UI.WebControls.WebControl,System.Xml.XmlNode,System.Object,System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.TextAlignment">
            <summary>
            The TextAlignment Enumeration describes the different horizontal alignment values that can be used to display text.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.TextAlignment.Left">
            <summary>
            The Text is Left-Aligned, appearing closest to the left-most edge.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.TextAlignment.Center">
            <summary>
            The Text is centered between the left and right edge of the container.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.TextAlignment.Right">
            <summary>
            The text is Right-Aligned, appearing closest to the right-most edge.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.ExpandEffect">
            <summary>
            The ExpandEffect values can be used to describe how the Panel will expand and
            collapse. When set to None, the panel content will simply appear or disappear. All
            other values describe special effects.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.ExpandEffect.None">
            <summary>
            The content will simply appear or disappear. No special effect will be used.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.ExpandEffect.Slide">
            <summary>
            The content will roll-up, or unroll based on whether it is collapsing or expanding. On supported browsers (Currently only Internet Exploerer), the content will also slowly fade to and from transparent while also rolling up or down.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.Display">
            <summary>
            The value applied to the display attribute of style object of the WebAsyncRefreshPanel.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.Display.NotSet">
            <summary>
            The value for display of the DIV HTML element which represents the panel is not set.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.Display.Block">
            <summary>
            Panel is rendered as a block element.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.Display.Inline">
            <summary>
            Panel is rendered as an inline element.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.Display.None">
            <summary>
            Panel is invisible on client. Though it is present in html on the client and keeps all functionality related to linked asynchronous hidden postback.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.OverflowType">
            <summary>
            The type of overflow child controls in WebAsyncRefreshPanel.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.OverflowType.NotSet">
            <summary>
            The overflow attribute is not set to the DIV HTML element.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.OverflowType.Visible">
            <summary>
            The child controls are visible: no automatic scrollbars.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.OverflowType.Scroll">
            <summary>
            The scrollbars are always displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.OverflowType.Hidden">
            <summary>
            The scrollbars are never displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.OverflowType.Auto">
            <summary>
            The scrollbars are displayed automatically if they are needed.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.MiscRenderBase">
            <summary>
            Provides base functionality for rendering a control in the Misc namespace.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.MiscRenderBase.StyleElementFormatString">
            <summary></summary>
        </member>
        <member name="F:Infragistics.WebUI.Misc.MiscRenderBase.owner">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.MiscRenderBase.#ctor(System.Web.UI.WebControls.WebControl,System.Boolean)">
            <summary>
            Creates a new instance of the Renderer.  This constructor will throw an ArgumentException if owner is null.
            </summary>
            <param name="owner">A valid instance of a GroupBox control.</param>
            <param name="isDesignMode">A flag indicating whether this renderer will be used for Design-Time functionality</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.MiscRenderBase.#ctor(System.Web.UI.WebControls.WebControl)">
            <summary>
            Creates a new instance of the Renderer, to be used for the Runtime rendering.  If you need the Renderer to provide DesignTime data, use the overloaded constuctor - specifiying "true" for the isDesignMode parameter.
            </summary>
            <param name="owner">A valid instance of a GroupBox control.  This ctor will throw an ArgumentException if owner is null.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.MiscRenderBase.PrepareStyleDefaults">
            <summary>
            PrepareStyleDefaults is called from Control.OnPreRender().  It is your last chance to modify any of the styles, or CssStyleClass objects, before they are written to the page.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.MiscRenderBase.RegisterAllCssClasses">
            <summary>
            Registers all Css classes needed by the owner control, with the page.  
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.MiscRenderBase.RegisterGeneralJavaScript">
            <summary>
            Registers any JavaScript files needed.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.MiscRenderBase.GetAllClassesAndRegisterGenerics">
            <summary>
            Returns the Style element that contains all CSS classes needed for the owner control.  This method will also register any "Generic" css classes (classes containing default style information), needed for every control of the owners type.
            </summary>
            <returns>The style tag which will be added to the Page which contains the owner control.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Misc.MiscRenderBase.GetWebSafeUniqueID">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.MiscRenderBase.WriteCssClassesAndRegisterGenerics(System.IO.TextWriter)">
            <summary>
            This method will write all required css classes to support the owner control.  It also registers any Generic classes, so that they only have to be rendered one time.  This cuts down on the size of the HTML output.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.MiscRenderBase.GetResolvedClassNameString(System.String)">
            <summary>
            
            </summary>
            <param name="regionKey"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Misc.MiscRenderBase.CreateCssRegionMappings">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.MiscRenderBase.CreateDefaultCssRegionMappings">
            <summary></summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.MiscRenderBase.IsDesignMode">
            <summary>
            Indicates whether this renderer will be used to provide DesignTime html.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name.
            </summary>
            <param name="value">Name of the category to retreive.</param>
            <returns>The localized string value.</returns>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebPageStyler">
            <summary>
            Drag this control onto your Web Form designer to administer
            Application Styling at the Page-level.
            </summary>
            <remarks>
            <p class="body">You can use the WebPageStyler control to inform the
            Application Styling Framework(tm) at the page-level about your
            selections for <see cref="P:Infragistics.WebUI.Misc.WebPageStyler.EnableAppStyling"/>, <see cref="P:Infragistics.WebUI.Misc.WebPageStyler.StyleSetName"/>
            and <see cref="P:Infragistics.WebUI.Misc.WebPageStyler.StyleSetPath"/>. These selections will override
            those made in the "web.config" file.</p>
            <p class="body">This control only applies to the Page-level, and
            should not be used in user controls or content templates.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPageStyler.#ctor">
            <summary>
            Creates a default instance of the WebPageStyler control.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPageStyler.OnInit(System.EventArgs)">
            <summary>
            Called back during the Init event in the ASP.NET page lifecycle.
            </summary>
            <param name="e">Event arguments passed by ASP.NET, if any.</param>
            <remarks>
            <p class="body">Inheritors must call the base class implementation of
            this method before adding their own functionality.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPageStyler.Infragistics#WebUI#Shared#IProvideAppStyling#DesignRefresh(System.Boolean,System.String,System.String)">
            <summary>
            Called by Application Styling Framework(tm) to refresh the controls on the Page after a change.
            </summary>
            <param name="enableAppStyling">The EnableAppStyling setting for the AppStylingManager</param>
            <param name="styleSetName">The StyleSet setting for the AppStylingManager</param>
            <param name="styleSetPath">The StyleSetPath setting for the AppStylingManager</param>
            <remarks>
            	<p class="body">Application developers do not need to use this method.
            It has been implemented only to fulfill the requirements of the
            IProvideAppStyling interface.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPageStyler.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPageStyler.WebAgent">
            <summary>
            Holds a reference to the Application Styling proxy object.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPageStyler.StyleSetName">
            <summary>
            Name of the Application Styling Framework(tm) style set defining the default themed appearance for controls on this Page that can support Application Styling.
            </summary>
            <value>
            	<p class="body">The name of the Application Styling Framework(tm) (ASF)
            style set which has been designed to give this control a consistent
            appearance with other controls in your application.</p>
            	<p class="body">This property may return the empty string ("") to
            imply that the default style set (named "Default") should be used.
            </p>
            </value>
            <remarks>
            	<p class="body">This property allows application developers to override
            the Application Styling style set that gets applied at the page-level,
            when their Web form contains a WebPageStyler control. This style set selection
            will override any style set name set in the application configuration
            (i.e., the "web.config" file) using the <em>styleSetName</em> attribute.
            </p>
            	<p class="body">This style set name can be overridden by individual
            controls at the control-level.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPageStyler.EnableAppStyling">
            <summary>
            Enables support for the Application Styling Framework(tm) to all controls on the current Page that can support Application Styling.
            </summary>
            <value>
            	<em>True</em> indicates Application Styling is enabled by default for all
            controls on the Page, <em>False</em> indicates Application Styling is disabled
            for all controls on the Page, and <em>NotSet</em> indicates support for 
            Application Styling should default to application-level settings.
            </value>
            <remarks>
            	<p class="body">Turn on support for Application Styling of Infragistics ASP.NET
            controls on this Page when using the Application Styling Framework(tm) (ASF) by
            setting the EnableAppStyling property to True.</p>
            	<p class="body">Turn off support for Application Styling of Infragistics ASP.NET
            controls on this Page (even though it may have been enabled in the "web.config"
            file) by setting the EnableAppStyling property to False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPageStyler.StyleSetPath">
            <summary>
            Path containing the Application Styling Framework(tm) style set files for controls on this Page that support Application Styling.
            </summary>
            <remarks>
            	<p class="body">Setting this property at the page-level establishes
            a Page-level default that overrides any setting made at the application
            configuration level (i.e., in the "web.config" file) through the
            <em>styleSetPath</em> attribute.</p>
            	<p class="body">The style set path specified by this property can still
            be overridden at the control-level.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPageStyler.Infragistics#WebUI#Shared#IProvideAppStyling#StyleSheetFileName">
            <summary>
            File name and path to the CSS stylesheet for this WebPageStyler control.
            </summary>
            <remarks>
            <p class="body">This property was included for legacy support only,
            and is not relevant to Application Styling.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPageStyler.Infragistics#WebUI#Shared#IProvideAppStyling#ParsedStyles">
            <summary>
            Contains the ParsedStyleCollection consisting of CSS class definitions read from external sources.
            </summary>
            <value>The ParsedStyleCollection after external CSS class
            definitions have been parsed, or null (Nothing in Visual Basic .NET)
            if parsing hasn't been performed yet.</value>
            <remarks>
            	<p class="body">Application developers do not need to use this
            property. It has been implemented only to fulfill the requirements
            of the IProvideAppStyling interface.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPageStyler.Infragistics#WebUI#Shared#IProvideAppStyling#StylePrefix">
            <summary>
            Gets a string prefix value that is used within the CSS file to prefix each style class name.
            </summary>
            <value>Always returns the empty string.</value>
            <remarks>
            	<p class="body">Application developers do not need to use this
            property. It has been implemented only to fulfill the requirements
            of the IProvideAppStyling interface.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPageStyler.Infragistics#WebUI#Shared#IProvideAppStyling#ImageDirectory">
            <summary>
            Directory location where images have been stored (not used).
            </summary>
            <value>Always returns null (Nothing in Visual Basic .NET).</value>
            <remarks>
            <p class="body">Application developers do not need to use this property.
            It has been implemented only to fulfill the requirements of the
            IProvideAppStyling interface.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPageStyler.About">
            <summary>
            Displays the About box with information about this control, such as the version and build number.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebAsyncRefreshPanel">
            <summary>
            The WebAsyncRefreshPanel is a container control, which can be used to group content at
            design-time or run-time and to hide post back triggered by a child control.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.ShouldSerializeClientSideEvents">
            <summary>Returns true if any property of ClientSideEvents has a not default value.</summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.ResetClientSideEvents">
            <summary>
            Clears the ClientSideEvents.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.Render(System.Web.UI.HtmlTextWriter)">
            <summary></summary>
            <param name="writer"></param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.OnInit(System.EventArgs)">
            <summary>Initialize CallBackManager.</summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.OnLoad(System.EventArgs)">
            <summary>Fire AsyncPostBack.</summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.OnPreRender(System.EventArgs)">
            <summary>
            Internal use.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.AddLinkedResponseRenderer(System.Object)">
            <summary>
            Add an object located outside of the control which will be updated when a hidden asynchronous postback happens.  That object can be an instance of ICallBackResponseRenderer or a 3rd party control and in this case support is limited or it can be not available.
            </summary>
            <param name="control">Reference to ICallBackResponseRenderer or to a 3rd party control.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.AddLinkedRequestTrigger(System.String)">
            <summary>
            Add the id to the TriggerControlIDs.
            </summary>
            <remarks>
            <p class="note">All rules related to TriggerControlIDs, like wild cards "*", are supported.</p>
            </remarks>
            <param name="id">The UniqueID of ICallBackResponseRenderer or to a 3rd party control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.AddLinkedRequestTrigger(System.Web.UI.Control)">
            <summary>
            Add the id of the control to the TriggerControlIDs.
            </summary>
            <remarks>
            	<p class="body">That is a wrapper for AddLinkedRequestTrigger(control.UniqueID)</p>
            </remarks>
            <param name="control">A ICallBackResponseRenderer or a 3rd party control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RemoveLinkedRequestTrigger(System.String)">
            <summary>
            Remove the id from the TriggerControlIDs.
            </summary>
            <param name="id">The UniqueID of ICallBackResponseRenderer or to a 3rd party control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RemoveLinkedRequestTrigger(System.Web.UI.Control)">
            <summary>
            Remove the id of control from the TriggerControlIDs.
            </summary>
            <remarks>
            <p class="body">That is a wrapper for RemoveLinkedRequestTrigger(control.UniqueID)</p>
            </remarks>
            <param name="control">A ICallBackResponseRenderer or a 3rd party control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.AddTriggerPostBack(System.String)">
            <summary>
            Add id to the TriggerPostBackIDs.
            </summary>
            <param name="id">The UniqueID of a control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.AddTriggerPostBack(System.Web.UI.Control)">
            <summary>
            Add id of control to the TriggerPostBackIDs.
            </summary>
            <remarks>
            <p class="body">That is a wrapper for AddTriggerPostBack(control.UniqueID)</p>
            </remarks>
            <param name="control">A control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RemoveTriggerPostBack(System.String)">
            <summary>
            Remove the id from the TriggerPostBackIDs.
            </summary>
            <param name="id">The UniqueID a control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RemoveTriggerPostBack(System.Web.UI.Control)">
            <summary>
            Remove the id of control from the TriggerPostBackIDs.
            </summary>
            <remarks>
            <p class="body">That is a wrapper for RemoveTriggerPostBack(control.UniqueID)</p>
            </remarks>
            <param name="control">A control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.AddRefreshTarget(System.String)">
            <summary>
            Add id to the RefreshTargetIDs.
            </summary>
            <param name="id">The UniqueID of a control which is located outside of this control and which contents are updated while the response triggered by hidden asynchronous postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.AddRefreshTarget(System.Web.UI.Control)">
            <summary>
            Add id of control to the RefreshTargetIDs.
            </summary>
            <remarks>
            <p class="body">That is a wrapper for AddRefreshTarget(control.UniqueID)</p>
            </remarks>
            <param name="control">A control which is located outside of this control and which contents are updated while the response triggered by hidden asynchronous postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RemoveRefreshTarget(System.String)">
            <summary>
            Remove id from the RefreshTargetIDs.
            </summary>
            <param name="id">The UniqueID of a control which is located outside of this control and which contents are updated while the response triggered by hidden asynchronous postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RemoveRefreshTarget(System.Web.UI.Control)">
            <summary>
            Remove id of control from the RefreshTargetIDs.
            </summary>
            <remarks>
            <p class="body">That is a wrapper for RemoveRefreshTarget(control.UniqueID)</p>
            </remarks>
            <param name="control">A control which is located outside of this control and which contents are updated while the response triggered by hidden asynchronous postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.AddTriggerPostBackNoResponse(System.String)">
            <summary>
            Add id to the TriggerPostBackNoResponseIDs.
            </summary>
            <param name="id">The UniqueID of a control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.AddTriggerPostBackNoResponse(System.Web.UI.Control)">
            <summary>
            Add id of control to the TriggerPostBackNoResponseIDs.
            </summary>
            <remarks>
            <p class="body">That is a wrapper for AddTriggerPostBackNoResponse(control.UniqueID)</p>
            </remarks>
            <param name="control">A control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RemoveTriggerPostBackNoResponse(System.String)">
            <summary>
            Remove the id from the TriggerPostBackNoResponseIDs.
            </summary>
            <param name="id">The UniqueID a control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RemoveTriggerPostBackNoResponse(System.Web.UI.Control)">
            <summary>
            Remove the id of control from the TriggerPostBackNoResponseIDs.
            </summary>
            <remarks>
            <p class="body">That is a wrapper for RemoveTriggerPostBackNoResponse(control.UniqueID)</p>
            </remarks>
            <param name="control">A control which may trigger postback.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.Infragistics#WebUI#Shared#ICallBackResponseRenderer#RenderHtmlAtIndex(System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            Write control (base logic).  That method is called by CallBackManager in an endless loop until a null is returned.
            </summary>
            <param name="writer">Stream to write</param>
            <param name="index">Index of item to write.</param>
            <returns>At index 0 it returns null or this.UniqueID.  At other indexes it returns rendererAtIndex.RenderHtmlAtIndex(writer, 0).</returns>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.Dispose">
            <summary>Dispose control.</summary>
        </member>
        <member name="E:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.ContentRefresh">
            <summary>
            Event that is fired when an asynchronous postback occurs.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.About">
            <summary>
            Display the about dialog.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.JavaScriptDirectory">
            <summary>The name of directory that contains the ig_shared.js file.</summary>
            <remarks>
            <p class="body">If application uses any other instance of any Infragistics Web control, then values of that property in all controls should match, otherwise, client-side functionality in all controls may fail.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.BrowserTarget">
            <summary>Type of browser the html should be created for.</summary>
            <remarks>
            <p class="note">Value DownLevel will disable hidden call back functionality.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.Display">
            <summary>
            The display of the control on client.
            </summary>
            <remarks>
            	<p class="note">That value is applied to the style.display attribute of the HTML element object which represents WebAsyncRefreshPanel on client.
            If value of None is used, then panel becomes invisible on client, though it keeps all functionality related to linked asynchronous hidden postback,
            so, it can be considered as an invisible manager.</p>
            	<p class="note">Note: the appearance of control with enabled inline display can be different at design and run times.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.Overflow">
            <summary>The visibility of scrollbars and this control's context.</summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.CustomRules">
            <summary>
            Css rules applied to the style of the DIV HTML element which represents this control on the client.
            </summary>
            <remarks>
            	<p class="note">That property should contain pairs of the "property:value;" available for the style object in DIV.</p>
            	<p class="note">Example: WebAsyncRefreshPanel1.CustomRules="border-top:4px red solid; padding:20px;"</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.LinkedRefreshControlID">
            <summary>
            The UniqueID of WebAsyncRefreshPanel of which content will be updated when hidden asynchronous postback occurs.
            </summary>
            <remarks>
            	<p class="body">If the ID is used instead of the UniqueID, then WebAsyncRefreshPanel will try to search for it through all controls on the Page.</p>
            	<p class="body">The asynchronous postback can be triggered by this control or by a linked control.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.TriggerControlIDs">
            <summary>The list of the ids of controls that are located outside of this control and which may trigger hidden asynchronous postback.</summary>
            <remarks>
            	<p class="body">The list contains UniqueIDs of controls separated by comas.</p>
            	<p class="note">The ID-item in list can start with the "*" character as a wild card and in this case all contols which UniqueIDs end with that value will be included. That can be useful when a control is located in a INamingContainer such as UserControl.</p>
            	<p class="note">The ID-item in list can end with the "*" character as a wild card and in this case all contols which UniqueIDs start with that value will be included. That can be useful when a control uses an id of its child-control in __doPostBack, like a cell in GridView.</p>
            	<p class="note">Different WebAsyncRefreshPanels can not have the same triggers.</p>
            	<p class="note">That the property is passed to the client as it is. It will have the effect only if the client has html elements with corresponding ids.<br></br>
            For example, aspx Button control renders the INPUT element which click event triggers submit. The id of that element is equal to ClientID of Button. So, the UniqueID or ClientID of Button can be used in that method.<br></br>
            Another example, aspx TextBox control with enabled AutoPostBack may call function __doPostBack with value of its UniqueID as a first parameter. So, the only UniqueID of that TextBox can be used in that method.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.TriggerPostBackIDs">
            <summary>The list of the ids of child controls that are located inside of this control and which may trigger full postback.</summary>
            <remarks>
            <p class="body">The list contains UniqueIDs of controls separated by coma.</p>
            <p class="note">The ID-item in list can start with the "*" character and in this case all contols which UniqueIDs end up with that value will be included. That can be useful when control is located in a INamingContainer such as UserControl.</p>
            <p class="note">That property is passed to client as it is. It will have effect only if client has html elements with corresponding ids which raise postback.<br></br>
            For example, aspx Button control renders the INPUT element which click event triggers submit. The id of that element is equal to ClientID of Button. So, the UniqueID or ClientID of Button can be used in that method.<br></br>
            Another example, aspx TextBox control with enabled AutoPostBack may call function __doPostBack with value of its UniqueID as a first parameter. So, the only UniqueID of that TextBox can be used in that method.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.TriggerPostBackNoResponseIDs">
            <summary>
            The list of the ids of controls that trigger asynchronous postback with suppressed responses.
            </summary>
            <remarks>
            	<p class="body">That property is designed to notify the server about an event on the client without processing a response. It can be usefull when the response is binary and can not be processed by the html which raised a submit postback.  For example, a button which activates ExcelExporter.</p>
            	<p class="body">The list contains UniqueIDs of controls separated by comas.</p>
            	<p class="note">The ID-item in the list can start with the "*" character as a wildcard and in this case all contols which UniqueIDs end with that value will be included. That can be useful when a control is located in a INamingContainer such as UserControl.</p>
            	<p class="note">That property is passed to the client as it is. It will have effect only if the client has html elements with corresponding ids which raise a postback.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RefreshTargetIDs">
            <summary>
            The list of controls that are located outside of this control and contents that are updated by the response triggered by a hidden asynchronous postback.
            </summary>
            <remarks>
            	<p class="body">The list contains UniqueIDs of controls separated by commas.</p>
            	<p class="note">If the item in list does not represent ICallBackResponseRenderer, then support is limited or it can be not available.  In controls such as TextBox, DropDownList, CheckBox, etc, the only data-property is updated.
            An unknown 3rd party control should have property Text or Value and the "value" of an html element with id equal to items in list are updated.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RefreshInterval">
            <summary>The time interval in milliseconds which is used to automatically trigger asynchronous postback.</summary>
            <remarks>
            <p class="note">Any positive value will create endless loop on client which will refresh content of this control from server.</p>
            <p class="note">Notes:<br></br> 1. Time interval is measured between last response and next new request.<br></br>
            2. Coming response(s) will disrupt editing process in fields located in panel.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.DefaultButton">
            <summary>That property is not available.</summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.ScrollBars">
            <summary>That property is not available.</summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.GroupingText">
            <summary>That property is not available.</summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.ClientSideEvents">
            <summary>
            The ClientSideEvents object which maintains the names of JavaScript functions or any other custom JavaScript statements that are to be called on the client side in response to various events related to WebAsyncRefreshPanel.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.InitializePanel">
            <summary>
            Internal property which wraps ClientSideEvents.Initialize.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RefreshResponse">
            <summary>
            Internal property which wraps ClientSideEvents.RefreshResponse.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RefreshRequest">
            <summary>
            Internal property which wraps ClientSideEvents.RefreshRequest.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.RefreshComplete">
            <summary>
            Internal property which wraps ClientSideEvents.RefreshComplete.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.ClientError">
            <summary>
            Internal property which wraps ClientSideEvents.Error.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanel.IsAsyncPostBack">
            <summary>
            Checks if the current postback of Page is asynchronous and it is processed by this WebAsyncRefreshPanel.
            </summary>
            <remarks>
            <p class="body">If value true is returned, then it means that postback was triggered by a child control or by a control included in the TriggerControlIDs property. In this case the this WebAsyncRefreshPanel acts as the response manager: builds response stream, fires events and updates all linked panels and targets.</p>
            <p class="body">If application needs to pass a script from server to client, then it can add a Literal control with desired data to WebAsyncRefreshPanel.<br></br>
            Example:<br></br>
            System.Web.UI.WebControls.Literal js = new System.Web.UI.WebControls.Literal();<br></br>
            js.Text = "&lt;script type='text/javascript'&gt;alert('my script');&lt;/script&gt;";<br></br>
            this.WebAsyncRefreshPanel1.Controls.Add(js);
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Misc.RefreshHandler">
            <summary>Handler for asynchronous postback event.</summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebAsyncRefreshPanelClientSideEvents">
            <summary>
            Object that keeps the list of names for event function handlers used by JavaScript on client side.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanelClientSideEvents.IsEmpty">
            <summary>
            Check if any property is set.
            </summary>
            <returns>True if any property is set.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanelClientSideEvents.Reset">
            <summary>
            Reset all properties.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebAsyncRefreshPanelClientSideEvents.ToString">
            <summary>String formatted for visual designer.</summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanelClientSideEvents.InitializePanel">
            <summary>
            Event fired after WebAsyncRefreshPanel was initialized.
            </summary>
            <remarks>
            <p class="body">Value of this property can be the name of a javascript function, or a javascript statement/expression.</p>
            <p class="body">If the name of javascript function is used, then event handler on the client script may contain 1 parameter.
            <OL>
             <LI>oPanel: the reference to the JavaScript object that represents WebAsyncRefreshPanel.</LI>
            </OL>
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanelClientSideEvents.RefreshResponse">
            <summary>
            Event fired before panel content was updated by asynchronous response.
            </summary>
            <remarks>
            <p class="body">Value of this property can be the name of a javascript function, or a javascript statement/expression.</p>
            <p class="body">If the name of javascript function is used, then event handler on the client script may contain 2 parameters.
            <OL>
             <LI>oPanel: the reference to the JavaScript object that represents WebAsyncRefreshPanel.</LI>
             <LI>oEvent: the reference to the event object.</LI>
            </OL>
            </p>
            <p class="note">Note: update of content from response stream can be canceled by oEvent.cancel=true;</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanelClientSideEvents.RefreshRequest">
            <summary>
            Event fired before asynchronous submit.
            </summary>
            <remarks>
            <p class="body">Value of this property can be the name of a javascript function, or a javascript statement/expression.</p>
            <p class="body">If the name of javascript function is used, then event handler on the client script may contain 3 parameters.
            <OL>
             <LI>oPanel: the reference to the JavaScript object that represents WebAsyncRefreshPanel.</LI>
             <LI>oEvent: the reference to the event object.</LI>
             <LI>id: the id of the html element which raised submit.</LI>
            </OL>
            </p>
            <p class="note">Notes:
            <OL>
            <LI>Submit can be canceled by <b>oEvent.cancel=true;</b></LI>
            <LI>Response can be canceled by <b>oEvent.cancelResponse=true;</b></LI>
            <LI>Full postback can be triggered by <b>oEvent.fullPostBack=true;</b></LI>
            </OL></p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanelClientSideEvents.RefreshComplete">
            <summary>
            Event fired after panel content was updated by asynchronous response.
            </summary>
            <remarks>
            <p class="body">Value of this property can be the name of a javascript function, or a javascript statement/expression.</p>
            <p class="body">If the name of javascript function is used, then event handler on the client script may contain 1 parameter.
            <OL>
             <LI>oPanel: the reference to the JavaScript object that represents WebAsyncRefreshPanel.</LI>
            </OL>
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebAsyncRefreshPanelClientSideEvents.Error">
            <summary>
            Event fired when error occurs.
            </summary>
            <remarks>
            	<p class="body">Value of this property can be the name of a javascript function, or a javascript statement/expression.</p>
            	<p class="body">If the name of javascript function is used, then event handlers on the client script may contain up to 3 parameters.
             <OL>
            			<LI>oPanel: the reference to the JavaScript object that represents WebAsyncRefreshPanel.</LI>
            			<LI>oEvent: the reference to the event object.</LI>
            			<LI>flags: numeric bit flags.
            	<ul>
            					<li>1 - server error while processing request on level of application. Full postback will be triggered at once after that event.</li>
            					<li>2 - server error while processing request in form. The content of control is not updated.</li>
            					<li>4 - client error while processing response from server in this panel. Failure to update content (innerHTML of DIV).</li>
            					<li>6 - time out while waiting for response. Response was not processed.</li>
            					<li>8 - client error while processing response from server in a child and/or in a dependant control. Failure to update content of dependant control.</li>
            					<li>16 - client error while running javascript.</li>
            					<li>32 - client error while building STYLE object for css classes.</li>
            				</ul>
            			</LI>
            		</OL>
            		<i>Example:</i><br></br>
            function WARP1Error(oPanel,oEvent,flags)<br></br>
            {<br></br>
               if(flags == 1) alert('Application exception: next is full submit.');<br></br>
               if(flags == 6) alert('Timeout to wait for response.');<br></br>
               if((flags &amp; 16) != 0) alert('Javascript failure');<br></br>
            }</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Misc.DefaultConstants">
            <summary>
            This Class is for Infragistics Internal Use Only.
            The DefaultConstants class is used to provide default values for the Control.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebGroupBox">
            <summary>
            The GroupBox is a Web version of the Windows Forms GroupBox control.  It provides a container for grouping controls visually.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebGroupBox.#ctor">
            <summary>
            Default Constructor.  Creates a new instance of the GroupBox control.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebGroupBox.OnInit(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebGroupBox.CreateControlStyle">
            <summary>
            Creates the Style object that will be used to control the GroupBox's appearance.
            </summary>
            <returns>An instance of an Infragistics.WebUI.Shared.Style class</returns>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebGroupBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Writes the HTML representation of this control, to the HtmlTextWriter provided.
            </summary>
            <param name="writer">An instance of an HtmlTextWriter</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebGroupBox.OnPreRender(System.EventArgs)">
            <summary>
            This method is the last thing to be called, before the control is actually rendered.  
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebGroupBox.ShouldSerializeBrowserTarget">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebGroupBox.ResetBrowserTarget">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebGroupBox.Infragistics#WebUI#Shared#IProvideAppStyling#DesignRefresh(System.Boolean,System.String,System.String)">
            <summary>
            Called by the Application Styling Framework(tm) to refresh the WebGroupBox control after a change at design-time.
            </summary>
            <param name="enableAppStyling">The EnableAppStyling setting for the AppStylingManager</param>
            <param name="styleSetName">The StyleSet setting for the AppStylingManager</param>
            <param name="styleSetPath">The StyleSetPath setting for the AppStylingManager</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebGroupBox.SaveViewState">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebGroupBox.LoadViewState(System.Object)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebGroupBox.TrackViewState">
            <summary></summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebGroupBox.Text">
            <summary>
            Gets or sets the Text which will be displayed for this control.  The text will appear vertically centered with respect to the Top border.  The horizontal alignment is controlled through the TextAlignment property.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebGroupBox.TitleAlignment">
            <summary>
            Controls the horizontal alignment of the Text.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebGroupBox.BrowserTarget">
            <summary></summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebGroupBox.WebAgent">
            <summary>
            Holds a reference to the app style proxy object.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebGroupBox.StyleSetName">
            <summary>
            Name of the Application Styling Framework(tm) style set defining the themed appearance for this WebGroupBox control.
            </summary>
            <value>
            	<p class="body">The name of the Application Styling Framework(tm) (ASF)
            style set which has been designed to give this WebGroupBox control a
            consistent appearance with other controls in your application.</p>
            	<p class="body">This property may return the empty string ("") to
            imply that the default style set (named "Default") should be used.</p>
            </value>
            <remarks>
            	<p class="body">Web sites can configure a single, consistent,
            application-wide style set through the <em>styleSetName</em>
            attribute in their "web.config" file. Alternately, they can
            define the style set to apply Application Styling to all
            controls on a Page by placing a <strong>WebPageStyler</strong>
            control on that Page and setting it's StyleSetName property.</p>
            	<p class="body">At the control level this property allows an
            application developer to customize the style set applied to a
            single instance of a control.</p>
            	<p class="body">Normally, graphics designers will furnish you
            with a style set containing one or more style sheet files (one
            for each type of control) and image files. The name of the style
            set (with the exception of the "Default" style set) must appear
            in each Cascading Style Sheet (CSS) class name defined by this
            control's style sheet file. For example, two WebTree controls
            that each use a different style set, "Aqua" and "Onyx", would
            expect their CSS class names for the ASF <em>Node</em> role to
            be "igtr_AquaNode" and "igtr_OnyxNode", respectively. This
            allows the uniqueness of CSS class names necessary to distinguish
            multiple style sets for the same type of control, without there
            being any naming collisions.</p>
            </remarks>
            <seealso cref="P:Infragistics.WebUI.Misc.WebGroupBox.StyleSetPath"/>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebGroupBox.Infragistics#WebUI#Shared#IProvideAppStyling#StyleSheetFileName">
            <summary>
            File name and path to the CSS stylesheet for this <b>WebControl</b>.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebGroupBox.Infragistics#WebUI#Shared#IProvideAppStyling#ParsedStyles">
            <summary>
            Contains the <b>ParsedStyleCollection</b> consisting of CSS class definitions read from external sources.
            </summary>
            <value>The <b>ParsedStyleCollection</b> after external CSS class
            definitions have been parsed, or null (Nothing in Visual Basic .NET)
            if parsing hasn't been performed yet.</value>
            <remarks>
            	<p class="body"></p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebGroupBox.EnableAppStyling">
            <summary>
            Enables support on WebGroupBox for the Application Styling Framework(tm).
            </summary>
            <value>
            <em>True</em> indicates Application Styling is enabled, <em>False</em>
            indicates Application Styling is disabled, and <em>NotSet</em> indicates
            support for Application Styling should default to page- or application-level
            settings.
            </value>
            <remarks>
            <p class="body">Turn on support for Application Styling of WebGroupBox
            when using the Application Styling Framework(tm) (ASF) by setting the 
            EnableAppStyling property to True.</p>
            <p class="body">When EnableAppStyling has it's default value of NotSet,
            this control will defer the determination of whether to use Application
            Styling to settings you make at the page- or application-level.  Place
            the <strong>WebPageStyler</strong> control on the same Web form as this control
            to configure ASF support for all controls on that Page.  ASF support can
            also be turned on application-wide with the <em>enableAppStyling</em>
            attribute in your "web.config" file.</p>
            <p class="body">Turn off support for the ASF in WebGroupBox (even though
            it may have been enabled at a higher level) by setting the EnableAppStyling
            property to False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebGroupBox.StyleSetPath">
            <summary>
            Path containing the Application Styling Framework(tm) style set files for this type of control.
            </summary>
            <remarks>
            	<p class="body">Web sites can configure the directory path containing
            their style set files application-wide by using the <em>styleSetPath</em>
            attribute of their "web.config" file. It is also possible to configure
            the style set path applicable to all controls on a Page that are subject
            to Application Styling by placing a <strong>WebPageStyler</strong> control
            on that Page and setting it's StyleSetPath property.</p>
            	<p class="body">At the control level this property allows an
            application developer to customize the location of the style set
            being applied to a single instance of a control.</p>
            	<p class="note">Be aware that customizing the style set path at the control
            level will not allow you to copy a style set's files to this new location,
            changing a few style property values in them, and then use it successfully
            with separate instances of the control referencing the original style set
            of the same name. This is because there would be naming collisions in the
            Cascading Style Sheet (CSS) class names, which will produce an undefined
            appearance. You must ensure the CSS class names defined by style sheets
            in the new style set path are unique from those CSS class names being
            used by other style sheets that may continue to be referenced. The
            recommended guidance in this scenario is to create a new style set
            having a new style set name, that contains your modifications.</p>
            </remarks>
            <seealso cref="P:Infragistics.WebUI.Misc.WebGroupBox.StyleSetName"/>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebGroupBox.Infragistics#WebUI#Shared#IProvideAppStyling#StylePrefix">
            <summary>
            Returns a string prefix value that is used within the CSS file to prefix each style class name.  Can be overridden to change the prefix used for this control.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebGroupBox.PresetMaskResourcePath">
            <summary>
            Supports the Infragistics Preset architecture.  For Infragistics Internal Use.
            </summary>
            <returns>The resource path of the xml file, used as the Preset Mask (Filter).</returns>
        </member>
        <member name="T:Infragistics.WebUI.Misc.GroupBoxRenderBase">
            <summary>
            Provides a base implementation of a Renderer.  The renderer is responsible for turning a Control into HTML.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.GroupBoxRenderBase.#ctor(Infragistics.WebUI.Misc.WebGroupBox,System.Boolean)">
            <summary>
            Creates a new instance of the Renderer.  This constructor will throw an ArgumentException if owner is null.
            </summary>
            <param name="owner">A valid instance of a GroupBox control.</param>
            <param name="isDesignMode">A flag indicating whether this renderer will be used for Design-Time functionality</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.GroupBoxRenderBase.#ctor(Infragistics.WebUI.Misc.WebGroupBox)">
            <summary>
            Creates a new instance of the Renderer, to be used for the Runtime rendering.  If you need the Renderer to provide DesignTime data, use the overloaded constuctor - specifiying "true" for the isDesignMode parameter.
            </summary>
            <param name="owner">A valid instance of a GroupBox control.  This ctor will throw an ArgumentException if owner is null.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.GroupBoxRenderBase.RenderBeginTag(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Writes the BeginTag for the GroupBox being rendered, to the specified writer.
            </summary>
            <param name="writer">A valid instance of an HtmlTextWriter.</param>
            <param name="tagName">The tag which will be used as the outer most element for this control.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.GroupBoxRenderBase.CreateCssRegionMappings">
            <summary>
            For Infragistics Internal Use.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.GroupBoxRenderBase.CreateDefaultCssRegionMappings">
            <summary>
            For Infragistics Internal Use.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.GroupBoxRenderBase.OwnerGroupBox">
            <summary>
            Returns the GroupBox which was passed into the constructor (the control which is being rendered)
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.RenderDownLevelGroupBox">
            <summary>
            This renderer is responsible for rendering the control in a cross browser compatible way, which is supported by all browsers.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderDownLevelGroupBox.VisitObjects(System.Web.UI.HtmlTextWriter)">
            <summary>
            Goes through the control, rendering out each logical region.
            </summary>
            <param name="writer">An instance of an HtmlTextWriter</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderDownLevelGroupBox.PrepareStyleDefaults">
            <summary>
            For Infragistics Internal Use.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.RenderUpLevelGroupBox">
            <summary>
            This renderer is responsible for creating the most feature rich possible representation of the control.  Features provided by this renderer are not available on some older browsers.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderUpLevelGroupBox.VisitObjects(System.Web.UI.HtmlTextWriter)">
            <summary>
            Walks through the control, renders out each logical region.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderUpLevelGroupBox.PrepareStyleDefaults">
            <summary>
            For Infragistics Internal Use.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderUpLevelGroupBox.GetResolvedClassNameString(System.String)">
            <summary>
            For Infragistics Internal Use.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebPanelClientSideEvents">
            <summary>
            This class provides a list of "ClientSideEvents", and allows you to specify the name of a javascript function, or "Handler" which should be called when the so named event occurs.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanelClientSideEvents.#ctor">
            <summary>
            Creates a new WebPanelClientSideEvents object, initializing it as NOT tracking viewstate.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanelClientSideEvents.#ctor(System.Boolean)">
            <summary>
            Creates a new WebPanelClientSideEvents object, and will start tracking changes in ViewState accordingly.
            </summary>
            <param name="trackViewState">A boolean value indicating whether this object should immediately start tracking changes made, and enter them into ViewState.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanelClientSideEvents.ShouldSerialize">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanelClientSideEvents.ToString">
            <summary></summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanelClientSideEvents.ExpandedStateChanging">
            <summary>
            The ExpandedStateChanging event will be fired on the client, before the Panel is expanded or collapsed.  You can use oWebPanel.getExpanded() to determine the Panel's current state.
            </summary>
            <remarks>This event can be cancelled by setting oEvent.cancel=true.  If the event is cancelled, no action will occur, and the control would continue to function as if the expand/collapse action was never started.  If this event is cancelled, the ExpandedStateChanged event will NOT fire.  This event will fire when the ExpansionIndicator is clicked, the Header is DoubleClicked, or the oWebPanel.setExpanded() function is called.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanelClientSideEvents.ExpandedStateChanged">
            <summary>
            The ExpandedStateChanged event will fire on the client, after the Expanded state of the control has been changed.  This event will fire when the ExpansionIndicator is clicked, the Header is DoubleClicked, or the oWebPanel.setExpanded() function is called.
            </summary>
            <remarks>This event can not be cancelled, as it is fired after the action has taken place.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebPanelAutoPostBack">
            <summary>
            This class is used to provide a way to set how the control responds to an action which could fire a ServerSide event.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanelAutoPostBack.#ctor">
            <summary>
            Creates a new instance of this class, initially not tracking ViewState.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanelAutoPostBack.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of this class, tracking viewstate as specified.
            </summary>
            <param name="trackViewState">Defines whether this object should start tracking any changes made to it, and enter those changes into ViewState.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanelAutoPostBack.ShouldSerialize">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanelAutoPostBack.ToString">
            <summary></summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanelAutoPostBack.ExpandedStateChanged">
            <summary>
            Determines whether the ExpandedStateChanged event will force a postback to occur.  If true, the control will post back to the server each time the Expanded state is changed on the client.  If false, the control will not initiate the postback itself.  It instead, will wait for the page to be posted by some other means.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanelAutoPostBack.ExpandedStateChanging">
            <summary>
            Determines whether the ExpandedStateChanging event will force a postback to occur.  If true, the control will post back to the server each time the Expanded state is changing on the client.  If false, the control will not initiate the postback itself.  It instead will wait for the page to be posted by some other means.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.HeaderAppearance">
            <summary>
            This class provides all properties which can be used to control the Header portion of the panel.  The header portion is the top most rectangle, which contains the Control's Text and an ExpansionIndicator (used to collapse/expand the panel).
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.#ctor(System.Web.UI.WebControls.WebControl)">
            <summary>
            Creates a new HeaderAppearance object; not initially tracking ViewState changes.
            </summary>
            <param name="parentControl">A valid instance of the control which will 'own' this instance.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.#ctor(System.Web.UI.WebControls.WebControl,System.Boolean)">
            <summary>
            Creates a new HeaderAppearance, which is set to track ViewState changes accordingly.
            </summary>
            <param name="parentControl">An instance of a control which will 'own' this instance.</param>
            <param name="isTrackingViewState">
            Indicates whether this objet should immediately start tracking all changes made
            to it, and save those changes into ViewState.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.ShouldSerializeStyle">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.ResetStyle">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.ShouldSerializeStyles">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.ResetStyles">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.ShouldSerialize">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.Reset">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.SaveViewState">
            <summary>
            This method is responsible for saving all changes made to this object from the moment it started tracking Viewstate.
            </summary>
            <seealso cref="M:Infragistics.WebUI.Misc.HeaderAppearance.TrackViewState">TrackViewState Method</seealso>
            <seealso cref="M:Infragistics.WebUI.Misc.HeaderAppearance.LoadViewState(System.Object)">LoadViewState Method</seealso>
            <returns>
            Returns an object which can be passed into the LoadViewState method, returning
            the control to the state it was in when this method was called.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.LoadViewState(System.Object)">
            <summary>
            Retuns this object back to the state it was in, when the SaveViewState method was called.
            </summary>
            <seealso cref="M:Infragistics.WebUI.Misc.HeaderAppearance.SaveViewState">SaveViewState Method</seealso>
            <seealso cref="M:Infragistics.WebUI.Misc.HeaderAppearance.TrackViewState">TrackViewState Method</seealso>
            <param name="state">
            The state object holds all information needed to return the control to the state
            it was in when "SaveViewState" was called, in turn creating this state object.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.TrackViewState">
            <summary>
            Lets this object know that it must start tracking all changes being made to itself, so that those changes can be save into ViewState.
            </summary>
            <seealso cref="M:Infragistics.WebUI.Misc.HeaderAppearance.LoadViewState(System.Object)">LoadViewState Method</seealso>
            <seealso cref="M:Infragistics.WebUI.Misc.HeaderAppearance.SaveViewState">SaveViewState Method</seealso>
        </member>
        <member name="M:Infragistics.WebUI.Misc.HeaderAppearance.ToString">
            <summary></summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.HeaderAppearance.Style">
            <summary>
            If the Url begins with "~/", the url will be resolved to the Application root at runtime. Otherwise, the Url provided here will be appended to the ImageDirectory value.  If you have specified the image Directory through a config file (such as the Web.Config), this url will be appended to the config specified value.  The Style property returns a Style object which can be used to modify the appearance of the Header.
            </summary>
            <remarks>
            This property can be used to customize the appearance of the Header rectangle.
            <see cref="P:WebPanel.Expanded">Expanded Property
            (Infragistics.WebUI.Misc.WebPanel)</see><see cref="T:Infragistics.WebUI.Misc.WebPanel">
            WebPanel Class</see><see cref="P:Infragistics.WebUI.Misc.PanelHeader.CollapsedAppearance"> CollapsedAppearance</see><see cref="P:Infragistics.WebUI.Misc.PanelHeader.ExpandedAppearance"> ExpandedAppearance</see><see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">
            Expanded Property (Infragistics.WebUI.Misc.WebPanel)</see>The set of properties used to control the appearance of the Header, when the Panel is <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">Expanded</see> (default state).
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.HeaderAppearance.Styles">
            <summary>A Style object that contains the style properties for the Header.</summary>
            <remarks>
            Use this property to provide a custom style for the Header. Common style
            attributes that can be adjusted include forecolor, backcolor, font, and content
            alignment within the header. Providing a different style enhances the appearance of the
            footer.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Misc.PanelHeader">
            <summary>
            The PanelHeader class is the logical collection of properties which control the
            Header region of the control. The Header region is the top most rectangle, and contains
            <see cref="P:Infragistics.WebUI.Misc.PanelHeader.Text">Text</see>
            and an
            <see cref="P:Infragistics.WebUI.Misc.PanelHeader.ExpansionIndicator">
            ExpansionIndicator</see>.
            </summary>
            <remarks>
            This class contains all properties which can be used to customize the Header
            region.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.#ctor(System.Web.UI.WebControls.WebControl)">
            <summary>Creates a new PanelHeader object, initially not tracking changes to its ViewState.</summary>
            <param name="parentControl">A valid reference to the control which owns this header.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.#ctor(System.Web.UI.WebControls.WebControl,System.Boolean)">
            <summary>Creates a new PanelHeader object.</summary>
            <param name="parentControl">A valid reference to the control which owns this header.</param>
            <param name="isTrackingViewState">A boolean value indicating whether this object should immediately start tracking changes to its ViewState.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ShouldSerializeExpandedAppearance">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetExpandedAppearance">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ShouldSerializeHoverAppearance">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetHoverAppearance">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ShouldSerializeCollapsedAppearance">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetCollapsedAppearance">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetBackColor">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetForeColor">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetBackgroundImage">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetBorderStyle">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetBorderColor">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetBorderWidth">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetCursor">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetPadding">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetHeight">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ShouldSerializeExpansionIndicator">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ResetExpansionIndicator">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.SaveViewState">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.LoadViewState(System.Object)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.TrackViewState">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ShouldSerialize">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.Reset">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.PanelHeader.ToString">
            <summary></summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.Text">
            <summary>
            A String which will be be displayed inside of the Header, horizontally positioned according to the <see cref="P:Infragistics.WebUI.Misc.PanelHeader.TextAlignment"> TextAlignment Property</see>.
            </summary>
            <seealso cref="P:Infragistics.WebUI.Misc.PanelHeader.TextAlignment">TextAlignment Property</seealso>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.TextAlignment">
            <summary>
            The horizontal alignment of the <see cref="P:Infragistics.WebUI.Misc.PanelHeader.Text">Text</see> inside of the Header.
            </summary>
            <seealso cref="P:Infragistics.WebUI.Misc.PanelHeader.Text">Text Property</seealso>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.ExpandedAppearance">
            <summary>
            Controls the Default Appearance of the Header region. Contains the set of properties used to control the appearance of the Header, when the Panel is <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">Expanded</see> (default state).
            </summary>
            <remarks>
            The ExpandedAppearance is used as the base (deafult) appearance for the PanelHeader.  The <see cref="P:Infragistics.WebUI.Misc.PanelHeader.CollapsedAppearance">
            CollapsedAppearance</see> will use the values set in this appearance by default.  The <see cref="P:Infragistics.WebUI.Misc.PanelHeader.HoverAppearance"> HoverAppearance</see> will also use this appearance as the base (default) appearance.
            </remarks>
            <seealso cref="P:Infragistics.WebUI.Misc.PanelHeader.CollapsedAppearance">CollapsedAppearance Property</seealso>
            <seealso cref="P:Infragistics.WebUI.Misc.PanelHeader.HoverAppearance">HoverAppearance Property</seealso>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.HoverAppearance">
            <summary>
            The HoverAppearance contains all properties which can be used to customize the appearance of the Header, when the mouse is positionied over the Header region.
            </summary>
            <remarks>
            The HoverAppearance is used to override values on the currently applied appearance, when the Header is moused over.  If the WebPanel is currently <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">Expanded</see>,
            this appearance will override values of the <see cref="P:Infragistics.WebUI.Misc.PanelHeader.ExpandedAppearance"> ExpandedAppearance</see>, otherwise it will override values of the <see cref="P:Infragistics.WebUI.Misc.PanelHeader.CollapsedAppearance">
            CollapsedAppearance</see>. If a value has not been defined in this appearance, it will use the value from the currently applied appearance.
            </remarks>
            <seealso cref="P:Infragistics.WebUI.Misc.PanelHeader.ExpandedAppearance">ExpandedAppearance Property</seealso>
            <seealso cref="P:Infragistics.WebUI.Misc.PanelHeader.CollapsedAppearance">CollapsedAppearance Property</seealso>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.CollapsedAppearance">
            <summary>
            The set of properties used to control the appearance of the Header, when the Panel is <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">Collapsed</see>.
            </summary>
            <remarks>The CollapsedAppearance uses the <see cref="P:Infragistics.WebUI.Misc.PanelHeader.ExpandedAppearance"> ExpandedAppearance</see> as its base (default). If a value is not defined in the CollapsedAppearance, the value will be take from the ExpandedAppearance.  When the Header is moused over, the <see cref="P:Infragistics.WebUI.Misc.PanelHeader.HoverAppearance"> HoverAppearance</see> will be applied.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.BackColor">
            <summary>
            Gets or sets the background color used for the Panel's Header. This property is mapped to the <see cref="P:Infragistics.WebUI.Misc.PanelHeader.ExpandedAppearance"> ExpandedAppearance</see>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.ForeColor">
            <summary>
            Gets or sets the foreground color used for the Panel's Header.  This property comes from the Panel's Header.ExpandedAppearance.Style.ForeColor.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.Font">
            <summary>
            Gets or sets the font used for the Panel's Header.  This property comes from the Panel's Header.ExpandedAppearance.Style.Font.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.BackgroundImage">
            <summary>
            Gets or sets the background image used for the Panel's Header.  This property comes from the Panel's Header.ExpandedAppearance.Style.BackgroundImage
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.BorderStyle">
            <summary>
            Gets or sets the BorderStyle used for the Panel's Header.  This property comes from the Panel's Header.ExpandedAppearance.Style.BorderStyle
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.BorderColor">
            <summary>
            Gets or sets the border color used for the Panel's Header.  This property comes from the Panel's HeaderExpandedAppearance.Style.BorderColor
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.BorderWidth">
            <summary>
            Gets or sets the border width used for the Panel's Header.  This property comes from the Panel's Header.ExpandedAppearance.Style.BorderWidth
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.Cursor">
            <summary>
            Gets or sets the cursor used for the Panel's Header.  This property comes from the Panel's Header.ExpandedAppearance.Style.Cursor
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.Padding">
            <summary>
            Gets or sets the padding used for the Panel's Header.  This property comes from the Panel's Header.ExpandedAppearance.Style.Padding.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.Height">
            <summary>
            Gets or sets the Height used for the Panel's Header.  This property comes from the Panel's Header.ExpandedAppearance.Style.Height.
            </summary>
            <remarks>This value is automatically calculated based on the height of the contents displayed inside of the Header.  This value may be ignored if the contents of the header require more space than this value allows.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.Visible">
            <summary>
            Gets or sets the visibility of the PanelHeader. This property can be used to hide the Header, and make the Panel look identical to the built in Panel.
            </summary>
            <remarks>
            This property toggles the "Display" value of the Header. When the PanelHeader is
            set to Visible=false, the entire height of the control will be used to display the
            Content of the WebPanel.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.PanelHeader.ExpansionIndicator">
            <summary>
            Gets the ExpansionIndicator object.  The ExpansionIndicator contains all properties related to the 'ImageButton' located at the right edge of the PanelHeader.
            </summary>
            <remarks>The ExpansionIndicator is used to show the current expanded state of the panel, as well as allow you to change the current state by clicking on the image shown. If you wish to hide the Inidcator, you can set it's width and height to 0, or supply a transparent image.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.Misc.RenderUpLevelPanel">
            <summary>
            The RenderUPLevelPanel class is used to provide Rendering support for the Panel,
            and is not intended to be used directly.
            </summary>
            <remarks>
            This class provides Rendering support, and is not intended to be used
            directly.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderUpLevelPanel.#ctor(Infragistics.WebUI.Misc.WebPanel,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderUpLevelPanel.#ctor(Infragistics.WebUI.Misc.WebPanel)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderUpLevelPanel.RegisterGeneralJavaScript">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderUpLevelPanel.PrepareStyleDefaults">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderUpLevelPanel.VisitObjects(System.Web.UI.HtmlTextWriter)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderUpLevelPanel.CreateCssRegionMappings">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderUpLevelPanel.CreateDefaultCssRegionMappings">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.RenderUpLevelPanel.GetResolvedClassNameString(System.String)">
            <summary></summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.TwoStateImageButton">
            <summary>
            Provides an image which can be toggled between two states, each state having its
            own Url.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.TwoStateImageButton.#ctor(Infragistics.WebUI.WebControls.IProvideImageDirectoryResolution,System.Boolean)">
            <summary>
            Creates a new TwoStateImageButton, using the parameters specified. The IProvideImageDirectoryResolution object is not required, but is recommended for providing Url resolution and accounting for Web.Config settings.
            </summary>
            <param name="provider">
            An instance of an object which implements the IProvideImageDirectoryResolution
            interface. While not required, this parameter should be specified in order for the
            TwoStateImageButton to accurately determine the full path of the Image Url
            provided.
            </param>
            <param name="trackViewState">
            A boolean value indicating whether this control should immediately start tracking
            any ViewState changes.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.TwoStateImageButton.#ctor">
            <summary>
            Creates a new TwoStateImageButton, initially not tracking changes to its ViewState.
            </summary>
            <remarks>
            When using this constructor, the TwoStateImageButton created will not be able to
            provide any ImageDirectoryResolution. It will simply render the Image Url as it was
            set.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Misc.TwoStateImageButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary>Writes the object out as an HTML Image.</summary>
            <param name="writer">A valid instance of an HtmlTextWriter.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.TwoStateImageButton.Render(System.Web.UI.HtmlTextWriter,Infragistics.WebUI.Shared.WebAgent)">
            <summary>Writes the object out as an HTML Image when Application Styling Framework is used.</summary>
            <param name="writer">A valid instance of an HtmlTextWriter.</param>
            <param name="agent">A valid instance of a WebAgent that the control is using to support Application Styling.</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.TwoStateImageButton.ToString">
            <summary></summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.TwoStateImageButton.Url">
            <summary>
            The URL of the image to be displayed. This property is the same as the <see cref="P:Infragistics.WebUI.Misc.TwoStateImageButton.ExpandedImageUrl"> ExpandedImageUrl Property</see>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.TwoStateImageButton.ExpandedImageUrlResolved">
            <summary>Gets the resolved URL for the image to be used by the browser.</summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.TwoStateImageButton.UrlResolved">
            <summary>Gets the resolved URL to be used by the browser.</summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.TwoStateImageButton.CollapsedImageUrlResolved">
            <summary>Gets the resolved URL for the image to be used by the browser.</summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.TwoStateImageButton.ExpandedImageUrl">
            <summary>
            The Url of an image to be displayed when the control is in the <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">Expanded state</see>
            </summary>
            <remarks>If the Url begins with "~/", the url will be resolved to the Application root at runtime. Otherwise, the Url provided here will be appended to the ImageDirectory value.  If you have specified the image Directory through a config file (such as the Web.Config), this url will be appended to the config specified value.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.TwoStateImageButton.CollapsedImageUrl">
            <remarks>If the Url begins with "~/", the url will be resolved to the Application root at runtime.  Otherwise, the Url provided here will be appended to the ImageDirectory value.  If you have specified the image Directory through a config file (such as the  Web.Config), this url will be appended to the config specified value.</remarks>
            <summary>
            The Url of an image to be displayed when the control is in the <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">Collapsed state</see>
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebPanel">
            <summary>
            The WebPanel is a container control, which can be used to group content at
            design-time or run-time. The WebPanel is also used to control the display of that
            content at runtime. The WebPanel consists of two major regions. The top region
            (PanelHeader), is mainly provided as a means to expand or collapse the panel. When a
            panel is Expanded, its contents are visible. When the panel is collapsed, its contents
            are completely hidden, and the panel shrinks to show only its Header.
            </summary>
            <remarks>
            The WebPanel acts as a container control, displaying all controls contained in
            it's Controls collection. It also allows it's contents to be easily hidden, or
            re-displayed on the client by means of the PanelHeader.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.OnExpandedStateChanged">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.OnExpandedStateChanging">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.#ctor">
            <summary>
            Creates a new instance of a WebPanel.
            </summary>
            <remarks>
            This is the Default Constructor, used to create a new instance of a WebPanel. If
            you wish to create a WebPanel dynamically, be sure to add it to the Page's Form
            control, and not just directly to the Page.Controls collection.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.OnInit(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ShouldSerializeText">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ResetText">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ShouldSerializePanelStyle">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ResetPanelStyle">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ShouldSerializeHeader">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ResetHeader">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ShouldSerializeAutoPostBack">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ResetAutoPostBack">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.CreateControlStyle">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ShouldSerializeClientSideEvents">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ResetClientSideEvents">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.SaveViewState">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.LoadViewState(System.Object)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.TrackViewState">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.Render(System.Web.UI.HtmlTextWriter)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.OnPreRender(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ShouldSerializeBrowserTarget">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ResetBrowserTarget">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.Infragistics#WebUI#Shared#IProvideAppStyling#DesignRefresh(System.Boolean,System.String,System.String)">
            <summary>
            Called by AppStyling framework to refresh the control rendering after a change.
            </summary>
            <param name="enableAppStyling">The EnableAppStyling setting for the AppStylingManager</param>
            <param name="styleSetName">The StyleSet setting for the AppStylingManager</param>
            <param name="styleSetPath">The StyleSetPath setting for the AppStylingManager</param>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            The RaisePostBackEvent will be used for downlevel browsers only.
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="E:Infragistics.WebUI.Misc.WebPanel.ExpandedStateChanged">
            <summary>
            The ExpandedStateChangedEvent can be used to handle Expand events for the WebPanel.  An ExpandedStateChangedEvent will fire when the panel is expanded or collapsed. Use the <see cref="P:Infragistics.WebUI.Misc.WebPanel.AutoPostBack">AutoPostBack</see> property to control whether the WebPanel postsback in response to a change in the
            <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">Expanded</see> state.
            </summary>
            <seealso cref="E:ExpandedStateChanging">ExpandedStateChanging Event</seealso>
            <seealso cref="T:ExpandedStateChangedEventHandler">ExpandedStateChangedEventHandler Delegate</seealso>
            <seealso cref="P:Expanded">Expanded Property</seealso>
            <seealso cref="P:AutoPostBack">AutoPostBack Property</seealso>
            <remarks>You can determine the current state of the control, by checking the <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded.html">Expanded</see> property. Its previous state would be the opposite of its current state.</remarks>
        </member>
        <member name="E:Infragistics.WebUI.Misc.WebPanel.ExpandedStateChanging">
            <summary>
            The ExpandedStateChangingEvent can be used to handle Expanding events for the WebPanel.  An ExpandedStateChangingEvent will fire when the panel is about to expand or collapse.  Use the <see cref="P:Infragistics.WebUI.Misc.WebPanel.AutoPostBack">AutoPostBack</see> property to control whether the WebPanel will postsback in response to this event
            (before the <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">Expanded</see> state has actually changed).
            </summary>
            <remarks>You can determine the current state of the control, by checking the <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">Expanded Property</see>. The state the control will be in after this event fires (unless the event is cancelled) is the opposite of the current state.</remarks>
            <seealso cref="E:ExpandedStateChanged">ExpandedStateChanged Event</seealso>
            <seealso cref="P:Expanded">Expanded Property</seealso>
            <seealso cref="P:AutoPostBack">AutoPostBack Property</seealso>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.Text">
            <summary>
            The Text displayed in the <see cref="P:Infragistics.WebUI.Misc.WebPanel.Header">Header</see>.
            This property is the same as the <see cref="P:Infragistics.WebUI.Misc.PanelHeader.Text">Text Property (Infragistics.WebUI.Misc.PanelHeader)</see>
            </summary>
            <remarks>
            The Text's Horizontal alignment can be set by the
            <see cref="P:Infragistics.WebUI.Misc.PanelHeader.TextAlignment"> TextAlignment Property  (Infragistics.WebUI.Misc.PanelHeader)</see>
            </remarks>
            <seealso cref="P:PanelHeader.TextAlignment">TextAlignment Property (Infragistics.WebUI.Misc.PanelHeader)</seealso>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.PanelStyle">
            <summary>
            The PanelStyle controls the appearance of the area below the PanelHeader.
            </summary>
            <remarks>
            The PanelStyle can be used to customize the appearance of the Content-Area region of this control. Use the Header Appearances to customize the appearance of the Header
            region.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.Header">
            <summary>
            Gets the object which holds all settings for the header, or "Title Bar" portion of this panel.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.AutoPostBack">
            <summary>
            The AutoPostBack property controls the behavior of ServerSide event handlers. Use these properties to determine if a ServerSideEvent should force a postback to occur, the instant the event is fired.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.Expanded">
            <summary>
            The Expanded property controls the display of the Contents which this control owns. The WebPanel will display any control added to its Controls collection, inside of a Content-Area. This is the lower region of the control, displayed below the
            <see cref="P:Infragistics.WebUI.Misc.WebPanel.Header">Header</see>.
            </summary>
            <remarks>
            The Expanded property can be used to control the display of the content that this WebPanel contains. When Expanded=false, the contents of the control are completely hidden. The height of the control will simply be the height of the Header (if visible).
            Use the <see cref="P:Infragistics.WebUI.Misc.WebPanel.ExpandEffect">ExpandEffect</see> to control custom behaviors associated with the expand action. The <see cref="P:Infragistics.WebUI.Misc.WebPanel.Header">Header</see> appearance can also be customized for the different states (expanded or collapsed).
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.ExpandEffect">
            <summary>
            The ExpandEffect provides special behavior for showing/hiding the content associated with this control.
            </summary>
            <remarks>The ExpandEffect can be used to create graphical effects during the <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">Expanded</see> state transitions.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.JavaScriptFileName">
            <summary>
            The JavaScriptFileName is used to customize the path which is used to locate the JavaScriptFile necessary for this control to function on the Client-Side.
            </summary>
            <remarks>In general you do not need to modify this property value. However, if you wish to change the path along which the JavaScriptFiles are located, you will need to modify this value accordingly. You can also use a Config file to specify a different value. For more information on using a config file, see the Deployment guide section of the help.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.Section508Compliant">
            <summary>
            Configures the <strong>WebPanel</strong> element to render additional markup enhancing it's accessibility.
            </summary>
            <remarks>
            	<p class="body">When setting the <strong>Section508Compliant</strong> property
            to true, alternate text will be rendered for the <see cref="P:Infragistics.WebUI.Misc.PanelHeader.ExpansionIndicator">ExpansionIndicator</see>
            image that indicates it's state, and the expansion indicator will be rendered as
            a link for assistive technology. The WebPanel can also be keyboard accessible if
            your application assigns the WebPanel a <strong>TabIndex</strong> greater than 0.
            </p>
            	<p class="body">It is the application's responsibility to ensure any contents of
            the WebPanel have been designed equally mindfully of accessibility concerns. You
            should associate &lt;label&gt; tags with any form fields placed inside of the
            WebPanel, and give form fields a tab index.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.ClientSideEvents">
            <summary>
            ClientSideEvents can be used to add dynamic behavior to the control, which exists only on the Client (using JavaScript functions).
            </summary>
            <remarks>Use the properties of this object, to set the name of the function which can be used to handle events which occur on the client. These events can be used to create dynamic behavior with out costly postbacks to the Server.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.BrowserTarget">
            <summary>
            The BrowserTarget is used to force the control to render its contents tailored to a specific browser, or category of browsers.
            </summary>
            <remarks>
            Use this property to force the control to render its contents tailored for a
            specific browser, regardless of the actual target browser which is requesting the
            page.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.WebAgent">
            <summary>
            Holds a reference to the app style proxy object.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.StyleSetName">
            <summary>
            Name of the Application Styling Framework(tm) style set defining the themed appearance for the WebPanel control.
            </summary>
            <value>
            	<p class="body">The name of the Application Styling Framework(tm) (ASF)
            style set which has been designed to give this control a consistent
            appearance with other controls in your application.</p>
            	<p class="body">This property may return the empty string ("") to
            imply that the default style set (named "Default") should be used.
            </p>
            </value>
            <remarks>
            	<p class="body">Web sites can configure a single, consistent,
            application-wide style set through the <em>styleSetName</em>
            attribute in their "web.config" file. Alternately, they can
            define the style set to apply Application Styling to all
            controls on a Page by placing a <strong>WebPageStyler</strong>
            control on that Page and setting it's StyleSetName property.</p>
            	<p class="body">At the control level this property allows an
            application developer to customize the style set applied to a
            single instance of a control.</p>
            	<p class="body">Normally, graphics designers will furnish you
            with a style set containing one or more style sheet files (one
            for each type of control) and image files. The name of the style
            set (with the exception of the "Default" style set) must appear
            in each Cascading Style Sheet (CSS) class name defined by this
            control's style sheet file. For example, two WebTree controls
            that each use a different style set, "Aqua" and "Onyx", would
            expect their CSS class names for the ASF <em>Node</em> role to
            be "igtr_AquaNode" and "igtr_OnyxNode", respectively. This
            allows the uniqueness of CSS class names necessary to distinguish
            multiple style sets for the same type of control, without there
            being any naming collisions.</p>
            </remarks>
            <seealso cref="P:Infragistics.WebUI.Misc.WebPanel.StyleSetPath"/>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.Infragistics#WebUI#Shared#IProvideAppStyling#StyleSheetFileName">
            <summary>
            File name and path to the CSS stylesheet for this <b>WebControl</b>.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.Infragistics#WebUI#Shared#IProvideAppStyling#ParsedStyles">
            <summary>
            Contains the <b>ParsedStyleCollection</b> consisting of CSS class definitions read from external sources.
            </summary>
            <value>
            The <b>ParsedStyleCollection</b> after external CSS class
            definitions have been parsed, or null (Nothing in Visual Basic .NET).
            if parsing hasn't been performed yet.
            </value>
            <remarks>
            	<p class="body"></p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.EnableAppStyling">
            <summary>
            Enables support on WebPanel for the Application Styling Framework(tm).
            </summary>
            <value>
            <em>True</em> indicates Application Styling is enabled, <em>False</em>
            indicates Application Styling is disabled, and <em>NotSet</em> indicates
            support for Application Styling should default to page- or application-level
            settings.
            </value>
            <remarks>
            <p class="body">Turn on support for Application Styling of WebPanel
            when using the Application Styling Framework(tm) (ASF) by setting the 
            EnableAppStyling property to True.</p>
            <p class="body">When EnableAppStyling has it's default value of NotSet,
            this control will defer the determination of whether to use Application
            Styling to settings you make at the page- or application-level.  Place
            the <strong>WebPageStyler</strong> control on the same Web form as this control
            to configure ASF support for all controls on that Page.  ASF support can
            also be turned on application-wide with the <em>enableAppStyling</em>
            attribute in your "web.config" file.</p>
            <p class="body">Turn off support for the ASF in WebPanel(even though
            it may have been enabled at a higher level) by setting the EnableAppStyling
            property to False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.StyleSetPath">
            <summary>
            Path containing the Application Styling Framework(tm) style set files for this type of control.
            </summary>
            <remarks>
            	<p class="body">Web sites can configure the directory path containing
            their style set files application-wide by using the <em>styleSetPath</em>
            attribute of their "web.config" file. It is also possible to configure
            the style set path applicable to all controls on a Page that are subject
            to Application Styling by placing a <strong>WebPageStyler</strong> control
            on that Page and setting it's StyleSetPath property.</p>
            	<p class="body">At the control level this property allows an
            application developer to customize the location of the style set
            being applied to a single instance of a control.</p>
            	<p class="note">Be aware that customizing the style set path at the control
            level will not allow you to copy a style set's files to this new location,
            changing a few style property values in them, and then use it successfully
            with separate instances of the control referencing the original style set
            of the same name. This is because there would be naming collisions in the
            Cascading Style Sheet (CSS) class names, which will produce an undefined
            appearance. You must ensure the CSS class names defined by style sheets
            in the new style set path are unique from those CSS class names being
            used by other style sheets that may continue to be referenced. The
            recommended guidance in this scenario is to create a new style set
            having a new style set name, that contains your modifications.</p>
            </remarks>
            <seealso cref="P:Infragistics.WebUI.Misc.WebPanel.StyleSetName"/>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.Infragistics#WebUI#Shared#IProvideAppStyling#StylePrefix">
            <summary>
            Returns a string prefix value that is used within the CSS file to prefix each style class name.  Can be overridden to change the prefix used for this control.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.PresetMaskResourcePath">
            <summary></summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebPanel.ExpandedStateChangedEventHandler">
            <summary>
            The ExpandedStateChangedEventHandler can be used to handle Expand events for the WebPanel.  An ExpandedStateChangedEvent will fire when the panel is expanded or collapsed.  Use the AutoPostBack property to control whether the WebPanel postsback in response to a change in the Expanded state.
            </summary>
            <param name="sender">The object responsible for firing the event.</param>
            <param name="e">The EventArgs associated with this event.</param>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebPanel.ExpandedStateChangedEventArgs">
            <summary>
            This class is used to provide information regarding the ExpandedStateChanged
            event, to any handlers.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ExpandedStateChangedEventArgs.#ctor(System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebPanel.ExpandedStateChangingEventHandler">
            <summary>
            The ExpandedStateChangingEventHandler can be used to handle Expanding events for
            the WebPanel. An ExpandedStateChangingEvent will fire when the panel is about to expand
            or collapse. Use the
            <see cref="P:Infragistics.WebUI.Misc.WebPanel.AutoPostBack">AutoPostBack</see>
            property to control whether the WebPanel will postsback in response to this event
            (before the expanded state has actually changed).
            </summary>
            <remarks>
            This event can be cancelled by setting the
            <see cref="P:Infragistics.WebUI.Misc.WebPanel.ExpandedStateChangingEventArgs.Cancel">
            Cancel</see> property off of the
            <see cref="T:Infragistics.WebUI.Misc.WebPanel.ExpandedStateChangingEventArgs">
            EventArgs</see>.
            </remarks>
            <seealso cref="T:WebPanel.ExpandedStateChangingEventArgs">ExpandedStateChangingEventArgs Class</seealso>
            <seealso cref="T:ExpandedStateChangedEventHandler">ExpandedStateChangedEventHandler Delegate</seealso>
            <param name="sender">The object responsible for firing this event.</param>
            <param name="e">The event arguments which are associated with this event.</param>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebPanel.ExpandedStateChangingEventArgs">
            <summary>
            The ExpandedStatechangingEventArgs are used to provide information to handlers
            for the ExpandedStateChanging event.
            </summary>
            <remarks>
            Use the Cancel property to cancel the event, and keep the ExpandingState from
            changing. You can determine the current state of the control by checking the
            <see cref="P:Infragistics.WebUI.Misc.WebPanel.Expanded">Expanded
            Property (Infragistics.WebUI.Misc.WebPanel)</see>
            </remarks>
            <seealso cref="T:ExpandedStateChangingEventHandler">ExpandedStateChangingEventHandler Delegate</seealso>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanel.ExpandedStateChangingEventArgs.#ctor(System.Boolean)">
            <summary></summary>
        </member>
        <member name="P:Infragistics.WebUI.Misc.WebPanel.ExpandedStateChangingEventArgs.Cancel">
            <summary>
            Used to cancel the Expanded state change, about to be performed on the WebPanel.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Misc.WebPanelDefaultConstants">
            <summary>
            Summary description for WebPanelDefaultConstants.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Misc.WebPanelDefaultConstants.#ctor">
            <summary></summary>
        </member>
    </members>
</doc>
