<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics35.WebUI.UltraWebGrid.v8.2</name>
    </assembly>
    <members>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ActivationObject">
            <summary>The ActivationObject object specifies the properties and methods that will be applied to 
            the active rectangle object of the grid. The active object is the object that has input focus.
            </summary>
            <remarks>
            <p class="body">The ActivationObject controls the look and behavior of the rectangle that appears 
            around individual rows and cells as they are selected with the mouse or keyboard on the client.
            The Activation object provides visual feedback to the user telling him or her which cell is currently 
            active within the grid.  The ActivationObject is created automatically by UltraWebGrid.</p>
            <p class="body">Using the ActivationObject, the color, width and style of the Activation rectangle 
            can be set. If the grid is meant to be read-only, the Activation rectangle can be turned off 
            completely using the AllowActivation property.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ActivationObject.#ctor">
            <summary>
            Default constructor.
            </summary>
            <remarks>
            <p class="body">This object is created automatically by the WebGrid.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ActivationObject.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.ActivationObject"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
            <returns>The string value representation of the control. In this case an empty string.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ActivationObject.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ActivationObject"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the ActivationObject class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the ActivationObject will return False until set again.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ActivationObject.CopyFrom(Infragistics.WebUI.UltraWebGrid.ActivationObject)">
            <summary>
            Copies the property settings of the specified ActivationObject object to the current ActivationObject object.
            </summary>
            <remarks>
            <p class="body">When you pass an ActivationObject object to this method, the <b>AllowActivation</b>, <b>BorderColor</b>, <b>BorderStyle</b> and <b>BorderWidth</b> of the passed-in object will be applied to the values of the current object.</p>
            </remarks>
            <param name="passin">An ActivationObject object whose settings you want to apply to those of the current ActivationObject object.</param>
            <returns>The current ActivationObject object with its properties set to the values from the passed-in object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ActivationObject.Clone">
            <summary>
            Creates an copy of the existing ActivationObject object.
            </summary>
            <remarks>
            <p class="body">This method creates a new object identical to the instance that is being cloned.</p>
            </remarks>
            <returns>A new ActivationObject object with settings identical to those of the current ActivationObject object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ActivationObject.TrackViewState">
            <summary>
            Marks modified elements for serialization into ViewState
            </summary>
            <remarks>
            <p class="body">Called automatically by the control to determine which properties need to be persisted into ViewState.</p>
            </remarks>	
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ActivationObject.LoadViewState(System.Object)">
            <summary>
            Loads ViewState of the control.
            </summary>
            <remarks>
            <p class="body">Called automatically by the control to rehydrate the server side object based on it's persisted viewstate.</p>
            </remarks>
            <param name="savedState">The viewstate of the grid that was returned by the page.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ActivationObject.SaveViewState">
            <summary>
            Persists the WebGrid along with it's child elements into the Page's ViewState.
            </summary>
            <remarks>Called automatically to persist the WebGrid into ViewState</remarks>
            <returns>An object array containing ViewState information.</returns>
            
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ActivationObject.AllowActivation">
            <summary>
            Controls whether the grid will track which cell and row currently have user focus. Set to 
            true to track user focus and to false to ignore user focus. 
            </summary>
            <remarks>
            <p class="body">
            Activation can be disabled if the application doesn't need to know which row in the grid has user
            focus and if keyboard navigation of the grid isn't important. It's only recommended for read-only
            grids but it can help optimize the loading time of a page where performance is important because 
            it means that the grid doesn't need to download the ig_webgrid_kb.js javascript file. 
            </p>
            <p class="body">
            When activation is disabled:
            </p>
            <list type="bullet">
            <item>The grid won't track which row and cell has user focus in the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveRow"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveCell"/> properties.
            </item>
            <item>The <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveCellChange"/> and <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveRowChange"/>
            events won't be fired. </item>
            <item>The cell or row with user focus won't be highlighted with an activation border.</item>
            <item>Keyboard navigation of the grid will be disabled.</item>
            </list>
            <p class="body">
            Disabling activation doesn't affect <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedRows">selection</see>. 
            The grid can still use selection when activation has been disabled. 
            </p>
            <p class="body">
            To remove the activation border without disabling activation, set the <see cref="P:Infragistics.WebUI.UltraWebGrid.ActivationObject.BorderColor"/>, 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.ActivationObject.BorderStyle"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.ActivationObject.BorderWidth"/> objects to be the same as the borders of 
            the other cells in the grid. 
            </p>
            <p class="body">
            The grids AllowActivation property can be queried using javascript on the client by looking at
            the grids <a href="WebGrid_Activation_Object_CSOM.html">Activation.AllowActivation</a> property. 
            This property is read-only. Any changes made to the property won't affect the behaviour of the grid. 
            </p>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Infragistics.WebUI.UltraWebGrid.ActivationObject.BorderStyle" -->
        <member name="P:Infragistics.WebUI.UltraWebGrid.ActivationObject.BorderColor">
            <summary>
            The color that will be applied to the border of the active object.
            </summary>
            <remarks>
            <p class="body">When an object in the grid (row or cell) becomes active, 
            its border will assume the color specified by the <b>BorderColor</b> property.</p> 
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ActivationObject.BorderWidth">
            <summary>
            The width that will be applied to the border of the active object.
            </summary>
            <remarks>
            <p class="body">When an object in the grid (row or cell) becomes active, its border will assume the width specified by the <b>BorderWidth</b> property.</p> 
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ActivationObject.BorderDetails">
            <summary>
            Returns a reference to or sets a <see cref="T:Infragistics.WebUI.Shared.BorderDetails"/>
            object that allows to customize the borders of the activation object.
            </summary>
            <remarks>
            <p class="body">Individual borders settings can be applied to every border of the 
            activation object - left, top, right and bottom.
            The object is created when it is first time accessed. To check if the object is 
            created use the <see cref="P:Infragistics.WebUI.UltraWebGrid.ActivationObject.HasBorderDetails"/> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ActivationObject.HasBorderDetails">
            <summary>
            Returns a Boolean value that determines whether the <see cref="P:Infragistics.WebUI.UltraWebGrid.ActivationObject.BorderDetails"/> property is currently set to a <see cref="T:Infragistics.WebUI.Shared.BorderDetails"/> object.
            </summary>
            <remarks>
            <p class="body">This property returns True if the BorderDetails property is currently set; otherwise, it returns False.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AddNewBox">
            <summary>
            The AddNewBox class handles properties and methods directly related to the AddNewBox button, which can be used to add a new row to the grid.
            </summary>
            <remarks>
            The AddNewBox contains one AddNewButton for each Band of data in the grid.
            A new row can only be added to a band that already contains the ActiveRow or ActiveCell.  The new row will be added at the end of the current data island.<br/>
            If the grid only contains one band, then the AddNewBox will contain one button and clicking it will cause a new row to be added at the bottom of the grid.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase">
            <summary>
            Base class for all box classes. It contains all common properties/methods
            </summary>
            <remarks>This class provides base functionality and is not instatiated explictly.  </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>This class is not called directly but is the base class for various other objects in the WebGrid.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the SpecialBoxBase class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the SpecialBoxBase will retun False until set again.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.CopyFrom(Infragistics.WebUI.UltraWebGrid.SpecialBoxBase)">
            <summary>
            Duplicates the properties of the specified <see cref="T:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase"/> into the instance of the SpecialBoxBase class from which this method is invoked.
            </summary>
            <remarks>
            <p class="body">Use the CopyFrom method to duplicate the properties of the specified SpecialBoxBase into the instance of the SpecialBoxBase class from which this method is invoked.</p>
            <p class="body">All properties in the current instance of the SpecialBoxBase class will be replaced by their corresponding properties in the SpecialBoxBase object specified by the <i>passin</i> parameter.</p>
            </remarks>
            <param name="passin">
            <p class="body">A SpecialBoxBase object that represents the base box class to copy.</p>
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.TrackViewState">
            <summary>
            Tracks the ViewState for this object.  
            </summary>
            <remarks>Called automatically, not generally for public use.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.LoadViewState(System.Object)">
            <summary>
            Loads the ViewState from the Page and applies it to the control.
            </summary>
            <remarks>Load ViewState is called automatically by the .Net Framework to return the control on the server to the state that it was at during the last rendering.</remarks>
            <param name="savedState">An object array  containing the key value pairs that were persisted into ViewState.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.SaveViewState">
            <summary>
            Creates a key value pair object array that contains the properties that are being pushed into the ViewState.
            </summary>
            <remarks>
            This is called by the control to persist ViewState for the object.
            </remarks>
            <returns>An object array of key value pairs of storable values.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.Style">
            <summary>
            Returns a reference to or sets a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that determines how a button object is rendered on the client.
            </summary>
            <remarks>
            <p class="body">This property is used to specify the default style of the button classes that inherit from the <see cref="T:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase"/> class, such as the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> and <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByBox"/> classes.</p>
            <p class="body">Individual style attributes can be applied by setting the GridItemStyle object's corresponding properties. For example, a style's background color can be changed by setting its <b>BackColor</b> property.</p>
            <p class="body">A comprehensive pre-defined style can be applied by setting the GridItemStyle object's <b>CssClass</b> property to the name of the style.</p>
            <p class="body">This property has been deprecated for CLR2. Use BoxStyle to set the style instead. </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.BoxStyle">
            <summary>
            Returns a reference to or sets a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that determines how the styled area is rendered on the client.
            </summary>
            <remarks>
            <p class="body">Individual style attributes can be applied by setting the GridItemStyle object's corresponding properties. For example, a style's background color can be changed by setting its <b>BackColor</b> property.</p>
            <p class="body">A comprehensive pre-defined style can be applied by setting the GridItemStyle object's <b>CssClass</b> property to the name of the style.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.ButtonConnectorColor">
            <summary>
            Returns a refence to or sets a <b>Color</b> object that specifies the color of the button connector lines for an object.
            </summary>
            <remarks>
            <p class="body">This property is used to specify the color of the lines that are drawn between buttons, such as the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> and <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByBox"/> classes.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.ButtonConnectorStyle">
            <summary>
            Returns a reference to or sets a <b>BorderStyle</b> object that specifies the style of the button connector lines for an object.
            </summary>
            <remarks>
            <p class="body">This property is used to specify the way in which the lines that are drawn between buttons, such as the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> and <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByBox"/> classes, are rendered on the client.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.HasStyle">
            <summary>
            Returns a Boolean value that determines whether the <see cref="P:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase.Style"/> property is currently set to a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object.
            </summary>
            <remarks>
            <p class="body">This property returns True if the Style property is currently set; otherwise, it returns False.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewBox.#ctor">
            <summary>
            AddNewBox Constructor
            </summary>
            <remarks>
            Called by the WebGrid to create AddNewBox for the control.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewBox.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the AddNewBox class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the AddNewBox will retun False until set again.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewBox.CopyFrom(Infragistics.WebUI.UltraWebGrid.SpecialBoxBase)">
            <summary>
            Duplicates the properties of the specified <see cref="T:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase"/> into the instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> class from which this method is invoked.
            </summary>
            <remarks>
            <p class="body">Use the CopyFrom method to duplicate the properties of the specified SpecialBoxBase into the instance of the AddNewBox class from which this method is invoked.</p>
            <p class="body">All properties in the current instance of the SpecialBoxBase class will be replaced by their corresponding properties in the SpecialBoxBase object specified by the <i>passin</i> parameter.</p>
            </remarks>
            <param name="passin">
            <p class="body">A SpecialBoxBase object that represents the base box class to copy.</p>
            </param>
            <returns>A SpecialBoxBase object that replicates the object passed in.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewBox.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
            <returns>The string representation of the AddNewBow, in this case an empty string.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewBox.TrackViewState">
            <summary>
            Tracks the ViewState for this object.  
            </summary>
            <remarks>Called automatically, not generally for public use.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewBox.LoadViewState(System.Object)">
            <summary>
            Loads the ViewState for this object.
            </summary>
            <remarks>Called automatically, not generally for public use.</remarks>
            <param name="savedState">The ViewState that was persisted to the page.  This is used to reinflate the control back to the status at render time.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewBox.SaveViewState">
            <summary>
            Creates a object array serializing the ViewState of this object
            </summary>
            <returns>An object array of items that need to be added to the ViewState</returns>
            <remarks>Called automatically, not generally for public use.</remarks>
            <returns>An object array with the items that need to be persisted into viewstate.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewBox.CreateBackup">
            <summary>
            Persists the current state of the control.
            </summary>
            <remarks>
            Called internally by the control to persist the current state of the control.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewBox.Commit">
            <summary>
            Finalizes all changes to the control
            </summary>
            <remarks>
            Called internally by the control to finalize changes to the control.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewBox.Rollback">
            <summary>
            Returns control back to last commit point.
            </summary>
            <remarks>Called automatically by the control to undo changes back to the last commital point.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewBox.Prompt">
            <summary>
            Returns or sets a string of text that is displayed to the left of the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> box.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Add..."</p>
            <p class="body">If the AddNewBox button is hidden, the text specified by this property is not visible.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewBox.Location">
            <summary>
            Returns or sets a value that specifies where the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> box is rendered to the client.
            </summary>
            <remarks>
            <p class="body">The Top setting renders the AddNewBox button above the grid on the client.</p>
            <p class="body">The Bottom (default) setting renders the AddNewBox button below the grid on the client.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewBox.ButtonStyle">
            <summary>
            Returns a reference to or sets a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that determines how the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> box is rendered on the client.
            </summary>
            <remarks>
            <p class="body">Individual style attributes can be applied by setting the GridItemStyle object's corresponding properties. For example, a style's background color can be changed by setting its <b>BackColor</b> property.</p>
            <p class="body">A comprehensive pre-defined style can be applied by setting the GridItemStyle object's <b>CssClass</b> property to the name of the style.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewBox.HasButtonStyle">
            <summary>
            Returns a Boolean value that determines whether the <see cref="P:Infragistics.WebUI.UltraWebGrid.AddNewBox.ButtonStyle"/> property is currently set to a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object.
            </summary>
            <remarks>
            <p class="body">This property returns True if the ButtonStyle property is currently set; otherwise, it returns False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewBox.Hidden">
            <summary>
            Returns or sets a Boolean value that determines whether the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> box is hidden.
            </summary>
            <remarks>
            <p class="body">This property returns True if the AddNewBox button is currently hidden; otherwise, it returns False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewBox.View">
            <summary>
            Returns or sets a value that determines the view style of the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> box.
            </summary>
            <remarks>
            <p class="body">The Full (default) setting displays a staggered appearance, with each Band button below the one before it, with right-angled connecting lines linking them.</p>
            <p class="body">The Compact setting displays a linear appearance, with each Band button to the right of the one before it, with straight connecting lines linking them.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewBox.HasChanges">
            <summary>
            Returns whether or not the control has undergone changes which have yet to be finalized.
            </summary>
            <remarks>Called internally by the control.</remarks>
            <returns>True if the object has style changes which need to be finalized</returns>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AddNewRow">
            <summary>
            The object that contains the add new row settings
            </summary>
            <remarks>The AddNewRow feature allows the Grid to support a permananent empty row to facilitate adding new information into the WebGrid.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewRow.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>Not for public use.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewRow.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            Returns an empty string.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewRow.CopyFrom(Infragistics.WebUI.UltraWebGrid.AddNewRow)">
            <summary>
            Applies the attributes of an existing <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewRow"/> object to the current <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewRow"/> 
            object.
            </summary>
            <remarks>
            <p class="body">Invoke this method to copy some or all of an existing object's property settings to 
            another object of the same type.</p>
            <p class="body">All the properties of the object provided are copied by this method into the current object.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewRow.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewRow"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewRow"/> class to their default values.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewRow.LoadViewState(System.Object)">
            <summary>
            Loads ViewState of the control.
            </summary>
            <remarks>
            <p class="body">Called automatically by the control to rehydrate the server side object based on it's persisted viewstate.</p>
            </remarks>
            <param name="savedState">The viewstate of the grid that was returned by the page.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewRow.SaveViewState">
            <summary>
            Persists the object along with it's child elements into the Page's ViewState.
            </summary>
            <remarks>Called automatically to persist the object into ViewState</remarks>
            <returns>An object array containing ViewState information.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.AddNewRow.TrackViewState">
            <summary>
            Marks modified elements for serialization into ViewState
            </summary>
            <remarks>
            <p class="body">Called automatically by the control to determine which properties need to be persisted into ViewState.</p>		
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewRow.Visible">
            <summary>
            Determines if the add new row is visible
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewRow.View">
            <summary>
            Determines where the add new row appears on the row island.
            </summary>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewRow.Style">
            <summary>
            An <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the add new row.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the add new row.
            Common style attributes that can be adjusted include: forecolor, backcolor, font, 
            and alignment. You can use different styles to provide a consistent look throughout 
            your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            <p class="body">This property has been deprecated for CLR2. Use RowStyle to set the style instead. </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewRow.RowStyle">
            <summary>
            An <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the add new row.
            </summary>
            <remarks>
            <p class="body">Individual style attributes can be applied by setting the GridItemStyle object's corresponding properties. For example, a style's background color can be changed by setting its <b>BackColor</b> property.</p>
            <p class="body">A comprehensive pre-defined style can be applied by setting the GridItemStyle object's <b>CssClass</b> property to the name of the style.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.AddNewRow.HasStyle">
            <summary>
            Determines if a style has been applied to the add new row.
            </summary>
            <remarks>
            <p class="body">Returns True if a style has been specifically set for the add new row 
            (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.AddNewRow.Style"/> property.) If False, the add new row has no style of its own 
            and its appearance will be inherited.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowEditItem">
            <summary>
            The RowEditItem class functions as a container into which the editing template for a row is instantiated.
            </summary>
            <remarks>
            <p class="body">Once the row template has been instantiated and data bound, you can use the <b>RowEditItem</b> property to access the controls that make up the template. This property returns a collection of <see cref="T:System.Web.UI.Control"/> objects that correspond to the controls that make up the template. Use <b>RowEditItem</b> to access these controls and any children they may contain.</p>
            <p class="body">There is only one row edit item per band. All rows in the band make use of the same row editing template.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowEditItem.#ctor(Infragistics.WebUI.UltraWebGrid.UltraGridBand)">
            <summary>
            Assigns the current RowEditItem to the specified Band.
            </summary>
            <param name="band">The UltraGridBand object of the band to which the current RowEditItem will be assigned.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand">
            <summary>
            The UltraGridBand object represents a single level of a hierarchical record set. The columns that make up a band are typically drawn from a single recordsource (table) in the data source.
            </summary>
            <remarks>
            <p class="body">The UltraGridBand object represents a set of related columns. These columns generally correspond to the fields in a recordset, but can also include computed columns added by the programmer. A band represents a grouping of all the data at a single level in a hierarchical recordset. In the case of flat data there is only 1 band, whereas a grid with hierarchical data will have multiple bands.</p>
            <p class="body">Although the Band object does not directly own any rows within the row hierarchy, it does control the appearance and behavior of those rows within its level of influence.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase">
            <summary>
            Abstract base class which implements IKeyedSubObject for sub objects
            that will be part of a keyed collection (where each item can be accessed
            either through a zero based index or a string key) 
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IKeyedObject">
            <summary>
            Interface used by sub objects that will be part of a keyed 
            collection (where each item can be accessed either through 
            a zero based index or a string key)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IKeyedObject.OnRemovedFromCollection(Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase)">
            <summary>
            Called when this object is being removed from the passed
            in collection. 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IKeyedObject.OnAddedToCollection(Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase)">
            <summary>
            Called when this object is being added to the passed
            in collection. 
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.IKeyedObject.Key">
            <summary>
            The key to use to access this item in the collection
            </summary>
            
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase.#ctor(System.String)">
            <summary>
            Constructor that takes a key value
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase.ShouldSerializeKey">
            <summary>
            Returns true if the key needs to be serialized (not null )
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase.ResetKey">
            <summary>
            Sets the key back to null
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase.OnRemovedFromCollection(Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase)">
            <summary>
            Called when this object is being removed from the passed
            in collection. The default implementation nulls out the
            primaryCollection if the passed in collection matches
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase.OnAddedToCollection(Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase)">
            <summary>
            Called when this object is being added to the passed
            in collection. The default implementation sets the internal
            primaryCollection reference if it hasn't already been set
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase.Key">
            <summary>
            The Key of the item in its collection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase.PrimaryCollection">
            <summary>
            The primary collection that this object belongs to.
            </summary>
            <remarks>
            <p class="body">A <see cref="T:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase"/> can belong to only
            one primary collection at any instant.  The primary collection is
            customarily changed by the <see cref="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase.OnAddedToCollection(Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase)"/> and
            <see cref="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectBase.OnRemovedFromCollection(Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase)"/> base method implementations.</p>
            <p class="body">Inheritors may use this property themselves to expose
            a collection type that is derived from <see cref="T:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase"/>,
            but may be more strongly-typed or have additional features.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable">
            <summary>
            Interface provides navigation through the grid's data.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.GetAttribute(System.String)">
            <summary>
            Gets an attribute by name.
            </summary>
            <returns>
            Attribute value. Null if not such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.GetAttribute(System.Int32)">
            <summary>
            Gets an attribute by index
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            Attribute value. Null if not such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.GetAttributeIndex(System.String)">
            <summary>
            Gets an attribute index by name.
            </summary>
            <param name="name">
            Name of the attribute
            </param>
            <returns>
            Index of the attribute. -1 if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.GetAttributeName(System.Int32)">
            <summary>
            Gets an attribute name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            Name of the attribute. Null if not such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.GetFirstSibling">
            <summary>
            Gets first sibling of the node.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.GetNextSibling">
            <summary>
            Gets next sibling of the node.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.GetPreviousSibling">
            <summary>
            Gets previous sibling of the node.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.GetParent">
            <summary>
            Gets parent of the node.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.GetFirstChild">
            <summary>
            Gets first child of the node.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.GetType">
            <summary>
            Returns the type of the node
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.HasAttributes">
            <summary>
            Indicates if the node has attributes.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.LocalName">
            <summary>
            Local name of the node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.Value">
            <summary>
            Value of the node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable.HasChildren">
            <summary>
            Indicates if the node has children.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IParticipateInAppStyling">
            <summary>
            Used by objects which participate in the application styling
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IParticipateInAppStyling.PreRegisterStyle(Infragistics.WebUI.UltraWebGrid.GridItemStyle,Infragistics.WebUI.UltraWebGrid.GridItemStyle,Infragistics.WebUI.UltraWebGrid.GridStyleRole,System.Int32,System.String)">
            <summary>
            Preregisters a style object with the grid's web agent
            </summary>
            <remarks>This method is called internally to preregister a style 
            with app styling framework. Actual registration will happen just 
            before the styles are emitted into the page.</remarks>
            <param name="style">Style to register</param>
            <param name="oldStyle">Previously registered style. If provided the old style is removed from the preregistered styles array.</param>
            <param name="role">Role of the style</param>
            <param name="priority">Controls where in the styles definition block the style will be rendered.</param>
            <param name="key">Extra key to identify the style.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IParticipateInAppStyling.PreRegisterStyle(Infragistics.WebUI.UltraWebGrid.GridItemStyle,Infragistics.WebUI.UltraWebGrid.GridItemStyle,Infragistics.WebUI.UltraWebGrid.GridStyleRole,System.Int32)">
            <summary>
            Preregisters a style object with the grid's web agent
            </summary>
            <remarks>This method is called internally to preregister a style 
            with app styling framework. Actual registration will happen just 
            before the styles are emitted into the page.</remarks>
            <param name="style">Style to register</param>
            <param name="oldStyle">Previously registered style. If provided the old style is removed from the preregistered styles array.</param>
            <param name="role">Role of the style</param>
            <param name="priority">Controls where in the styles definition block the style will be rendered.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IParticipateInAppStyling.PreRegisterStyle(Infragistics.WebUI.UltraWebGrid.GridItemStyle,Infragistics.WebUI.UltraWebGrid.GridItemStyle)">
            <summary>
            Preregisters a style object with the grid's web agent
            </summary>
            <remarks>General preregestration method. For the styles that 
            are not part of the app styling framework. The role of such styles 
            is assumed to be None.</remarks>
            <param name="style">Style to register with style repository</param>
            <param name="oldStyle">Previously registered style. If provided the old style is removed from the preregistered styles array.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IParticipateInAppStyling.InitializeStyles">
            <summary>
            Registers all styles with the style repository.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IParticipateInAppStyling.GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance
            </summary>
            <remarks>The method works closely with the style repository.</remarks>
            <param name="role">Defines the role of the style to return.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IParticipateInAppStyling.GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole,System.Boolean)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance. The boolean parameter will determine if the
            parents' class names need to be inserted.
            </summary>
            <param name="role">Defines the role of the style to return.</param>
            <param name="withParents">Determines if the parents' class names need to be inserted.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.IParticipateInAppStyling.WebAgent">
            <summary>
            Reference to the web agent
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.#ctor">
            <summary>
            Base constructor for the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object.  		
            </summary>
            <remarks>
            This constructor does not turn on the view state tracking for the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.#ctor(System.Boolean)">
            <summary>
            Constructor for the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object.
            </summary>
            <param name="bTrackViewState">
            boolean - true if the band should be placed into the view state and track all changes made to its properties.
            </param>
            <remarks>
            Use the constructor to create a band with enabled view state tracking.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ShouldSerializeColumns">
            <summary>Returns true if any property of Columns has at least one item.</summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ResetColumns">
            <summary>Clears the Columns collection</summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.setPrimaryCollection(Infragistics.WebUI.UltraWebGrid.BandsCollection)">
            <summary>
            Assign the passed-in bands to the Primary Collection
            </summary>
            <param name="bands"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.IsDescendantOfBand(Infragistics.WebUI.UltraWebGrid.UltraGridBand)">
            <summary>
            Returns true if this band is a descendant of the passed in band.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.IsTrivialDescendantOf(Infragistics.WebUI.UltraWebGrid.UltraGridBand)">
            <summary>
            Returns true if this band is a trivial descendant of the passed in band.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object.
            </summary>
            <remarks>
            <p class="body">If the Key property has been set, that value will be returned.  Otherwise, the constant 'Band' plus the index of the band is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AddNew">
            <summary>
            Adds new row to the band. 
            </summary>
            <remarks>
            If the current ActiveRow does not provide enough context, then an error is thrown.  ActiveRow needs  to be on a sibling band or a parent band.
            This method is constrained by the AllowAdd evaluation for the Band object.  If the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowAdd"/> for the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/>
            and the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowAddNewDefault"/> of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> evaluates to <b>Yes</b> then
            the row add can take place.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the Band class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the Band will return False until set again.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CopyFrom(Infragistics.WebUI.UltraWebGrid.UltraGridBand)">
            <summary>
            Applies the attributes of an existing UltraGridBand object to the current UltraGridBand object, using the property categories specified.
            </summary>
            <remarks>
            <p class="body">Invoke this method to copy some or all of an existing object's property settings to another object of the same type.</p>
            <p class="body">By default, all the properties of the object are copied. You can also specify that only certain categories of properties should be copied form the one object to the other. Multiple categories can be copied by combining them using logical <b>Or</b>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GetBatchUpdates">
            <summary>
            Returns an enumerator that can be used to iterate through all changed rows in the band.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GetRowsEnumerator">
            <summary>
            Returns an enumerator that can be used to iterate through all rows in the band. 
            </summary>
            <remarks>
            <p class="body">
            Use this method to find out which rows have been changed since the last postback. The method can be 
            called any time during the postback from when the Page Load event fires. It can be called multiple 
            times during a single postback and will always return the same rows. 
            </p>
            <p class="body">
            New rows, updated rows and deleted rows will be returned by the enumerator. Use the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.DataChanged"/> property to find out what type of update has been applied to 
            the row. 
            </p>
            <p class="body">
            Using this method walks all rows in the band. For large grids where performance is important it is 
            better to handle the <see cref="!:UpdateRowBatch">batch updates</see>.
            </p>
            <p class="body">
            This method can be used as an alternative to using the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRowBatch">batch 
            updates</see> or can be used as well as the batch events. Handling the batch update events doesn't 
            affect the enumerator. 
            </p>
            <p class="body">
            This method is most useful when using batch updates to process multiple rows that have changed on 
            the client. It can also be used to process single rows when the grid is posted back during a 
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRow">single row update</see> but it will only ever return one row. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ExpandAll">
            <summary>
            Expands all rows in the band.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ExpandAll(System.Boolean)">
            <summary>
            Expands all rows in the band. The parameter determines whether the rows should be expanded or collapsed.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Find(System.String,System.Boolean,System.Boolean)">
            <summary>
            Searches for a cell in the band, which value starts with provided string. Case is ignored.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Find(System.String,System.Boolean)">
            <summary>
            Searches for a cell in the band, which value starts with provided string. Case is ignored. Uses previously used whole word search flag or partial find by default.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Find(System.String)">
            <summary>
            Searches for a cell in the band, which value starts with provided string. Case is ignored. Uses previously used direction or from first to last cell by default. Uses previously used whole word search flag or partial find by default.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Find">
            <summary>
            Searches for a cell in the band, which value starts with provided string. Case is ignored. Uses previously passed parameters.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FindNext">
            <summary>
            Continues search from previously found cell.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FindNext(System.String)">
            <summary>
            Continues search from previously found cell using new string value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FindNext(System.String,System.Boolean)">
            <summary>
            Continues search from previously found cell using new string value and direction.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FindNext(System.String,System.Boolean,System.Boolean)">
            <summary>
            Continues search from previously found cell using new string value, direction and exact search flag.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SyncLayouts(Infragistics.WebUI.UltraWebGrid.HeadersCollection,Infragistics.WebUI.UltraWebGrid.HeadersCollection)">
            <summary>
            Synchronizes two layouts.
            </summary>
            <param name="source">The layout to reflect after.</param>
            <param name="dest">The layout to reflect into.</param>
            <returns><b>true</b> if the layouts are synchronized successfully. <b>false</b> if one of the layouts does not belong to the band.</returns>
            <remarks>
            Can be used to bring one layout in tact with another. For example if 
            <b>FooterLayout</b> needs to be reflected after the <b>HeaderLayout</b> use the method: 
            <b>band.SyncLayouts(band.HeaderLayout, band.FooterLayout)</b>.<br/>
            If the layout items that are being reflected have columns attached only its 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.RowLayoutColumnInfo"/> is synchronized. For detached items 
            new items are created in the target layout and <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Caption"/> 
            and <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Title"/> are copied along with the <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.RowLayoutColumnInfo"/> synchronization.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CreateBackup">
            <summary>
            Design time support. Stores current property values into a back up.
            </summary>
            <remarks>
            Remembers current property values of the band to be able to restore 
            them in case a <b>Cancel</b> button is clicked on the <b>Quick Design</b> dialog. 
            The properties are restored by the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Rollback"/> method.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Commit">
            <summary>
            Design time support. Applies changes and stores properties into back up after that.
            </summary>
            <remarks>
            Applies changes made to the band. Once the changes 
            are commited they cannot be rolled back. New copy of the band's 
            properies back up is created at this point.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Rollback">
            <summary>
            Design time support. Restores previously saved properties from a back up.
            </summary>
            <remarks>
            Returns previously saved propperties from a back up. Used to restore 
            old values into the band's properties when a <b>Cancel</b> button is 
            clicked in the <b>Quick Design</b> dialog.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the band.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the band. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the band.
            </summary>
            <returns>
            Self if the band is the first band in the bands collection. 
            The first band in the bands collection otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Null if the band has no next siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Returns previous sibling.
            </summary>
            <returns>
            Null if the band has no previous siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the parent bands collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the band.
            </summary>
            <returns>
            Columns collection if the band has columns..
            </returns>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridBand.preregStyles">
            <summary>
            Keeps styles to register if a style is being register before style repository is created
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#InitializeStyles">
            <summary>
            Registers all styles with the style repository.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance
            </summary>
            <remarks>The method works closely with the style repository.</remarks>
            <param name="role">Defines the role of the style to return.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole,System.Boolean)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance. The boolean parameter will determine if the
            parents' class names need to be inserted.
            </summary>
            <param name="role">Defines the role of the style to return.</param>
            <param name="withParents">Determines if the parents' class names need to be inserted.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Key">
            <summary>
            Returns or sets a unique string identifier for this Band within the Bands collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowStyle">
            <summary>
            An <b><see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/></b> object that contains the style properties for the rows in the band.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the band's rows. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowExpAreaStyle">
            <summary>
            An <b><see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/></b> object that contains the style properties for the rows expansion area in the band.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the band's rows expansion area. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SelectedRowStyle" -->
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.EditCellStyle">
            <summary>
            Specifies the style applied to the cell when it is in edit mode.
            </summary>
            <remarks>
            <p class="body">This property is used to specify the appearance of the cell that is in edit mode. (The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveCell"/> property indicates which cell is currently active; a cell that is being edited is always the active cell.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GridID">
            <summary>
            The control ID of the UltraWebGrid to which the current band belongs.
            </summary>
            <value>The control ID identifying the UltraWebGrid that currently owns this
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> instance, or an empty string if there is not
            present owner.</value>
            <remarks>
            <p class="body">This read-only property is only available programmatically
            at run-time.  It allows developers to identify the UltraWebGrid control by
            its <b>ID</b> that <i>currently</i> owns this Band (and by extension, any
            objects that maintain a reference to their band, such as rows and columns).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GroupByRowStyle">
            <summary>
            An <b><see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/></b> object that contains the style properties for the GroupBy rows in the band.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the band's GroupBy rows. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SelectedGroupByRowStyle">
            <summary>
            An <b><see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/></b> object that contains the style properties for the GroupBy rows in the band that have been selected.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the band's selected GroupBy rows. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowSelectors">
            <summary>
            Returns or sets a value that determines whether row selectors will be displayed. 
            </summary>
            <remarks>
            <p class="body">Row selectors (also called record selectors) are the part of the grid interface that appear at the left edge of each row. Row selectors provide information about the state of the rows (which row is currently active, which rows have uncommitted edits) and you can click on a row selector to select the entire row at once. You can choose to display row selectors or not, either for the whole grid or on a band-by-band basis. The <b>RowSelectors</b> property specifies whether row selectors will be displayed in the current band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowSelectorsResolved">
            <summary>
            Returns or sets a value that determines whether row selectors will be displayed. This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">Row selector visibility is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowSelectors"/> property. However, if a band is a child of another band, <b>RowSelectors</b> may be set to a "use default" value, meaning the setting of the property is inherited from the parent band. If the parent band is a child of another band, it may also be inheriting a value for this property, so its own <b>RowSelectors</b> property would also be set to the "use deafult" setting. Even if the band is a top-level band, <b>RowSelectors</b> may be set to its "use default" value, which means the value used is the preset one built into the UltraWebGrid.</p>
            <p class="body">To simply find out whether row selectors are enabled in the current band, use the <b>RowSelectorsResolved</b> property. This property resolves any inheritance issues and returns a value that tells you whether row selectors are visible in the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowSelectorStyle">
            <summary>
            An <b><see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/></b> object that contains the style properties for the row selectors in the band.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the band's row selectors. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            <p class="body">Row selectors appear to the left of row data in the grid. By clicking on a row selector, the user can activate and select a specific row. The setting of this property may be overridden at the row level.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.DataKeyField">
            <summary>
            The key field of the table being used as the data source of the band.  This property tells 
            UltraWebGrid which column from the database to load into the DataKey property of each Row as it 
            is read and initialized in the grid.
            Later, the DataKey property of each row can be used as a lookup key to apply changes from the 
            row to the database.
            </summary>
            <remarks>
            <p class="body">
            This property will be set automatically from the primary key information in your data source
            if you're using a DataSet or DataTable. The DataKey needs to be set manually other for data 
            sources like custom collections that the grid can't automatically find the key information from. 
            </p>
            <p class="body">
            For grids where the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.BaseColumnName">BaseColumnName</see> isn't the same 
            as the column's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Key">Key</see>, the DataKeyField should be set to the 
            name of the Key rather than the BaseColumnName. The BaseColumnName and Key need to be the same if 
            you're using <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadOnDemand">Xml LoadOnDemand</see>.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowAlternateStyle">
            <summary>
            An <b><see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/></b> object that contains the style properties for alternate (even-numbered) rows in the band.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the alternate rows in the band. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowAlternateStyling">
            <summary>
            Indicates if the band will output alternate row styles. 
            </summary>
            <remarks>
            If <b>True</b> the band will apply the RowAlternateStyle 
            object to its resulting HTML. The property allows turning on or off of the 
            alternate styling even for the app styled applications. If <b>NotSet</b> the behavior 
            is inherited from the DisplayLayout setting.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Columns">
            <summary>
            Returns a collection of the columns that make up the band.
            </summary>
            <remarks>
            Use this property to obtain a collection of <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> objects 
            that includes all the columns that make up the band.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.DefaultColWidth">
            <summary>
            The default width of columns in the band. This value is overridden by any width setings at the column level.
            </summary>
            <remarks>
            This is the setting applied to columns when they are first added to the band without their own <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Width"/> setting. Setting this property to empty value removes the default column width from the band. Columns without a set width may then inherit their width from the band's parent.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.DefaultRowHeight">
            <summary>
            The default height of rows in the band. This value is overridden by any height setings at the row level.
            </summary>
            <remarks>
            This is the setting applied to rows when they are first added to the band without their own <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Height"/> setting. Setting this property to 0 removes the default row height from the band. Rows without a set height may then inherit their height from the band's parent.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.IndentationType">
            <summary>
            <p class="body">Returns or sets an enumerated value that determines how data grid's rows are indented. Overrides DisplayLayout setting.</p>
            </summary>
            <remarks>
            <p class="body">Setting the property to NonIndented allows to have the child rows not to be indented from its parents.
            This property will override the setting of the DisplayLayout object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.IndentationTypeResolved">
            <summary>
            Determines the whether indentation will be applied to the band. This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">
            Band indenting is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.IndentationType"/> property. However, if a band is a 
            child of another band, <b>IndentationType</b> may be set to a "use default" value, meaning the 
            setting of the property is inherited from the parent band. If the parent band is a child of another 
            band, it may also be inheriting a value for this property, so its own <b>IndentationType</b> property
            would also be set to the "use default" setting. Even if the band is a top-level band, 
            <b>IndentationType</b> may be set to its "use default" value, which means the value used is the 
            preset one built into the UltraWebGrid.
            </p>
            <p class="body">
            To simply find out whether indentation is applied to the current band use the 
            <b>IndentationTypeResolved</b> property. This property resolves any inheritance issues.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FilterOptions">
            <summary>
            Gets the FilterOption object for the Layout object
            </summary>
            <remarks>
            The FilterOption object contains information that will affect the behavior of the Filter dropdown 
            when RowFiltering is used.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowRowFilteringResolved">
            <summary>
            returns whether or not the band object will allow for rowfiltering based on the parent object's settings		
            </summary>
            <remarks>not for public use.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FilterServerSide">
            <summary>
            Returns true if the filter will be processed on the server.
            Returns false if the filter will happen clientside or if filter is turned off. 
            </summary>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowFilterModeResolved">
            <summary>
            Returns what filter mode should be applied according to the Band
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Expandable">
            <summary>
            Determines whether the band can be expanded and collapsed.
            </summary>
            <remarks>
            <p class="body">The <b>Expandable</b> property determines whether the rows in a band can be expanded. 
            If set to Expandable.No, the row expansion (plus/minus) indicators will not be shown.</p>
            <p class="body">The <b><see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ExpandImage"/></b> and <b><see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CollapseImage"/></b> properties determine 
            the images that will be used to indicate to the user that a band may be expanded or collapsed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Index">
            <summary>
            Returns the index of the band object within the Bands collection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Tag">
            <summary>
            A field for storing user-defined, object-related information.  If viewstate is enabled, any object object assigned to a Tag property must support the ISerializable interface.  Basic types are generally serializable but application defined objects may need to implement ISerializable in order to be placed into viewstate.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AddButtonCaption">
            <summary>
            Returns or sets the caption text of the Band's Add button.
            </summary>
            <remarks>
            When the AddNew box is displayed, it contains a button for each band in the grid. The buttons are arranged in a hierarchical display that mimics the arrangement of the bands in the grid. The user can click the appropriate button to add a new row to the indicated band. The <b>AddButtonCaption</b> property determines what will be displayed on the AddNew box button for the current band. By default, this property uses the name of the recordset that it retrieves from the data provider (if it is available).
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AddButtonToolTipText">
            <summary>
            Returns or sets the text used as the Add button's tool tip
            </summary>
            <remarks>
            <p class="body">When the AddNew box is displayed, it contains a button for each band in the grid. The buttons are arranged in a hierarchical display that mimics the arrangement of the bands in the grid. The user can click the appropriate button to add a new row to the indicated band. The <b>AddButtonToolTipText</b> property determines what will be displayed in the tooltip that appears when the mouse is over the AddNew box button for the current band. By default, this property is set to an empty string("") indicating that no tooltip will be displayed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowAdd">
            <summary>
            Determines whether the user is allowed to add a new row of data.
            </summary>
            <remarks>
            <p class="body">This property determines whether the user can add new rows 
            to the data in the band or the grid. This property also controls the 
            appearance of the buttons in the AddNew box. If <b>AllowAdd</b> is set to 
            <b>AllowAddNew.No</b> for a particular band, that band's button will be 
            disabled in the AddNew box. This prevents the user from adding new data to 
            the specified band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowAddResolved">
            <summary>
            Determines whether the user is allowed to add rows.  This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">Row adding is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowAdd"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowAddNewDefault"/> can be set to a different value.
            If the band has <b>AllowAdd</b> set to <b>NotSet</b>, it inherits the add value for this property from the
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowAddNewDefault"/> property.</p>
            <p class="body">To simply find out whether rows can be added to the current band, use the 
            <b>AllowAddResolved</b> property. This property resolves any inheritance issues and returns 
            a value that tells you whether row adding is allowed for the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowDelete">
            <summary>
            Determines whether the user is allowed to delete rows.
            </summary>
            <remarks>
            This property determines whether the user can delete rows of data 
            from the band. It does not control the deletion of data within individual 
            cells (field-level deletion) only the removal of complete records from the rows 
            collection (record-level deletion).
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowDeleteResolved">
            <summary>
            Determines whether the user is allowed to delete rows.  This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">Row deletion is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowDelete"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowDeleteDefault"/> can be set to a different value.
            If the band has <b>AllowDelete</b> set to <b>NotSet</b>, it inherits the delete value for this property from the
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowDeleteDefault"/> property.</p>
            <p class="body">To simply find out whether rows can be deleted in the current band, use the 
            <b>AllowDeleteResolved</b> property. This property resolves any inheritance issues and returns 
            a value that tells you whether record deletion is allowed for the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HeaderClickAction">
            <summary>
            Specifies how a column header should react to being clicked.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HeaderStyle">
            <summary>
            An <b><see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/></b> object that contains the style properties for the band header.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the band's header. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SelectedHeaderStyle">
            <summary>
            An <b><see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/></b> object that contains the style properties for the selected headers in the band.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the band's selected headers. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Hidden">
            <summary>
            Determines whether the band is visible.
            </summary>
            <remarks>
            If this property is set to True, the band is hidden, and any rows it contains will not be visible. Note that this will effectively block access to the any children those rows may have as well.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Indentation">
            <summary>
            Determines the amount of indenting used for bands.
            </summary>
            <remarks>
            <p class="body">You can use this property to specify how much indenting should be applied to bands beyond the default 
            indenting done by the control. The default value for this property is 22, which indicates that the grid's default indenting 
            should be used.</p>
            <p class="body">Setting the property to zero is also supported. In this case the expansion indicators area is removed from view. 
            The feature is useful for removing last band's expansion area as it is not being used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.IndentationResolved">
            <summary>
            Determines the amount of indenting used for bands. This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">Band indenting is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Indentation"/> property. However, if a band is a child of another band, <b>Indentation</b> may be set to a "use default" value, meaning the setting of the property is inherited from the parent band. If the parent band is a child of another band, it may also be inheriting a value for this property, so its own <b>Indentation</b> property would also be set to the "use deafult" setting. Even if the band is a top-level band, <b>Indentation</b> may be set to its "use default" value, which means the value used is the preset one built into the UltraWebGrid.</p>
            <p class="body">To simply find out whether extra indenting is applied to the current band (and if so, how much is being applied) use the <b>IndentationResolved</b> property. This property resolves any inheritance issues and returns a value that tells you how much extra indentation (if any) is applied to the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasSortedColumns">
            <summary>
            Determines whether the band contains sorted columns.
            </summary>
            <remarks>
            <p class="body">If column sorting is eanbled for a band (<see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowSortingResolved"/> returns True) then one or more of columns in the band may be in sorted order, depending on the actions taken by the end user. If the band contains sorted columns, <b>HasSortedColumns</b> property will return True and the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortedColumns"/> property will return a collection of all the columns that have been sorted.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortedColumns">
            <summary>
            Returns a collection of UltraGridColumn objects that includes all of the columns in the band which have been sorted.
            </summary>
            <remarks>
            <p class="body">In order for the end user to be able to sort columns, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowSorting"/> property must be set to True or have an inherited value of True. (You can determine the value that is in effect for the band by using the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowSortingResolved"/> property.)</p>
            <p class="body">When the user sorts a column, the <b>UltraGridColumn</b> object of the sorted column is added to the band's collection of sorted columns. This collection is accessed through the <b>SortedColumns</b> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ColFootersVisible">
            <summary>
            Determines whether to show column footers. 
            </summary>
            <remarks>
            <p class="body">
            Column footers can be enabled for a band, providing a convenient 
            way to display column-related information. For example, you can 
            display the total of a column of figure, or the number of items 
            checked in a checkbox column.</p>
            <p class="body">
            When you enable column footers for a band, the footers will appear, 
            but you must still specify what information they will contain. You 
            can do this through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterText"/> 
            property and/or the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterTotal"/> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ColFootersVisibleResolved">
            <summary>
            Determines whether to show column footers. 
            This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">The visibility of column footers is controlled by 
            the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ColFootersVisible"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ColFootersVisibleDefault"/> can be set to a different value.
            If the band has <b>ColFootersVisible</b> set to <b>NotSet</b>, it inherits the footer visibility 
            value for this property from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ColFootersVisibleDefault"/> property.</p>
            <p class="body">To simply find out whether column footers are visible in the current band, 
            use the <b>ColumnFootersVisibleResolved</b> property. This property resolves any inheritance 
            issues and returns a value that tells you if column footers are being displayed in the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ColHeadersVisible">
            <summary>
            Determines whether to show column headers. 
            </summary>
            <remarks>
            <p class="body">Column headers can be enabled for the band, providing labeling and 
            additional functionality for columns. A column header typically contains the 
            formatted name of the field to which the column is bound. Column headers are 
            also used to manipulate columns in various activities, such as column moving 
            and when implementing GroupBy mode.</p>
            <p class="body">Column headers may be formatted through the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HeaderStyle"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HeaderText"/> 
            properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ColHeadersVisibleResolved">
            <summary>
            Determines whether to show column headers. 
            This property will always return the setting that is in control of the band. 
            </summary>
            <remarks>
            <p class="body">The visibility of column headers is controlled by the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ColHeadersVisible"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ColHeadersVisibleDefault"/> can be set to a different value.
            If the band has <b>ColHeadersVisible</b> set to <b>NotSet</b>, it inherits the header visibility 
            value for this property from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ColHeadersVisibleDefault"/> property.</p>
            <p class="body">To simply find out whether column headers are visible in the current band, 
            use the <b>ColumnHeadersVisibleResolved</b> property. This property resolves any inheritance 
            issues and returns a value that tells you if column headers are being displayed in the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CurrentRowImage">
            <summary>
            The name of the active row image.
            </summary>
            <remarks>
            The image specified by this property is displayed beside whatever row 
            is currently active in the band. The usual appearance of this icon is a small triangle.<br/>
            The property overrides the layout level <see cref="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.CurrentRowImage"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CurrentEditRowImage">
            <summary>
            The name of the active editable row image.
            </summary>
            <remarks>
            The image specified by this property is displayed beside whatever row 
            is currently active in the band that has template for editing the row. 
            The usual appearance of this icon is a small triangle with a pen.<br/>
            The property overrides the layout level <see cref="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.CurrentEditRowImage"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CollapseImage">
            <summary>
            The name of the image used as the "collapse rows" icon.
            </summary>
            <remarks>
            The image specified by this property is displayed beside any row that has 
            expanded child rows capable of being collapsed. The usual appearance of 
            this icon is a small minus sign.<br/>
            The property overrides the layout level <see cref="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.CollapseImage"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ExpandImage">
            <summary>
            The name of the image used as the "expand rows" icon.
            </summary>
            <remarks>
            The image specified by this property is displayed beside any row that has child rows capable of being expanded. The usual appearance of this icon is a small plus sign.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Grid">
            <summary>
            Returns the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/> object that the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> 
            object belongs to.
            </summary>
            <remarks>Each <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object can belong to a single <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/>. </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SelectTypeCell">
            <summary>
            Determines the type of selection that may be performed on cells in the band.
            </summary>
            <remarks>
            <p class="body">This property controls the selection of cells in the band. You can choose to disallow cell selection, allow the selection of only one cell or of multiple cells.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SelectTypeRow">
            <summary>
            Determines the type of selection that may be performed on rows in the band.
            </summary>
            <remarks>
            <p class="body">This property controls the selection of rows in the band. You can choose to disallow row selection, allow the selection of only one row or of multiple rows.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SelectTypeCol">
            <summary>
            Determines the type of selection that may be performed on columns in the band.
            </summary>
            <remarks>
            <p class="body">This property controls the selection of columns in the band. You can choose to disallow column selection, allow the selection of only one column or of multiple columns.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellClickAction">
            <summary>
            Specifies what action will occur when a cell is clicked.
            </summary>
            <remarks>
            <p class="body">This property specifies what will occur when the user navigates 
            through the grid by clicking on cells in the band or the grid. You can choose 
            whether cells that are clicked will put the cell into edit mode or select the 
            cell or its row. Depending on your application, you may want the user to edit 
            any cell just by clicking on it, or you may want to require a separate action 
            to trigger cell editing, such as double-clicking or a keystroke combination. 
            Similarly, you can choose whether cells should be individually selectable, or 
            if selecting the row is a sufficient response to clicking on a cell.</p>
            <p class="body">Note that how selection behaves on the client side depends 
            heavily on the capabilities of the browser. In downlevel browsers, the grid 
            will be renedred using standard HTML, and HTML selection rules will apply.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellPadding">
            <summary>
            The amount of cell padding used in cells of the band.
            </summary>
            <remarks>
            Cell padding is the amount of white space between the borders of the cell 
            and the cell's contents. To specify the amount of space separating cells 
            from one another, use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellSpacing"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellPaddingResolved">
            <summary>
            The amount of cell padding used in cells of the band. 
            This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">Cell padding is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellPadding"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellPaddingDefault"/> can be set to a different value.
            If the band has <b>CellPadding</b> set to <b>0</b>, it inherits the cell padding value 
            for this property from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellPaddingDefault"/> property.</p>
            <p class="body">To simply find out the amount of cell padding used in the current band, 
            use the <b>CellPaddingResolved</b> property. This property resolves any inheritance issues 
            and returns a value that tells you how much padding is being applied to cells in the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellSpacing">
            <summary>
            The amount of cell spacing to use in the cells of the band.
            </summary>
            <remarks>
            Cell spacing is the amount of space separating cells from one another. 
            To specify the amount of white space between the borders of the cell and 
            the cell's contents, use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellPadding"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellSpacingResolved">
            <summary>
            The amount of cell spacing used in cells of the band. 
            This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">Cell spacing is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellSpacing"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellSpacingDefault"/> can be set to a different value.
            If the band has <b>CellSpacing</b> set to <b>0</b>, it inherits the cell spacing value 
            for this property from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellSpacingDefault"/> property.</p>
            <p class="body">To simply find out the amount of cell spacing used in the current band, 
            use the <b>CellSpacingResolved</b> property. This property resolves any inheritance issues 
            and returns a value that tells you how much spacing is being applied between cells in the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowRowNumbering">
            <summary>
            Gets/sets whether the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/> will render row numbers and which schema will be used.
            </summary>
            <remarks>
            Defines the row numbering ability and schema for the band. 
            If the property is set to <b>NotSet</b> the row numbering setting is 
            inherited from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowRowNumberingDefault"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowRowNumberingResolved">
            <summary>
            Determines whether the UltraWebGrid will render out row numbers and which schema it will render them by.
            </summary>
            <remarks>
            <p class="body">Row Numbering is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowRowNumbering"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowRowNumberingDefault"/> can be set to a different value.
            If the band has <b>AllowRowNumbering</b> set to <b>NotSet</b>, it inherits the row numbering value 
            for this property from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowRowNumberingDefault"/> property.</p>
            <p class="body">To simply find out whether the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/> will use Row Numbering 
            in the current band, use the <b>AllowRowNumberingResolved</b> property. This property resolves 
            any inheritance issues and returns a value that tells you whether row numbering will be used on the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowUpdate">
            <summary>
            Determines whether the user is allowed to update data in the band.
            </summary>
            <remarks>
            This property determines whether to permit changes to the data displayed in the band. 
            All data entry functionality is disabled when <b>AllowUpdate</b> is set to <b>No</b>. 
            Cell contents cannot be edited. Users can still view data. They can also re-arrange the 
            layout of the grid by moving and resizing columns, groups, rows, etc. (provided these features 
            are not also disabled using the appropriate properties.)<br/>
            If the property is set to <b>NotSet</b> the sorting setting is 
            inherited from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowUpdateDefault"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowUpdateResolved">
            <summary>
            Determines whether the user is allowed to update data. 
            This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">Record updating is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowUpdate"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowUpdateDefault"/> can be set to a different value.
            If the band has <b>AllowUpdate</b> set to <b>NotSet</b>, it inherits the update value 
            for this property from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowUpdateDefault"/> property.</p>
            <p class="body">To simply find out whether data can be updated in the current band, 
            use the <b>AllowUpdateResolved</b> property. This property resolves any inheritance 
            issues and returns a value that tells you whether record updating is allowed for the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowSorting">
            <summary>
            Specifies whether the user can sort columns.
            </summary>
            <remarks>
            This property determines whehter the user can sort the data in the band based on the values present in a column.
            If the property is set to <b>NotSet</b> the sorting setting is 
            inherited from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowSortingDefault"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowSortingResolved">
            <summary>
            Specifies whether the user can sort columns. This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">Column sorting is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowSorting"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowSortingDefault"/> can be set to a different value.
            If the band has <b>AllowSorting</b> set to <b>NotSet</b>, it inherits the sorting value 
            for this property from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowSortingDefault"/> property.</p>
            <p class="body">To simply find out whether data can be sorted in the current band, use 
            the <b>AllowSortingResolved</b> property. This property resolves any inheritance issues 
            and returns a value that tells you whether data sorting is allowed for the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortServerSide">
            <summary>
            Returns true if the filter will be processed on the server.
            Returns false if the filter will happen clientside or if sorting is turned off. 
            </summary>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowColSizing">
            <summary>
            Determines whether the user is allowed to change the width of columns.
            </summary>
            <remarks>
            <p class="body">
            The <b>AllowColSizing</b> property specifies how column 
            resizing will be handled in the band. When <b>AllowColSizing</b> 
            is set to <b>AllowSizing.Fixed</b>, no resizing is allowed. When 
            <b>AllowColSizing</b> is set to <b>AllowSizing.Free</b>, columns can 
            be resized on the client. Setting the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.TableLayout"/> 
            property to <b>TableLayout.Fixed</b> provides ability to resize columns 
            regardless of the data that is inside their cells. If the property is set to 
            <b>TableLayout.Auto</b>, columns can be resized only within the free space, 
            that is not occupied by cells' data.
            </p>
            <p class="body">
            Column sizing is not supported for grids with <a href="WebGrid_Using_a_Multi_Column_Header.html">
            header layouts</a>. It is recommended that you set this property to
            <see cref="T:Infragistics.WebUI.UltraWebGrid.AllowSizing">AllowSizing.Fixed</see> if you are using header layouts. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowColSizingResolved">
            <summary>
            Determines whether the user is allowed to change the width of columns. 
            This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">
            Column sizing is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowColSizing"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowColSizingDefault"/> can be set to a different value.
            If the band has <b>AllowColSizing</b> set to <b>NotSet</b>, it inherits the sizing value for this property from the
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowColSizingDefault"/> property.</p>
            <p class="body">To simply find out whether columns can be resized in the current band, use 
            the <b>AllowColSizingResolved</b> property. This property resolves any inheritance issues and 
            returns a value that tells you whether column sizing is allowed for the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowSizing">
            <summary>
            Specifies whether and how the user can change the height of the rows.
            </summary>
            <remarks>
            <p class="body">The <b>RowSizing</b> property specifies whether the user can resize rows using the mouse in the band or the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowSizingResolved">
            <summary>
            Specifies whether and how the user can change the height of the rows. This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">Row sizing is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowSizing"/> property. However, if a band is a child of another band, <b>RowSizing</b> may be set to a "use default" value, meaning the setting of the property is inherited from the parent band. If the parent band is a child of another band, it may also be inheriting a value for this property, so its own <b>RowSizing</b> property would also be set to the "use deafult" setting. Even if the band is a top-level band, <b>RowSizing</b> may be set to its "use default" value, which means the value used is the preset one built into the UltraWebGrid.</p>
            <p class="body">To simply find out whether row sizing is enabled in the current band, use the <b>RowSizingResolved</b> property. This property resolves any inheritance issues and returns a value that tells you how row sizing is being applied in the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FooterStyle">
            <summary>
            The default style that will be appplied to column footers in the band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all the column footers in the band. The style may be overridden by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasFooterStyle">
            <summary>
            Determines if a style has been applied to the column footers at the band level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for the column footers has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FooterStyle"/> property.) If False, the column footer style will be inherited (or taken from the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterStyle"/> property of the UltraGridColumn object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GridLines">
            <summary>
            Specifies which cell borders should be shown in the band.
            </summary>
            <remarks>
            Use this property to quickly format the display of the lines separating the cells in the grid. You can choose to show horizontal lines, vertical lines, both or neither.
            In order for the borders to be visible, the RowStyle property must have settings that make it visible: such as, BorderStyle, BorderWidth, BorderColor.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GridLinesResolved">
            <summary>
            Specifies which cell borders should be shown in the band. This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">The display of lines in the grid is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GridLines"/> property. However, if a band is a child of another band, <b>GridLines</b> may be set to a "use default" value, meaning the setting of the property is inherited from the parent band. If the parent band is a child of another band, it may also be inheriting a value for this property, so its own <b>GridLines</b> property would also be set to the "use deafult" setting. Even if the band is a top-level band, <b>GridLines</b> may be set to its "use default" value, which means the value used is the preset one built into the UltraWebGrid.</p>
            <p class="body">To simply find how grid lines are displayed the current band, use the <b>GridLinesResolved</b> property. This property resolves any inheritance issues and returns a value that tells you how grid lines are displayed in the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GroupByRowDescriptionMask">
            <summary>
            A string that determines what text be shown in GroupBy rows. It can include special substitution strings 
            (e.g. to specify child row count).
            </summary>
            <remarks>
            The <b>GroupByRowDescriptionMask</b> property can include special substitution strings that will be replaced with 
            information from the grid. For example, you can use them to specify child row count of a GroupBy row. By default, the 
            <tt>[caption]</tt>, <tt>[value]</tt>, and <tt>[count]</tt> substitution strings are set. The column header text gets 
            placed into the <tt>[caption]</tt> field, the common cell value gets placed into the <tt>[value]</tt> field, and the 
            number of rows sharing the common value is placed into the <tt>[count]</tt> field.<br/>
            Other available patterns are: [avg], [sum], [min], [max] - for the column it's grouped by.<br/>
            And [avg:ColumnKey], [sum:ColumnKey], [min:ColumnKey], [max:ColumnKey] - for any other column in the band, where ColumnKey
            is the key of the column you want to get the results for.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GroupByRowDescriptionMaskResolved">
            <summary>
            A string that determines what text be shown in GroupBy rows. It can include special substitution strings (e.g. to specify child row count). This property will always return the setting that is in control of the band.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.NullText">
            <summary>
            Specifies how null values will be represented in the grid.
            </summary>
            <remarks>
            <p class="body">This property specifies a string value that will be displayed in a grid cell whenever a null value is received for that cell from the back end. The default setting is to use an empty string (""). However, you can specify any string you want, such as the words "null" or "empty".</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.NullTextResolved">
            <summary>
            Specifies how null values will be represented in the grid. This property will always return the setting that is in control of the band.
            </summary>
            <remarks>
            <p class="body">This property specifies a string value that will be displayed in a grid cell whenever a null value is received for that cell from the back end. The default setting is to use an empty string (""). However, you can specify any string you want, such as the words "null" or "empty".</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ParentBand">
            <summary>
            Returns the UltraGridBand object for the parent of the current band (if it is a child band) or Null for band 0. This property is read-only.
            </summary>
            <remarks>
            <p class="body">This property is useful for accessing the settings of properties of the parent band of the current band. </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.BaseTableName">
            <summary>
            The name of the table in the data store being used to provide data for the band.  
            </summary>
            <remarks>
            The property is the main identifier of the table the band is binding to. So if you 
            are switching data source at the run time and accidentally the new data source table 
            for the band has the same name it is better to clear the <b>BaseTableName</b> property
            before binding to another data source so the grid would not get confused.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasRowStyle">
            <summary>
            Determines if a style has been applied to rows at the band level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for rows in the band has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowStyle"/> property.) If False, the style of the band's rows will be inherited (or taken from the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property of the UltraGridRow object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasRowExpAreaStyle">
            <summary>
            Determines if a style has been applied to rows expansion area at the band level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for rows expansion area in the band has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowExpAreaStyle"/> property.) If False, the style of the band's rows expansion area will be inherited (or taken from the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property of the UltraGridRow object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasSelectedRowStyle">
            <summary>
            Determines if a style for selected rows has been applied at the band level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for selected rows has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SelectedRowStyle"/> property.) If False, the style of selected rows will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasEditCellStyle">
            <summary>
            Determines if a style has been applied to the edit cell.
            </summary>
            <remarks>
            <p class="body">Returns True if the edit cell style has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.EditCellStyle"/> property.) If False, the edit cell has no style of its own and its appearance will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasGroupByRowStyle">
            <summary>
            Determines if a style has been applied to GroupBy rows at the band level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for GroupBy rows has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GroupByRowStyle"/> property.) If False, the style of GroupBy rows will be inherited (or taken from the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property of the UltraGridRow object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasSelectedGroupByRowStyle">
            <summary>
            Determines if a style for selected GroupBy rows has been applied at the band level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for selected GroupBy rows has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SelectedGroupByRowStyle"/> property.) If False, the style of selected GroupBy rows will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasRowSelectorStyle">
            <summary>
            Determines if a style has been applied to the row selectors at the band level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for the row selectors has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowSelectorStyle"/> property.) If False, the row selector style will be inherited (or taken from the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.RowSelectorStyle"/> property of the UltraGridRow object.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasRowAlternateStyle">
            <summary>
            Determines if a style has been applied to alternate grid rows at the band level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for alternate (even-numbered) grid rows has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowAlternateStyle"/> property.) If False, the style of alternate rows will be inherited (or taken from the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property of the UltraGridRow object.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasHeaderStyle">
            <summary>
            Determines if a style has been applied to the band header.
            </summary>
            <remarks>
            <p class="body">Returns True if the band header's style has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HeaderStyle"/> property. If False, the band header has no style of its own and its appearance will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasSelectedHeaderStyle">
            <summary>
            Determines if a style for selected column headers has been applied at the band level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for selected column headers has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SelectedHeaderStyle"/> property.) If False, the style of selected headers will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ChildBandColumn">
            <summary>
            Determines the next level band relation or property name in the source table.
            </summary>
            <remarks>
            The property is useful for binding to a datasource where tables are related one-to-many.
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/> supports only one-to-one related tables hierarchy and its 
            bands are also related one-to-one, that is one band can have only one child or next level band.
            So if the source table of the current band has many relations to its child tables the grid by 
            default assumes that the first in the relations or <b>IEnumerable</b> properties (in the custom objects 
            data sources) in the order of the table fields is the next level band relation.<br/>
            To change the child band source table relation the <b>ChildBandColumn</b> can be set to the
            relation or <b>IEnumerable</b> property name that should be used by the grid for the next level
            band data source.<br/>
            The <b>ChildBandColumn</b> property can also be set to the value of <b>"NoChildBand"</b>. In that case all 
            child relations will be ignored at the data binding time and the band will be assumed as the 
            last band in the data source.
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DataBind"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CalcReference">
            <summary>
            Gets the <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference">IUltraCalcReference</see>
            implementation required by UltraCalc when referencing this band.
            </summary>
            <remarks>
            <p class="body">If no surrogate implementation has been instantiated yet, this property
            creates a <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.BandReference">BandReference</see>
            and returns that for use as this grid object's <b>IUltraCalcReference</b> implementation.</p>
            <p class="body">It is only necessary to create an <b>IUltraCalcReference</b> for every
            referenced grid object if the developer is using UltraCalc in their web application.</p>
            <p class="body">Because the UltraCalc engine has some dependencies that presume the
            existence of the grid's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DisplayLayout">DisplayLayout</see>,
            this property must return null (Nothing in Visual Basic .NET) if the layout has not
            been initialized.</p>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasCalcReference"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasCalcReference">
            <summary>
            Indicates whether an <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference">IUltraCalcReference</see>
            implementation for this band has been created.
            </summary>
            <value>True if this band has an <b>IUltraCalcReference</b> implementation, otherwise
            false.</value>
            <remarks>
            <p class="body">Reasons why <b>HasCalcReference</b> might return false include the parent
            UltraWebGrid is not participating in an UltraCalc calculation network, or it is participating
            but there are no references to this band instance within that calculation network.</p>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CalcReference"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FormulaErrorStyle">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle">GridItemStyle</see> object that contains the style properties applied to column cells at the band level containing UltraCalc formula errors.
            </summary>
            <remarks>
            <p class="body">The <b>FormulaErrorStyle</b> property is used to specify the visual formatting of the cells in a calculated formula within any calculated column of this band having resulted in a formula error.</p> 
            <p class="body">This property has no effect on the grid for non-calculated columns (<i>i.e.</i>, the column has no formula defined).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasFormulaErrorStyle">
            <summary>
            Determines if a style has been applied to the cells at a band level for use when their UltraCalc formula results in an error.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for cells in this band has been specified in the event their column's UltraCalc formula results in an error.  If False, the cells' formula error style will be inherited from the <b>DisplayLayout</b> if not overriden.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FormulaErrorStyleResolved">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle">GridItemStyle</see> object that
            contains the style properties for the band when it's columns' cells result in an UltraCalc
            formula error.
            </summary>
            <remarks>
            <p class="body">The appearance of the column cells within this band evaluating to an error when their values are calculated
            by UltraCalc is controlled by the <b>GridItemStyle</b> object specified in the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FormulaErrorStyle"/> property.</p>
            <p class="body">Developers can use the <b>FormulaErrorStyleResolved</b> property to determine every formatting
            attribute that is going to be rendered for an object, regardless of inheritance issues. This property
            returns a <b>GridItemStyle</b> object with all of its attributes set to the inherited values that are
            being used to control the rendering of the object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CalcReferenceName">
            <summary>
            Returns the name of the associated calc reference. If the key is non-empty then
            returns it, otherwise it generates a name.
            </summary>
            <exception cref="T:System.Data.DuplicateNameException">Thrown when a band already
            exists and is using the reserved prefix "_Band_" in it's key, and that name is
            conflicting with the current band which has no key and must autogenerate it's
            <b>CalcReferenceName</b> based on it's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Index"/>.</exception>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FormulaRowIndexSourceResolved">
            <summary>
            Gets the resolved formula source index.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.NormalizedCalcReferenceName">
            <summary>
            Returns the name of the associated calc reference. If the key is non-empty then
            returns it otherwise generates a name.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Summaries">
            <summary>
            Column Footers treat the SummariesCollection on their Band as their ParentCollection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowEditTemplate">
            <summary>
            Returns or sets the template that will be used with the rows in the band.
            </summary>
            <remarks>
            <p class="body">Use this property to assign a row editing template to the rows in the band or to access the properties of the template assigned to the band's rows.</p> 
            <p class="body">Row templates can be used to provide an alternative to entering data directly into the grid. A template is a set of controls for the user to use when entering or viewing row data. The template appears as a sub-form with edit controls corresponding to the cells in the row, which are populated with row data when the template is displayed. The template can also display any other interface elements the developer deems appropriate. After the user has edited the row data using the controls of the template, they can dismiss the template, optionally comitting the changed data back to the datasource. Any changes made in the template will be reflected in the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowEditItem">
            <summary>
            Container into which the editing template for a row is instantiated.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowExpandEffects">
            <summary>
            This object encapsulates the Internet Explorer Transitions functionality that band's row edit template expose.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasRowExpandEffects">
            <summary>
            Determines if any of expand effects were applied to the band's row edit template.
            </summary>
            <remarks>
            <p class="body">Returns True if any of the band's row edit template expand effects have been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowExpandEffects"/> property).</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowTemplateStyle">
            <summary>
            An <b><see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/></b> object that contains the style properties for the row edit template in the band.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the band's row edit template. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasRowTemplateStyle">
            <summary>
            Determines if a style has been applied to the row edit template at the band level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for the row edit template has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowTemplateStyle"/> property.) If False, the row edit template will be inherited (or taken from the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowStyle"/> property of the UltraGridBand object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.BorderCollapse">
            <summary>
            Defines whether the grid borders should collapse or not.
            </summary>
            <remarks>
            This property makes the grid's border to look as a single one on the joints 
            if set to <b>BorderCollapse.Collapse</b>.<br/>
            If <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.UseFixedHeaders"/> is set 
            to <b>true</b> only <b>BorderCollapse.Separate</b> mode is supported.<br/>
            If the property is set to <b>NotSet</b> the sorting setting is 
            inherited from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.BorderCollapseDefault"/> property.
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.UseFixedHeaders"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.BorderCollapseResolved">
            <summary>
            Returns a value that determines whether the grid borders should collapse or not.
            </summary>
            <remarks>
            <p class="body">The borders collapse is controled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.BorderCollapse"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.BorderCollapseDefault"/> can be set to a different value.
            If the band has <b>BorderCollapse</b> set to <b>NotSet</b>, it inherits the border collapse value 
            for this property from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.BorderCollapseDefault"/> property.</p>
            <p class="body">To simply find out whether border collapse is set in the current band, 
            use the <b>BorderCollapseResolved</b> property. This property resolves any inheritance 
            issues and returns a value that tells you whether border collapse is set in the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowColumnMoving">
            <summary>
            Turns on the ability of moving columns on the server or on the client side.
            </summary>
            <remarks>
            Enables moving columns on the client using mouse for the band. Setting the property to <b>NotSet</b>
            inherits the setting from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowColumnMovingDefault"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowColumnMovingResolved">
            <summary>
            Resolves value considering inheritance from the layout object.
            </summary>
            <remarks>
            If the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowColumnMoving"/> property set to <b>NotSet</b> 
            the column moving ability for the band is inherited from the layout of the grid.
            To resolve all inheritance issues and detirmine whether column moving is allowed for the band simply use the 
            <b>AllowColumnMovingResolved</b> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FixedHeaderIndicator">
            <summary>
            Specifies whether the user is allowed to fix/unfix the header on the client.
            </summary>
            <remarks>
            <p class="body">Setting the property to the Button value will enable the user's ability to fix or unfix the header dynamically on the client.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FixedHeaderIndicatorResolved">
            <summary>
            Specifies whether a column header is allowed to be fixed or unfixed by the user. This property will always return the setting that is in control of the column.
            </summary>
            <remarks>
            <p class="body">Whether the user is allowed to fix/unfix columns is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FixedHeaderIndicator"/> property. However, <b>FixedHeaderIndicator</b> may be set to a "use default" value, meaning the setting of the property is inherited from the preset value built into the UltraWebGrid.</p>
            <p class="body">To simply find out if the user is allowed to fix the column manually, use the <b>FixedHeaderIndicatorResolved</b> property. This property resolves any inheritance issues and returns a value that tells you if the user is allowed to fix/unfix the column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FixedCellStyle">
            <summary>
            The style that will be applied to cells in the fixed column of the band. This is the default value that may be overridden by individual columns.
            </summary>
            <remarks>
            <p class="body">This property specifies a style that will be applied to all cells in the fixed columns in the band. The style may be overridden by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FixedHeaderStyle">
            <summary>
            The default style that will be applied to headers in the fixed column of the band. This is the default value that may be overridden by individual column.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all headers in the fixed columns in the band. The style may be overridden by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FixedFooterStyle">
            <summary>
            The default style that will be applied to footers in the fixed column of the band. This is the default value that may be overridden by individual column.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all footers in the fixed columns in the band. The style may be overridden by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasFixedCellStyle">
            <summary>
            Determines if a style has been applied to the fixed cells at the band level. This is the default value that may be overridden by individual column.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for the fixed cells has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FixedCellStyle"/> property.) The style can be overriden on the column level.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasFixedHeaderStyle">
            <summary>
            Determines if a style has been applied to the fixed headers at the band level. This is the default value that may be overridden by individual column.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for the fixed headers has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FixedHeaderStyle"/> property.) The style can be overriden on the column level.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasFixedFooterStyle">
            <summary>
            Determines if a style has been applied to the fixed footers at the band level. This is the default value that may be overridden by individual column.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for the fixed footers has been specifically set at the band level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FixedFooterStyle"/> property.) The style can be overriden on the column level.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HeaderLayout">
            <summary>
            Holds the layout of the band's columns' headers.
            </summary>
            <remarks>
            <p class="body">
            The header layout collection is initially populated with the items according to the columns 
            collection. You can change the <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.RowLayoutColumnInfo"/> property of the header 
            items to rearrange the header layout. You can also add extra <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnHeader"/> objects that
            aren't associated with columns. 
            </p>
            <p class="body">
            Removing an item from the layout will hide it from the view. The space where the item used to be 
            shown will remain unless other items are moved into the space. 
            </p>
            <p class="body">
            See the <a href="WebGrid_Using_a_Multi_Column_Header.html">Using a Multi-Column Header</a> help
            topic to see an example of how to create a header layout.
            </p>
            <p class="body">
            It is recommended that <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowColSizingDefault"/> is set to 
            <see cref="T:Infragistics.WebUI.UltraWebGrid.AllowSizing">AllowSizing.Fixed</see> for grids which have header layouts because 
            header resizing can become unpredictable when the header layout is changed. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasHeaderLayout">
            <summary>
            Determines if a header layout has been applied to the band headers.
            </summary>
            <remarks>
            <p class="body">Returns <b>true</b> if the band header layout is created and is modified from its default view.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FooterLayout">
            <summary>
            Holds the layout of the band's columns' footers.
            </summary>
            <remarks>
            <p class="body">
            Initially populated with the items according to the columns collection. 
            Its <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.RowLayoutColumnInfo"/> are set to the default position and size accordingly. 
            By changing the <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.RowLayoutColumnInfo"/> property it is possible to rearrange the items in the layout.
            Removing an item from the layout will hide it from the view. 
            The space where the item used to be shown remains untouched. 
            The neighbouring items need afterwards to be adjusted to fill the space.
            Adding a detached <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> item will provide an extra 
            info inside the layout boundaries, like an extra footer on top of other footers etc.
            </p>
            <p class="body">
            It is recommended that <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowColSizingDefault"/> is set to 
            <see cref="T:Infragistics.WebUI.UltraWebGrid.AllowSizing">AllowSizing.Fixed</see> for grids which have header or footer layouts because 
            column resizing can become unpredictable when the header or footer layout is changed. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasFooterLayout">
            <summary>
            Determines if a footer layout has been applied to the band footers.
            </summary>
            <remarks>
            <p class="body">Returns <b>true</b> if the band footer layout is created and is modified from its default view.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GroupByColumnsHidden">
            <summary>
            Specifies whether the band's columns will be hidden when grouped by.
            </summary>
            <remarks>
            <p class="body">Default value is <b>NotSet</b>. That means that the behavior is
            inherited from the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> setting of the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.GroupByColumnsHiddenDefault"/> property. Setting the property to <b>No</b> allows 
            having the columns remaining in place even if they are grouped by.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GroupByColumnsHiddenResolved">
            <summary>
            Returns a value that determines whether the columns of the ban should be hidden when grouped by.
            </summary>
            <remarks>
            <p class="body">The columns' hiding is controled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GroupByColumnsHidden"/> property. 
            However, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.GroupByColumnsHiddenDefault"/> can be set to a different value.
            If the band has <b>GroupByColumnsHidden</b> set to <b>NotSet</b>, it inherits the columns' hiding value 
            for this property from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.GroupByColumnsHiddenDefault"/> property.</p>
            <p class="body">To simply find out whether columns' hiding is set in the current band, 
            use the <b>GroupByColumnsHiddenResolved</b> property. This property resolves any inheritance 
            issues and returns a value that tells you whether columns' hiding is set in the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AddNewRow">
            <summary>
            The band's level object for the grid that defines the appearance of the add new row.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasAddNewRow">
            <summary>
            Indicates whether the band has an AddNewRow object.
            </summary>
            <remarks>
            <p class="body">You can use this property to determine whether the band has an AddNew Row.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ColumnFilters">
            <summary>
            The ColumnFilters collection contains the filter object which will be applied to this
            particular Band.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasColumnFilters">
            <summary>
            Returns true if the Band has a ColumnFiltersCollection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HasChanges">
            <summary>
            Shows if the band has any changes made to it at design tiem.
            </summary>
            <remarks>
            Design time support for the <b>Quick Design</b> dialog. The property is used to indicate if the band was modified.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.IsTrackingViewState">
            <summary>
            Indicates if the column is tracking its changes at the moment and putting them into the view state.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SelectWhere">
            <summary>
            Allows to provide an extra WHERE condition for the band.
            If set the band is filtered through it.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SelectSort">
            <summary>
            Allows to provide an extra SORT condition for the band.
            If set the band is sorted through it.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the band has attributes.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the band node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the band node.
            </summary>
            <remarks>
            The band has no node value. The property is always Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the band's node has children.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellTitleModeDefault">
            <summary>
            Default behavior for generating the HTML Title attribute of cells in this band.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellTitleModeResolved">
            <summary>
            Determines what the CellTitleMode should be based on current settings
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.HeaderTitleModeDefault">
            <summary>
            Default behavior for generating the HTML Title attribute of column headers in this band.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#WebAgent">
            <summary>
            Reference to the web agent
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortingAlgorithm">
            <summary>
            Defines a sorting algorithm that should be used when the column is sorted on.
            The property can be overriden by the delegate method of a custom sorting algorithm: <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortImplementation"/>, 
            and by the column level's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortingAlgorithm"/>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortImplementation">
            <summary>
            A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.SortRowsCollection"/> delegate 
            method that performs custom sorting algorithm. 
            If set the method takes precedence over the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortingAlgorithm"/> property setting 
            and is called to perform the actual sorting for the rows collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortCaseSensitive">
            <summary>
            Specifies whether to respect or ignore the capitalisation of the values in the cells when sorting.
            </summary>
            <remarks>
            <p class="body">
            Set the property to True to sort in a case sensitive way. Set it to False to ignore case 
            when doing a sort. The default value is True.  This can be useful when doing a 
            <a href="WebGrid_Multiple_Column_Sorting.html"> multiple column sort</a>. 
            </p>
            <p class="body">
            This property also affects grouping. When the property is set to False, cell values
            which are the same except for letter case will be added to the same group. When this happens
            the GroupByRow text will be the text of the first item that is matched.
            </p>
            <p class="body">
            The property will only be applied for columns that have a string <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.DataType">
            DataType</see>. Other column data types like numeric or boolean will always be sorted by value.
            </p>
            <p class="body">
            The SortCaseSensitive property will be applied to sorting on the server as well as sorting on 
            the client. Setting this property will automatically make either type of sorting case sensitive 
            or case insensitive.
            </p>
            <p class="body">
            You can find out the value of the property in javascript by looking at the SortCaseSensitive 
            property of the clientside <a href="WebGrid_Column_Object_CSOM.html">Column</a> object.
            </p>
            <p class="body">
            For columns with a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> or 
            <see cref="!:Infragistics.WebUI.WebCombo.WebCombo"/> editor, case insensitive sorting and grouping
            will be applied to the text of the column rather than the value when this property is set to False.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortCaseSensitiveResolved">
            <summary>
            Returns whether or not the Band should be sorted case sensitively or not. 
            Uses parent's settings if band property hasn't been set.
            </summary>
            <remarks>Not for public use.</remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FilterUITypeResolved">
            <summary>
            Determines what the FilterUIType should be based on the current setting and 
            any parent settings which may alter it.
            </summary>
            <remarks>
            Not for public use
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FilterRowViewResolved">
            <summary>
            Determines what the FilterRowView should be based on the current setting and any parent settings
            which may alter it.
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FilterEvaluationTriggerResolved">
            <summary>
            Determines when the filter will be evaluated on the client when using the FilterRow feature
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FilterComparisonTypeResolved">
            <summary>
            Determines what the FilterComparisonType should be based on current settings and any parent settings which may alter it.
            </summary>
            <remarks>
            Not for public use
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase">
            <summary>
            Abstract base class for keyed collections 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.owner">
            <summary>
            Contains a reference to the Grid control that owns this collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.GetItem(System.Int32)">
            <summary>
            Virtual method that returns the object at the specified index
            </summary>
            <param name="index"></param>
            <returns>The object at the index</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.IndexOf(System.String)">
            <summary>
            Returns the index of the item in the collection that has the
            passed in key or -1 if key not found.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.GetItem(System.String)">
            <summary>
            Returns the object with the passed in key
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.Exists(System.String)">
            <summary>
            Returns true if an object with this key is already
            in the collection. Note, if key is null or a zero
            length string this method returns false
            
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.ValidateKeyDoesNotExist(System.String)">
            <summary>
            Throws an DuplicateNameException if the key already exists
            </summary>
            <param name="key">The key to check</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.ValidateKeyDoesNotExist(System.String,Infragistics.WebUI.UltraWebGrid.IKeyedObject)">
            <summary>
            Throws an DuplicateNameException if the key already exists
            </summary>
            <param name="key">The key to check</param>
            <param name="ignoreObject">Don't throw an exception if the key matches this item.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.CreateArray">
            <summary>
            Virtual method used by the All 'get' method to
            create the array it returns.
            </summary>
            <returns>The newly created object array</returns>
            <remarks>This is normally overridden in a derived class to allocate a type safe array.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.CopyTo(Infragistics.WebUI.UltraWebGrid.IKeyedObject[],System.Int32)">
            <summary>
            Copies the items into the array
            </summary>
            <param name="array">Target array</param>
            <param name="index">Index where to begin copying</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.Contains(Infragistics.WebUI.UltraWebGrid.IKeyedObject)">
            <summary>
            Returns true if the collection contains this item
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.IndexOf(Infragistics.WebUI.UltraWebGrid.IKeyedObject)">
            <summary>
            Returns the index of the item in the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.InternalAdd(Infragistics.WebUI.UltraWebGrid.IKeyedObject)">
            <summary>
            Appends the object to the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.InternalInsert(System.Int32,Infragistics.WebUI.UltraWebGrid.IKeyedObject)">
            <summary>
            Inserts an object into the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.InternalClear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.InternalRemove(Infragistics.WebUI.UltraWebGrid.IKeyedObject)">
            <summary>
            Removes an item from the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.InternalRemoveAt(System.Int32)">
            <summary>
            Removes an item from the collection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.Owner">
            <summary>
            Provides public access to the owning object of this collection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.IsReadOnly">
            <summary>
            Returns true if the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.BandsCollection">
            <summary>
            The collection of UltraGridBand objects.
            </summary>
            <remarks>
            <p class="body">
            Each <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> represents 
            a level in the hierarchical organization of the grid, and corresponds to a 
            table or similar recordsource in the datasource to which the grid is bound. 
            For programmer convenience and design-time persistence, the Bands collection
            is available in two places within the grid: From the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Bands"/> property 
            of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/> object and 
            from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Bands"/> property of the 
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> object.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.#ctor">
            <summary>
            Public constructor for the Bands Collection.  
            </summary>
            <remarks>The Bands collection is created for the grid by default and does not need to be constructed.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.GetEnumerator">
            <summary>
            Returns an enumerator object for the collection.
            </summary>
            <remarks>Implementation for IEnumerable support.</remarks>
            <returns>The enumerator object for this collection</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.FromKey(System.String)">
            <summary>
            Property indexer for the collection. 
            </summary>
            <remarks>Uses the Key string to return an UltraGridBand object.</remarks>
            <param name="key">The string key which uniquely identifies the <b>UltraGridBand</b> object.</param>
            <returns>The <b>UltraGridBand</b> object that has the input key, null otherwise.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridBand)">
            <summary>
            Adds an UltraGridBand object into the Bands collection.
            </summary>
            <param name="band">The UltraGridBand object to be added.</param>
            <remarks>Adds the input <b>UltraGridBand</b> object to the collection and the next available index. Adds the <b>UltraGridBand</b> object to ViewState if it is being tracked on the <B>UltraWebGrid</B>. </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.UltraGridBand)">
            <summary>
            Inserts an UltraGridBand object into the Bands collection at a specified index.
            </summary>
            <param name="index">The position in the collection for the new band. Note that if you specify the index of an existing band, the new band will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="band">The <b>UltraGridBand</b> object to be inserted into the collection.</param>
            <remarks>Adds the <b>UltraGridBand</b> object to ViewState if it is being tracked on the <B>UltraWebGrid</B>.</remarks>		
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridBand)">
            <summary>
            Removes the specified UltraGridBand object from the collection.
            </summary>
            <param name="band">The UltraGridBand object to be removed from the collection.</param>
            <remarks>Also removes the object from ViewState.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the UltraGridBand object at the specified index from the collection.
            </summary>
            <param name="index">The index of the UltraGridBand object to be removed.</param>
            /// <remarks>Also removes the object from ViewState.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Clear">
            <summary>
            Removes all UltraGridBand objects from the collection.
            </summary>
            <remarks>This method can be used to clear out the existing structure of the WebGrid when switching DataSources in a ViewState tracked grid.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.CreateBackup">
            <summary>
            Internally persists the current band structure for rollback support.
            </summary>
            <remarks>Used during rollback support to save the band objects so that changes can be undone.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Commit">
            <summary>
            Persists changes made to the collection
            </summary>
            <remarks>Finalizes changes made to the collection and it's subobjects.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Rollback">
            <summary>
            Returns the collection back to it's last commital point.
            </summary>
            <remarks>Used to undo changes made to the control via the designer.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Repopulates the control from ViewState.
            </summary>
            <remarks>Implmentation from IStateManager.  Takes the object array that was created in SaveViewState and applies to the control the settings therein.</remarks>
            <param name="savedState">An object array which contains the values persisted in ViewState.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the bands collection.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The bands collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
            <remarks>
            The bands collection don't have any attributes. This method always returns -1.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The bands collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
            <remarks>
            The bands collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the bands collection. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the bands collection.
            </summary>
            <returns>
            First sibling in the path is the layout object.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            The bands collection is the next sibling.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Gets the previous sibling of the bands collection.
            </summary>
            <returns>
            The layout object is always returned.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the bands collection's parent node.
            </summary>
            <returns>
            UltraWebGrid object.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the bands collection.
            </summary>
            <returns>
            The first band in the collection is returned.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.BandsCollection.IsReadOnly">
            <summary>
            Returns a Boolean value indicating whether the collection is read-only.
            </summary>
            <remarks>The <b>Bands Collection</b> object is a not read only object.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.BandsCollection.Item(System.Int32)">
            <summary>
            Property indexer for the collection.  
            </summary>
            <remarks>Allows for iteration though the collection via the index of the band.</remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.BandsCollection.HasChanges">
            <summary>
            Evaluates if the collection has been modified since the last checkpoint.
            </summary>
            <remarks>Used to support ISupportRollback, this method allows the control to know if it has unapplied changes to finalize.</remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.BandsCollection.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Returns whether ViewState is being tracked on the object.
            </summary>
            <remarks>Implementation for IStateManager.  True if the collection is tracked in ViewState.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the bands collection has attributes.
            </summary>
            <remarks>
            The bands collection has no attributes. The property is always false.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the bands collection node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the bands collection node.
            </summary>
            <remarks>
            The bands collection has no node value. The property is always Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.BandsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the bands collection has children.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell">
             <summary>
             This class represents a cell in the grid (a specific column in a specific row). 
             </summary>
             <remarks>
             <p class="body">
             The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object represents an individual data cell in the grid. A 
             cell object corresponds to a single value in the grid's data. 
             </p>
             <p class="body">
             Cells are the atomic unit for accessing and formatting data. They occupy the lowest level of 
             the data hierarchy following the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/>, <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> and 
             the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> objects. They can be used to manipulate the appearance and 
             behavior of the grid at a very fine level.
             </p>
             <p class="body">
             Cells are usually automatically generated by the grid when the grid is 
             <a href="WebGrid_Data_Binding.html">data bound</a> or when a new row is programmatically 
             <see cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">added</see> to the grid. Cells can also be 
             <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.#ctor(System.Boolean)">created programmatically</see> for grids with unbound data.
             </p>
             <p class="body">
             Most properties on a cell object automatically inherit their settings from the row, column, 
             band or grid that the cell belongs to. Properties set directly on the cell override the 
             inherited settings. 
             </p>
             <p class="body">
             Some of the cell's most useful properties are:
             <list type="bullet">
             <item><see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Value"/> - access cell contents</item>
             <item><see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.TargetURL"/> - make the cell's text into a hyperlink</item>
             <item><see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Style"/> - override appearance settings</item>
             <item><see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.AllowEditing"/> - control editing on a cell-by-cell basis</item>
             <item><see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Column"/>, <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Band"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Row"/> - find out the cell's position in the grid's hierarchy</item>
            </list>
             </p>
             </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IRenderable">
            <summary>
            Interface helps to output directly to stream
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IRenderable.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            If an element supports rendering this method should be implemented
            </summary>
            <param name="stream">
            Direct output stream
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IRenderable.RenderInner(System.Web.UI.HtmlTextWriter)">
            <summary>
            Inner part of the element is rendered here
            </summary>
            <param name="stream">
            Direct stream output
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object with an empty <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Value"/> that inherits 
            ViewState settings from the parent row.
            </summary>
            <remarks>
            <p class="body">
            You can use this constructor to create <see ref="UltraGridCell"/> objects if you are 
            programmatically creating rows and columns in an 
            <a href=" WebGrid_Create_an_Unbound_WebGrid.html">unbound grid</a>.
            </p>
            <p class="body">
            It is not necessary to manually create cell objects when creating unbound 
            <see ref="UltraGridRow">rows</see>. Cells will automatically be created when a new row is added 
            to the grid if the row's <see ref="UltraGridRow.Cells">cell collection</see> is empty. 
            </p>
            <p class="body">
            It is important to add any programmatically created cells to the row before adding the row to 
            the grid. Any cells added after the row has been added to the grid won't be displayed because 
            the grid will have already created a cell object for each column in the row.
            </p>
            <p class="body">
            Make sure that the number of cells in the row is equal to the number of columns in the row's 
            band. Each cell must be associated with a column position. Any extra cells that are added will 
            not be displayed.  
            </p>
            <p class="body">
            The most common problem with creating an unbound grid is with cell values not being persisted 
            after postback. This usually happens when viewstate tracking hasn't been turned on for the cell 
            objects. Viewstate can be turned on or off for the cell, row, column and band objects to give 
            fine grained control over how viewstate is tracked by the grid. The viewstate tracking is set 
            by a parameter that is passed to object's constructor.  This is only a problem for grid objects 
            that are created with a constructor. Grid objects created by calling the 
            <see cref="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">Columns.Add()</see> or 
            <see cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">Rows.Add()</see> methods will automatically have 
            the same viewstate tracking settings as the grid. 
            </p>
            <p class="body">
            Cell created with the default constructor automatically inherit viewstate tracking from the 
            cell's <see ref="Row">parent row</see>. If you create unbound cells with a default constructor 
            make sure you don't also create the row with the default constructor or the viewstate tracking 
            will be turned off and the cells will lose their values on postback. 
            </p>
            <p class="body">
            To explicitly enable viewstate tracking for the cell, create it using the 
            <see ref="UltraGridCell(bool)"/> constructor and pass in true. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.#ctor(System.Boolean)">
            <summary>
            Creates a new <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object with an empty <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Value"/> property. 
            Overrides ViewState settings from the parent row with the value of the TrackViewState parameter.
            </summary>
            <param name="bTrackViewState">
            boolean - Designates whether the cell should be included in the viewstate of the WebGrid. 
            Setting the value to <b>true</b> will make the cell's properties automatically persist across 
            postbacks. 
            </param>
            <remarks>
            <p class="body">
            You can use this constructor to create <see ref="UltraGridCell"/> objects if you are 
            programmatically creating rows and columns in an 
            <a href=" WebGrid_Create_an_Unbound_WebGrid.html">unbound grid</a>.
            </p>
            <p class="body">
            It is not necessary to manually create cell objects when creating unbound 
            <see ref="UltraGridRow">rows</see>. Cells will automatically be created when a new row is added 
            to the grid if the row's <see ref="UltraGridRow.Cells">cell collection</see> is empty. 
            </p>
            <p class="body">
            It is important to add any programmatically created cells to the row before adding the row to 
            the grid. Any cells added after the row has been added to the grid won't be displayed because 
            the grid will have already created a cell object for each column in the row.
            </p>
            <p class="body">
            Make sure that the number of cells in the row is equal to the number of columns in the row's 
            band. Each cell must be associated with a column position. Any extra cells that are added will 
            not be displayed.  
            </p>
            <p class="body">
            The most common problem with creating an unbound grid is with cell values not being persisted 
            after postback. This usually happens when viewstate tracking hasn't been turned on for the cell 
            objects. Viewstate can be turned on or off for the cell, row, column and band objects to give 
            fine grained control over how viewstate is tracked by the grid. The viewstate tracking is set 
            by a parameter that is passed to object's constructor.  This is only a problem for grid objects 
            that are created with a constructor. Grid objects created by calling the 
            <see cref="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">Columns.Add()</see> or 
            <see cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">Rows.Add()</see> methods will automatically have 
            the same viewstate tracking settings as the grid. 
            </p>
            <p class="body">
            To explicitly enable viewstate tracking for the cell, pass true as the parameter to the 
            constructor. To turn the cell's viewstate off, pass false. 
            </p>
            <p class="body">
            This will only be effective if the parent row has viewstate tracking turned off. If the row 
            has viewstate tracking turned on, the cells will automatically be persisted in viewstate even 
            if false is passed to the constructor. 
            </p>
            <p class="body">
            If the cell is created using the <see ref="UltraGridCell()"/> or <see ref="UltraGridCell(object)"/>
            constructors, the track viewstate setting will be taken from the settings of the parent row. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object which inherits ViewState settings from the parent 
            row. The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Value"/> of the cell is automatically set to the value parameter.
            </summary>
            <param name="val">
            The value that is assigned to the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Value"/> property of the cell. The type of the
            object must be compatible with the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.DataType"/> of the cell's column.
            </param>
            <remarks>
            <p class="body">
            You can use this constructor to create <see ref="UltraGridCell"/> objects if you are 
            programmatically creating rows and columns in an 
            <a href=" WebGrid_Create_an_Unbound_WebGrid.html">unbound grid</a>.
            </p>
            <p class="body">
            It is not necessary to manually create cell objects when creating unbound 
            <see ref="UltraGridRow">rows</see>. Cells will automatically be created when a new row is added 
            to the grid if the row's <see ref="UltraGridRow.Cells">cell collection</see> is empty. 
            </p>
            <p class="body">
            It is important to add any programmatically created cells to the row before adding the row to 
            the grid. Any cells added after the row has been added to the grid won't be displayed because 
            the grid will have already created a cell object for each column in the row.
            </p>
            <p class="body">
            Make sure that the number of cells in the row is equal to the number of columns in the row's 
            band. Each cell must be associated with a column position. Any extra cells that are added will 
            not be displayed.  
            </p>
            <p class="body">
            The most common problem with creating an unbound grid is with cell values not being persisted 
            after postback. This usually happens when viewstate tracking hasn't been turned on for the cell 
            objects. Viewstate can be turned on or off for the cell, row, column and band objects to give 
            fine grained control over how viewstate is tracked by the grid. The viewstate tracking is set 
            by a parameter that is passed to object's constructor.  This is only a problem for grid objects 
            that are created with a constructor. Grid objects created by calling the 
            <see cref="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">Columns.Add()</see> or 
            <see cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">Rows.Add()</see> methods will automatically have 
            the same viewstate tracking settings as the grid. 
            </p>
            <p class="body">
            Cell created with the default constructor automatically inherit viewstate tracking from the 
            cell's <see ref="Row">parent row</see>. If you create unbound cells with a default constructor 
            make sure you don't also create the row with the default constructor or the viewstate tracking 
            will be turned off and the cells will lose their values on postback. 
            </p>
            <p class="body">
            To explicitly enable viewstate tracking for the cell, create it using the 
            <see ref="UltraGridCell(bool)"/> constructor and pass in true. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object.
            </summary>
            <returns>
            Reflects the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Text"/> property.
            </returns>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. 
            In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Activate">
            <summary>
            Sets the current cell as the active cell.
            </summary>
            <remarks>
            <p class="body">
            Sets this cell to be the active cell. Calling this method is the same as setting the cell's 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Activated"/> property to true and as assigning the cell to the grid's 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveCell"/> property. The method can only be used to set a cell as 
            active. Set the cell's Activated property to false to remove activation.
            </p>
            <p class="body">
            The grid has only one ActiveCell at any time. The active cell is the cell that has user focus. 
            Being active is different from being <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Selected"/>. Multiple cells can be selected at 
            the same time.  
            </p>
            <p class="body">
            Calling this method to change the ActiveCell won't cause the grid's 
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveCellChange"/> event to fire. The event will only be fired if the 
            cell was changed by the user in the browser. 
            </p>
            <p class="body">
            The cell's <a href="WebGrid_cell_Object_CSOM.html">javascript object</a> also has an activate()
            method that you can use to activate the cell programmatically in the browser without doing a 
            postback. Any changes to the active cell made using this method will be persisted after postback. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.GetText">
            <summary>
            Returns the text of the cell taking into account any data masking that has been applied.
            </summary>
            <returns>
            Formatted text of the cell.
            </returns>
            <remarks>
            <p class="body">
            The string value returned by this method includes any data formatting or masking that 
            has been applied to a cell. So for example, if a number has been formatted as a telephone 
            number, this method will return a string that includes the parentheses and dashes shown in the number.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.CopyFrom(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Copies the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object.
            </summary>
            <param name="cell">
            The object to copy properties from
            </param>
            <returns>
            The current cell where new propertie were copied into.
            </returns>
            <remarks>
            Can be used to reflect all properties of another cell into the current one.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> class to their default values.
            </summary>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.IsEditable">
            <summary>
            Shows if the cell is editable.
            </summary>
            <returns>
            <b>true</b> if the cell can be edited.
            </returns>
            <remarks>
            Resolves all properties that control editing of the cell in the grid and returns the result.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.LoadViewState(System.Object)">
            <summary>
            Loads saved view state into the cell object.
            </summary>
            <param name="savedState">
            Previously saved view state object.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.SaveViewState">
            <summary>
            Saves the cell's view state.
            </summary>
            <returns>
            Saved views state object of the cell.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.TrackViewState">
            <summary>
            Enables tracking any changes in the cell in order to put them into the view state.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the cell.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the cell. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the cell.
            </summary>
            <returns>
            Self if the cell is the first cell in the cells collection. 
            The first cell in the cells collection otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Null if the cell has no next siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Returns previous sibling.
            </summary>
            <returns>
            Null if the cell has no previous siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the parent - cells collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the cell.
            </summary>
            <returns>
            The cell has one child. That is CellText.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IRenderable#Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            If an element supports rendering this method should be implemented
            </summary>
            <param name="stream">
            Direct output stream
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.RenderAttribute(System.String,System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="stream"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IRenderable#RenderInner(System.Web.UI.HtmlTextWriter)">
            <summary>
            Inner part of the element is rendered here
            </summary>
            <param name="stream">
            Direct stream output
            </param>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridCell.preregStyles">
            <summary>
            Keeps styles to register if a style is being register before style repository is created
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#InitializeStyles">
            <summary>
            Registers all styles with the style repository.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance
            </summary>
            <remarks>The method works closely with the style repository.</remarks>
            <param name="role">Defines the role of the style to return.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole,System.Boolean)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance. The boolean parameter will determine if the
            parents' class names need to be inserted.
            </summary>
            <param name="role">Defines the role of the style to return.</param>
            <param name="withParents">Determines if the parents' class names need to be inserted.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Activated">
            <summary>
            Indicates whether this cell is the active cell.
            </summary>
            <remarks>
            <p class="body">
            The active cell is the cell that currently has user focus. This property will be true if this
            cell is currently the cell with focus and false otherwise. 
            </p>
            <p class="body">
            Only one cell in the grid may be active at any time. Find out which cell is the active 
            cell by looking at the grid's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveCell">DisplayLayout.ActiveCell</see> 
            property.
            </p>
            <p class="body">
            Being active is not the same as being <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Selected"/>. A cell can be selected but not active. 
            Multiple cells can be selected at any time but only one cell will be active. 
            </p>
            <p class="body">
            If activation is disabled in the grid, the Activated property will always be false. Disable 
            activation by setting the grid's 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.ActivationObject.AllowActivation">DisplayLayout.ActivationObject.AllowActivation</see> 
            property. 
            </p>
            <p class="body">
            You can set the cell active property in javascript by calling the cell's
            <a href="WebGrid_cell_Object_CSOM.html">activate()</a> method. Any changes that made 
            using the active() method will automatically be persisted when the page is posted back. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Band">
            <summary>
            Returns the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object of the band that contains the cell.
            </summary>
            <remarks>
            <p class="body">
            Use the Band property to get a reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> that the cell belongs to. 
            This is useful for working out where a cell is within the grid's hierarchy. 
            </p>
            <p class="body">
            This property is read-only. It will be null until the cell has been added to an  <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> 
            object that has been added to the grid.
            </p>
            <p class="body">
            The cell's <a href="WebGrid_cell_Object_CSOM.html">javascript object</a> also has the same property that 
            you can use in <a href="WebGrid_CSOM.html">clientside code</a>. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Row">
            <summary>
            Returns the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object of the row that contains the cell.
            </summary>
            <remarks>
            <p class="body">
            Use the Row property to get a reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> that the cell belongs to.
            This is useful for working out where a cell is within the grid's hierarchy. 
            </p>
            <p class="body">
            This property is read-only. It will be null until the cell has been added to an 
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object.
            </p>
            <p class="body">
            The cell's <a href="WebGrid_cell_Object_CSOM.html">javascript object</a> also has the same property that 
            you can use in <a href="WebGrid_CSOM.html">clientside code</a>. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Column">
            <summary>
            Returns the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> 
            object of the column that this cell belongs to.
            </summary>
            <remarks>
            <p class="body">
            Use the Column property to get a reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> that the cell 
            belongs to. This is useful for working out where a cell is within the grid's hierarchy. 
            </p>
            <p class="body">
            This property is read-only. It will be null until the cell has been added to an  
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object that belongs to the grid.
            </p>
            <p class="body">
            The cell's <a href="WebGrid_cell_Object_CSOM.html">javascript object</a> also has the same property that 
            you can use in <a href="WebGrid_CSOM.html">clientside code</a>. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.DataChanged">
            <summary>
            Indicates whether the cell's data has been edited and not yet committed to the database
            </summary>
            <remarks>
            <p class="body">
            When the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Value"/> of a cell is changed by user interaction, this property is set to 
            true and the update events like <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCell"/> and 
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateGrid"/> are fired by the grid. 
            </p>
            <p class="body">
            If the cell's data has been changed on the client the DataChanged property will be true on the 
            server for the entire postback. Once the postback is over, the DataChanged property will be set 
            back to false even if you haven't processed the change. Canceling the grid's update event won't 
            stop this happening. 
            </p>
            <p class="body">
            If you need to know which cells had DataChanged set to true on a previous postback, save the 
            information in the cell's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Tag"/> property. This is useful to track which cells have 
            failed validation but haven't been saved.  There is an example of this in the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Tag"/> 
            documentation page.
            </p>
            <p class="body">
            DataChanged will automatically get set for cells that are updated using an 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.EditorControlID">editor control</see> or one of the grid's built in 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Type">editors</see>. DataChanged won't get set for changes made to 
            controls inside a templated cell because controls inside a template can't participate in the grid's
            update functionality. 
            </p>
            <p class="body">
            If you change the cell's value on the client using the <a href="WebGrid_cell_Object_CSOM.html">setValue()</a> 
            method, the cell's DataChanged property will be set to true next time you post back to the server.
            Changing a cell's value in server side code does not cause the property to change.
            </p>
            <p class="body">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> also has a property called <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.DataChanged"/> 
            that contains similar information for the entire row. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Tag">
            <summary>
            A field for storing user-defined information about the object. 
            </summary>
            <remarks>
            <p class="body">
            The Tag property is a field for storing arbitrary information about a cell object. It can be used 
            to save any extra state information about a cell that you will need on the next postback. 
            </p>
            <p class="body">
            It's best not to store complex objects in the Tag property because whatever is in the tag 
            will be saved to viewstate so it can be persisted between postbacks. Complex objects
            generate more viewstate and can make the page that's sent to the browser very large. 
            </p>
            <p class="body">
            When using the tag property on a grid with viewstate enabled, make sure the object being stored 
            is serializable. If it isn't serializable the grid won't be able to save it to viewstate and will 
            throw a SerializationException. 
            </p>
            <p class="body">
            The tag's value is only available on the server. There's no way to access it through javascipt 
            in the browser.  
            </p>
            <p class="body">
            Most of the grid's data objects have a Tag property. State information can also be stored in
            the tag property of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/>, <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/>, 
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> and <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> objects. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Text">
            <summary>
            Text string associated with the value of a cell.
            </summary>
            <remarks>
            <p class="body">
            The Text property returns the display text for cells that have a <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ValueList"/> 
            or <see cref="!:Infragistics.WebUI.WebCombo.WebCombo"/> editor. For cells with other editor types it 
            returns a string representation of the cell's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Value"/>. For cells with date and numeric types 
            it will return the value formatted with US culture settings.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Value"/> property to get a typed reference to the cell's value. Use the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.GetText"/>
            method to get the cell's text as it will be displayed to the user for all other editor types. 
            </p>
            <p class="body">
            A cell's Text property can't contain something different from its Value property. Setting the Text 
            overwrites whatever is already in the Value property. It is better to set the Value property 
            directly so you can set a typed object.
            </p>
            <p class="body">
            If you need the text displayed to be different from the Value of the column you can add a 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ValueList"/> to the column that contains a list of text and value pairs.
            You can use a ValueList to do this even if you don't want to make the column editable. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Value">
            <summary>
            The value stored in a cell, as it appears in the data source.
            </summary>
            <remarks>
            <p class="body">
            The Value property contains the cell's data. It has a reference to the object from the 
            data source that the cell will display. It can be set to any type of object but it will 
            usually contain a string, numeric, boolean or date object. 
            </p>
            <p class="body">
            The Value property will be automatically set when the cell is created during 
            <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DataBind">data binding</see>. You can also set the cell's Value 
            directly after the binding is complete. Any values in the grid before data binding will 
            be overwritten. 
            </p>
            <p class="body">
            The type of the Value of the cell must match the column's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.DataType">
            DataType</see>.  The cell will make an attempt to do a conversion to the right type if 
            a value is set that doesn't match. This is so you can set a string representation of a date, 
            numeric or boolean type. Be careful when using this because if conversion fails the value of 
            the cell's Value won't be updated. 
            </p>
            <p class="body">
            The Value property returns a typed reference to the cell's value. Use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Text"/> 
            property to get a reference to the cell's value as a string and the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.GetText"/> method 
            to get the cell's text after formatting has been applied.
            </p>
            <p class="body">
            If you are using viewstate to store the grid's values between postbacks you will need to 
            make sure that any custom types have the Serializable attribute. Avoid setting the Value 
            property to large custom types because it will increase your page's viewstate dramatically. 
            Store just the value that you want to display instead of the whole type. 
            </p>
            <p class="body">
            Any HTML tags in the cell's Value will be used to format the cell unless the column's 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HTMLEncodeContent">HTMLEncodeContent</see> property is set to 
            true. Use the cell's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.TargetURL"/> property if you just want to add a hyperlink.
            </p>
            <p class="body">
            The cell's Value won't be displayed for <a href="WebGrid_Using_Column_Templates.html">templated 
            columns</a>. The grid will display whatever controls are in the template instead. Setting the Value
            won't affect the items inside the template. Cells in templated columns can still have a Value set. 
            This can be used  to pass information between the browser and the server. 
            </p>
            <p class="body">
            The cell's value can be accessed using javascript through the 
            <a href="WebGrid_cell_Object_CSOM.html">cell object's</a> getValue() and setValue() methods. 
            Any changes made in javascript code using setValue() will automatically be saved when the page 
            is posted back to the server.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.CurrentCellChange">
            <summary>
            Used to point to the final StateChange object during cell change processing in 
            ProcessChanges method.  For internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Style">
            <summary>
            An <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the cell.
            </summary>
            <remarks>
            <p class="body">
            Use this property to provide a custom style for the cell. Common style attributes that can be 
            adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to 
            provide a consistent look throughout your application, enhance the appearance of certain areas 
            of the grid, or to call attention to important data.
            </p>
            <p class="body">
            The cell will automatically 
            <a href="WebGrid_Style_Inheritance.html">inherit its style information</a> from the grid's 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowStyleDefault">DisplayLayout.RowStyleDefault</see> property, the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.CellStyle">CellStyle</see> from its column and any 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style">Style</see> set directly on its row. Anything that you set directly
            on the cell will override anything inherited from the other styles. 
            </p>
            <p class="body">
            See the grid's <a href=" WebGrid_Run_Time_Styling.html">styling help topic</a> for more general 
            information about styling the grid. 
            </p>
            <p class="body">
            The cell's style can be overridden in javascript by setting the Element.style property of the 
            <a href="WebGrid_cell_Object_CSOM.html">cell object</a>. Any changes to the cell's style made 
            in javascript won't be persisted after postback. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.HasStyle">
            <summary>
            Determines if a style has been applied to the cell.
            </summary>
            <remarks>
            <p class="body">
            Returns True if a style has been specifically set for the cell (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Style"/> 
            property.) If False, the cell has no style of its own and its appearance will be 
            <a href="WebGrid_Style_Inheritance.html">inherited</a>
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Selected">
            <summary>
            Returns or sets a value that determines whether the cell is selected.
            </summary>
            <remarks>
            <p class="body">
            Cells can be set as selected so the user can perform an action on a group of cells.
            </p>
            <p class="body">
            Cells that are selected will be put in the grid's 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedCells">SelectedCells</see> collection. They will have the
            grid's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedRowStyleDefault">SelectedRowStyle</see> and the 
            column's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SelectedCellStyle">SelectedCellStyle</see> applied to them. 
            The selected styles will override any style already set on the cell. 
            </p>
            <p class="body">
            The grid's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedRowStyleDefault">SelectedRowStyle</see> isn't set
            by default so the cells that are selected won't look different from the other cells until it's 
            given some style information. This is a common problem with getting the grid selection to work. 
            </p>
            <p class="body">
            Being selected is different to being <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Activated"/>. Multiple cells can be selected
            but only one cell can be active in the grid at any one time
            </p>
            <p class="body">
            Use the grid's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectTypeCellDefault">DisplayLayout.SelectTypeCellDefault</see> 
            property to change the way cell selection works in the grid. 
            </p>
            <p class="body">
            You can access the cell's Selected property in javascript using the 
            <a href="WebGrid_cell_Object_CSOM.html">cell object's</a> getSelected() and setSelected() methods. 
            Any changes made in javascript code using setSelected() will automatically be saved when the page 
            is posted back to the server.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.ColSpan">
            <summary>
            Defines how many columns the cell occupies. This property is similar to the COLSPAN attribute 
            of table cell tags in HTML.
            </summary>
            <remarks>
            <p class="body">
            The ColSpan property is used for <a href="WebGrid_Merging_Cells_Manually.html">manual cell 
            merging</a>. Set the property to the number of cells to the right that this cell should be 
            merged with. 
            </p>
            <p class="body">
            Cell merging always happens left to right. Set the ColSpan property of the leftmost cell 
            in the group. Any other cells in the merged group will not be displayed in the browser. ColSpan 
            is only used for horizontal merging. To merge vertically use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.RowSpan"/> property. 
            </p>
            <p class="body">
            Some of the grid's features can't be used when cell merging is turned on. This is because of 
            the unpredictable way that merging affects the table structure.
            <list type="bullet">
            	<item>Using <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.UseFixedHeaders">fixed headers</see> and merged  
            	cells together isn't supported.</item>
            	<item>Clientside functionality that changes the rows in the grid like sorting, filtering, 
            	hiding columns and deleting rows will require the grid to be posted back to the server 
            	for the merged cells to be redrawn.</item>
            </list>
            </p>
            <p class="body">
            Merging only applies to grid cells. Use <a href="WebGrid_Using_a_Multi_Column_Header.html">header 
            layouts</a> to do the same for header cells. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.RowSpan">
            <summary>
            Defines how many rows the cell occupies.
            </summary>
            <remarks>
            <p class="body">
            The RowSpan property is used for <a href="WebGrid_Merging_Cells_Manually.html">manual cell 
            merging</a>. Set the property to the number of cells below that this cell should be 
            merged with. 
            </p>
            <p class="body">
            The grid can automatically merge adjacent cells within the same column that have 
            the same value. Enable this by setting the column's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.MergeCells">MergeCells</see> 
            property. If you use this property you don't need to set the RowSpan property directly on the 
            cells.
            </p>
            <p class="body">
            RowSpan cell merging always happens from top to bottom. Set the RowSpan property of the top 
            cell in the group. Any other cells in the merged group will not be displayed in the browser. 
            RowSpan is only used for vertical merging. To merge horizontally use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.ColSpan"/> 
            property. 
            </p>
            <p class="body">
            Some of the grid's features can't be used when manual cell merging is used. This is because 
            of the unpredictable way that merging affects the table structure.
            <list type="bullet">
            	<item>Using <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.UseFixedHeaders">fixed headers</see> and merged cells 
            	together isn't supported.</item>
            	<item>Clientside functionality that changes the rows in the grid like sorting, filtering, 
            	hiding columns and deleting rows will require the grid to be posted back to the server for the
            	merged cells to be redrawn.</item>
            </list>
            </p>
            <p class="body">
            In grids with multiple bands, if a row within the row span has child rows and can be expanded 
            the rowspan is only extended up to this row so the row can be expanded.
            </p>
            <p class="body">
            Merging only applies to grid cells. Use <a href="WebGrid_Using_a_Multi_Column_Header.html">header 
            layouts</a> to do the same for header cells. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.AllowEditing">
            <summary>
            Determines whether the values of the cell may be edited.
            </summary>
            <remarks>
            <p class="body">
            Enable or disable editing for a single cell. Overrides the AllowUpdate settings on the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowUpdateDefault">grid</see>, 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowUpdate">band</see> and 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowUpdate">column</see>. Use the cell's <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.IsEditable"/> 
            method to find out whether the cell will be editable if the cell's AllowEditing property is 
            NotSet. 
            </p>
            <p class="body">
            If AllowEditing is set to false, the grid will not go into edit mode if the user interacts 
            with the grid or if the cell is put into edit mode programmatically using the 
            <a href=" WebGrid_cell_Object_CSOM.html">beginEdit()</a> method. 
            </p>
            <p class="body">
            The AllowEditing property can be overridden in javascript by calling the cell object's 
            clientside setEditable() method. Changes made using this method won't be persisted when the 
            page is posted back. Edit mode can also be cancelled for a cell in the browser by handling 
            the <see cref="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeEnterEditModeHandler">BeforeEnterEditModeHandler</see> 
            clientside event and returning true.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Title">
            <summary>
            Sets tooltip for the cell.
            </summary>
            <remarks>
            <p class="body">
            Sets the HTML title attribute of the cell. The cell's title is the text that will be 
            displayed as a tooltip when a user hovers their mouse over a cell. It is also used to 
            provide extra information for people using screen reading software. 
            </p>
            <p class="body">
            Cells do not display titles by default. Set the cell's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.TitleMode"/> property 
            to automatically generate a title based on the cell's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Value"/>. Alternatively, 
            you can set the cell's title property explicitly to create a customized tooltip. Set the 
            Title property to null to avoid showing a tooltip for cells when the grid's 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellTitleModeDefault"/> is set to Never. 
            </p>
            <p class="body">
            If the grid is in <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Section508Compliant">section 508 compliance mode</see> 
            the tooltip will be automatically generated by the grid. It is not possible to override 
            the default tooltip when the grid is in this mode.
            </p>
            <p class="body">
            Use the header's <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Title">Title</see> property to set 
            titles for column headers. It is not possible to display a title for 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowSelectorsDefault">RowSelectors</see>.
            </p>
            <p class="body">
            Titles must be plain text only. Any HTML tags set will be displayed as plain text
            in the title tooltip. 
            </p>
            <p class="body">
            Cell titles can be set using javascript by setting the Element.title property of the 
            <a href=" WebGrid_cell_Object_CSOM.html">cell's javascript object</a>. Any changes made 
            to the cell's title on the client won't be persisted after postback. 
            </p>
            <p class="note">
            Characters from character sets that aren't installed on the operating system will be 
            displayed in the hover tooltip as boxes in IE. This is an issue with the browser that can 
            be solved by installing the character set in the windows localization settings. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Key">
            <summary>
            Unique string identifier for this Cell within the Cells collection
            </summary>
            <remarks>
            <p class="body">
            Use the Key property to give each cell in a row a unique name. If no key is set, the key is 
            automatically set to be the same as the column's Key. 
            </p>
            <p class="body">
            The key can be used to retrieve the cell from its parent <see cref="T:Infragistics.WebUI.UltraWebGrid.CellsCollection"/> using 
            the <see cref="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.FromKey(System.String)"/> method. This is more robust and convenient than 
            relying on the cell's index to retrieve cells because the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Index"/> 
            can change if a new column is added. 
            </p>
            <p class="body">
            The Key should be unique within the CellsCollection that the cell belongs to. If you have 
            multiple cells with the same key, the FromKey method will return the first cell that matches. 
            The Key doesn't have to be unique within the entire grid. Different cells in different 
            CellsCollections can have the same key. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.TargetURL">
            <summary>
            Sets the target URL for the cell.
            </summary>
            <remarks>
            <p class="body">
            Use this property to set a URL for a cell. If the property is set the cell text is rendered 
            as a hyperlink.
            </p>
            <p class="body">
            Don't URL encode the link before assigning it to the TargetURL property. The link will 
            automatically be encoded by the grid. This means that any characters in the link that aren't 
            allowed in a URL will be converted to a different browser-friendly form. 
            </p>
            <p class="body">
            It's not necessary to set the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Type"/> of the cell's 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Column"/> to Hyperlink to use the cell's TargetURL property. The hyperlink will be 
            rendered for all cell types except Checkbox or Button. If the column's type is Checkbox or 
            Button any TargetURL set on the cell will be ignored. 
            </p>
            <p class="body">
            To set the link's target window, start the link with the @ symbol and the name of the target 
            window in square brackets. For example "@[menu]webpage2.aspx" would open webpage2.aspx in a 
            frame or window called menu. If no target window is set, the link will open in the current browser
            window. 
            </p>
            <p class="body">
            To open the link inside of a new window, you only need to put the @ symbol in front of the URL. 
            This is a shorter way of saying "@[_blank]". For example "@http://www.infragistics.com" would open 
            the Infragistics homepage in a new browser window. 
            </p>
            <p class="body">
            The cell's TargetURL can be accessed through javascript by using the setTargetURL() and 
            getTargetURL() methods of the <a href=" WebGrid_cell_Object_CSOM.html">cell's javascript 
            object</a>. Any changes made to the TargetURL on the client won't be persisted after 
            postback. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.IsTrackingViewState">
            <summary>
            Indicates if the cell is tracking its changes at the moment and putting them into the view state.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the cell has attributes.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Merged">
            <summary>
            Indicates if the cell is covered by another cell due to cell merging.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.RowCellSpan">
            <summary>
            Holds actual row span during rendering.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.ColCellSpan">
            <summary>
            Holds actual col span during rendering.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.RenderID">
            <summary>
            Id of the cell for rendering purposes
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the cell node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the cell.
            </summary>
            <remarks>
            If the cell's value gets complicated (formatting or cell template is applied) it is URL encoded.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the cell's node has children.
            </summary>
            <remarks>
            Cell has one child. That is CellText.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.TitleMode">
            <summary>
            Behavior used for generating the HTML Title attribute of this cell.
            </summary>
            <remarks>
            <p class="body">
            Set TitleMode to turn automatic <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Title"/> generation on or off for a cell in the 
            grid. Setting TitleMode directly on the cell overrides any settings inherited from 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellTitleModeDefault">the grid</see> or 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CellTitleModeDefault">the band</see>.
            </p>
            <p class="body">
            Setting the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Title"/> directly overrides the TitleMode setting. The TitleMode 
            property will only be observed if the Title property is set to null or an empty string. When 
            the Title is set, the title tooltip will display as if TitleMode is set to Always. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#WebAgent">
            <summary>
            Reference to the web agent
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.CellText">
            <summary>
            Class used interally for XML rendering of UltraGridCell objects.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.#ctor(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Creates a CellText object from an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object.
            </summary>
            <param name="cell">The cell you want to render</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the grid.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The grid don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
            <remarks>
            The grid don't have any attributes. This method always returns -1.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The grid don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
            <remarks>
            The grid don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the cell text. It is always XPathNodeType.Text in CLR1 and XPathNodeType.CData in CLR2.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the grid.
            </summary>
            <returns>
            Self as it is always the root.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Always Null as the grid has no next siblings in the XPath order.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Gets the previous sibling of the grid.
            </summary>
            <returns>
            Always Null as the grid has no previous siblings in the XPath order.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the grid parent node.
            </summary>
            <returns>
            Null because the grid is always the root.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the grid.
            </summary>
            <returns>
            Rows collection of the grid.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IRenderable#Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            If an element supports rendering this method should be implemented
            </summary>
            <param name="stream">
            Direct output stream
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IRenderable#RenderInner(System.Web.UI.HtmlTextWriter)">
            <summary>
            Inner part of the element is rendered here
            </summary>
            <param name="stream">
            Direct stream output
            </param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the grid has attributes.
            </summary>
            <remarks>
            The grid has no attributes. The property is always false.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the grid node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the grid node.
            </summary>
            <remarks>
            The grid has no node value. The property is always Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellText.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the grid has children.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.CellsCollection">
            <summary>
            A collection of UltraGridCell objects that make up a row in teh grid.
            </summary>
            <remarks>
            <p class="body">The Cells collection is created for each UltraGridRow in the grid. The UltraGridCell objects in the Cells collection contain the contents of the cell as well as style information to control the appearance of the cell.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>Default constructor, in most cases the overloaded constructor should be used.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.#ctor(System.Boolean)">
            <summary>
            Creates a CellsCollection object with the abilty to be added into ViewState.
            </summary>
            <param name="bTrack">True to add the cell collection into viewstate.</param>
            <remarks>If the CellsCollection is for server side processing only then ViewState is not necessary.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.GetEnumerator">
            <summary>
            Returns an enumerator object for the Cells collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.FromKey(System.String)">
            <summary>
            Cell property indexer for the Cells collection. Uses the column's Key string to return a cell.
            </summary>
            <param name="key">The unique Key name of the column for which the corresponding cell will be returned.</param>
            <remarks>This method allows for location an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object by the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> that it belongs to.  By using
            the Key to fetch cells, developers are not tied by possible changes to the order of the columns as would be the case in using an index to find an <b>UltraGridCell</b> 
            by location.		
            </remarks>
            <returns>An <B>UltraGridCell</B> object in the column from the input key.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Inserts an UltraGridCell object into the collection.
            </summary>
            <param name="cell">The UltraGridCell object to be added.</param>
            <returns>The index of the newly added UltraGridCell.</returns>
            <remarks>This method takes the input cell and appends it into the collection as is.  It will be added to the last spot of the collection.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Add">
            <summary>
            Inserts an UltraGridCell object into the collection.
            </summary>		
            <returns>The index of the newly added UltraGridCell.</returns>
            <remarks>This method internally creates a new cell and appends it onto the existing collection.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Inserts an UltraGridCell object into the collection at the specified index.
            </summary>
            <param name="index">The position in the collection for the new cell. Note that if you specify the index of an existing cell, the new cell will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="cell">The UltraGridCell object to be inserted into the collection.</param>
            <remarks>This method places the input cell at a location in the collection as opposed to appending it to the end of the collection.  If a <b>UltraGridCell</b> object already exists at that
            location then the new Cell assumes it's index location and all other cells are moved up one spot.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.SetAt(System.Int32,Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Replaces an UltraGridCell object in the collection at the specified index.
            </summary>
            <param name="index">The position in the collection for the new cell. Note that the parameter value has to be valid.</param>
            <param name="cell">The UltraGridCell object to replace existing cell in the collection.</param>
            <remarks>Similar to an insert, except that instead of moving the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object that currently exists at the index location, it is replaced in the collection by the input cell.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Removes the specified UltraGridCell object from the collection.
            </summary>
            <param name="cell">The UltraGridCell object to be removed from the collection.</param>
            <remarks>Removes the cell from the collection.  All other Cells in the collection are unmodified.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the UltraGridCell object at the specified index from the collection.
            </summary>
            <param name="index">The index of the UltraGridCell object to be removed.</param>
            <remarks>Removes an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object from the collection via index, rather then instance evaluation. </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Clear">
            <summary>
            Removes all UltraGridCell objects from the collection.
            </summary>
            <remarks>Removes all UltraGridCell objects from the collection.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the cells collection.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The cells collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
            <remarks>
            The cells collection don't have any attributes. This method always returns -1.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The cells collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
            <remarks>
            The cells collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the cells collection. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the cells collection.
            </summary>
            <returns>
            Always returns self as the cells collection is the first sibling in the XPath order.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Child rows collection of the current row. Null if the current row has no child rows.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Gets the previous sibling of the cells collection.
            </summary>
            <returns>
            Always returns Null as the cells collection is the first sibling in the XPath order.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the cells collection parent node.
            </summary>
            <returns>
            The row the cells collection belongs to.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the cells collection.
            </summary>
            <returns>
            First cell of the cells collection.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellsCollection.IsReadOnly">
            <summary>
            Returns a Boolean value indicating whether the collection is read-only.
            </summary>
            <remarks>The collection is not read only in this implementation and this value will always return false.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellsCollection.Item(System.Int32)">
            <summary>
            Cell property indexer for the Cells collection. Uses numeric index.
            </summary>
            <remarks>Using an Integer, attempts to return an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object from the index location in the collection.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellsCollection.Row">
            <summary>
            Gets the Owner Row for the Cells collection.
            </summary>
            <remarks>When a <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object is inside of the WebGrid it would need to be part of an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/>.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellsCollection.IsTrackingViewState">
            <summary>
            Indicates if the cells collection is tracking its changes at the moment and putting them into the view state.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the cells collection has attributes.
            </summary>
            <remarks>
            The cells collection has no attributes. The property is always false.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the cells collection node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the cells collection node.
            </summary>
            <remarks>
            The cells collection has no node value. The property is always Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the cells collection has children.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.CellEnumerator.MoveNext">
            <summary>
            Increments the enumerator to the next valid Cell in the collection
            </summary>
            <returns>bool </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellsCollection.CellEnumerator.Reset">
            <summary>
            Resets the enumeration back to the beginning
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellsCollection.CellEnumerator.Current">
            <summary>
            Provides access to the current Cell item of the enumeration
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents">
            <summary>
            <p>
            Because of the stateless nature of web connections, and the typical delays involved in returning information from the server, UltraWebGrid implements both client-side events and server-side events. You can choose whether you would like to respond to client-side events, which must be implemented through JavaScript.</p>
            The ClientSideEvent object maintains a list of event handlers that are implemented on the client and called in response to events as they occur in the browser.
            </summary>
            <remarks>
            Each event is a string that represents JavaScript function name. The named function must be implemented by the developer in JavaScript code.  There are 
            two obligatory parameters passed to every event function handler: grid name and 
            element ID. There may also be some additional parameters. Look events description 
            for details.	
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.#ctor">
            <summary>
             The default public constructor for the ClientSideEvents object.
            </summary>
            <remarks>
             This object is created automatically by the UltraWebGrid control.
            </remarks>		
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
            <returns>A string representation of the object, in this case the empty string.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.CopyFrom(Infragistics.WebUI.UltraWebGrid.ClientSideEvents)">
            <summary>
            Copies the ClientSideEvents object
            </summary>
            <param name="passin">The ClientSideEvents from which to draw the values </param>
            <returns>A reference to this object.</returns>
            <remarks>This method copies the name of the client handler assigned to the input object to the current object.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterXmlHttpResponseProcessed">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after the XmlHttp response is processed and applied to the WebGrid
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>		
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeXmlHttpRequest">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before the XmlHttp response is sent back to the server
            </summary>
            <remarks>		
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <p class="body">This is not a cancelable event.  It's intended usage is to allow develops a chance to 
            make UI changes on the client, to notify end users that data is being retrieved from the server.
            </p>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>		
            <dt><i>parameter2</i></dt><dd><p class="body">Number. Type of the xml http request that is about to fire. Enumeration can be found off of the grid's eReqType on the client.</p></dd>		
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeFilterDroppedDown">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before the filter box is dropped on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">Object. The filter list that is being dropped.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterFilterDroppedDown">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after the filter box is dropped on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">Object. The filter list that is being dropped.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeFilterPopulated">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before filter list is populated.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">Object. The filter panel object that is being populated.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Object. The column object for which the filter is being dropped.</p></dd>
            <dt><i>parameter4</i></dt><dd><p class="body">Object. The collection that will be used as the filter for the column.  This is initially populated with the server default values.  After this event runs, the list will be appended by the unique values from the cells in this column.</p></dd>
            <dt><i>parameter5</i></dt><dd><p class="body">Object. The last filter collection that was generated for this column. Initially null, this object will be populated on subsequent drops of the dropdown.  This can be used to prevent the WebGrid from having to access each cell again rebuilding a list if no changes were done on the WebGrid.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterFilterPopulated">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after the filter box is populated.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>gridName</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>column</i></dt><dd><p class="body">Object. The column object for which the filter is being dropped.</p></dd>
            <dt><i>workingList</i></dt><dd><p class="body">Object. The workingList that will be shown in the dropdown.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeFilterClosed">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before the filter box is closed.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">Object. The column object for which the filter is being dropped.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterFilterClosed">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after the filter box is closed.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">Object. The column object for which the filter is being dropped.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterRowFilterApplied">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after the filter is applied.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">Object. The column object for which the filter is being dropped.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeRowFilterApplied">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before the filter is applied.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">Object. The column object for which the filter is being dropped.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterRowUpdateHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a row has been updated on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that was updated.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeRowUpdateHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a row has been updated on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that was updated.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.XmlHTTPResponseHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a XmlHTTPResponse has been received on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that was updated.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Object. A client side XMLHTTPResponse object with the data from the server.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterCellUpdateHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a cell has been updated on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell that was updated.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterColumnMoveHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a column has been moved on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the column that was moved.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterColumnSizeChangeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after the width of a column has changed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the column that was resized.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The new width of the column.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterEnterEditModeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after the user begins editing a cell.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell being edited.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterExitEditModeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after the value of a cell has been edited on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell that was edited.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterRowActivateHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a row is activated on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that was activated.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterRowCollapsedHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a row is collapsed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that was collapsed.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterRowDeletedHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a row is deleted on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that was deleted.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterRowTemplateCloseHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a row edit template is closed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that was edited.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Boolean. Indicates if the changes of the row were saved from within the template.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterRowTemplateOpenHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a row edit template is opened on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that is being edited.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterRowExpandedHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a row is expanded on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that was expanded.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterRowInsertHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a row is inserted on the client. Also fired during add new row procedure.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that was added.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The index of the position the row was inserted into. The parameter can be undefined if this is a new row that was added during the add new row procedure.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterRowSizeChangeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after the height of a row has changed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that was resized.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The new height of the row.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterSelectChangeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after selection has changed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the item that was selected.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterSortColumnHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a column has been sorted on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the column that was sorted.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeCellChangeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a row is activated on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell being activated.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeCellUpdateHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a cell is updated on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell being edited.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">String. The new value of the cell.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">The specified function can return True, to cancel the value change. At the same time a new value can be set using setValue off the cell CSOM object.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeColumnMoveHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a column is moved on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the column being moved.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeColumnSizeChangeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before the width of a column is changed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the column being resized.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The new width of the column.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">The specified function can return True to restore the old column width.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeEnterEditModeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a cell is edited on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell being edited.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">The specified function can return True to cancel the edit.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeExitEditModeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before the value of the cell being edited is accepted on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell being edited.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The value that will be applied to the cell when editing is complete.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">The specified function can return True to cancel the edit.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeRowActivateHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a row is activated on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row being activated.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeRowDeactivateHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a row is deactivated on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row being activated.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeRowCollapsedHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a row is collapsed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row being collapsed.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeRowDeletedHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a row is deleted on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row being deleted.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeRowTemplateCloseHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a row edit template is closed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that was edited.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Boolean. Indicates if the changes of the row are going to be saved from within the template.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeRowTemplateOpenHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a row edit template is opened on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row that is being edited.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">String. The HTML element ID of the row template on the page. Also can be obtained from the band object's RowTemplate property.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeRowExpandedHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a row is expanded on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row being expanded.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeRowInsertHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a row is inserted on the client. Also fired during add new row procedure.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the parent row into which child rows collection a new row is being inserted.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">String. The HTML element ID of the row being inserted. The parameter can be undefined if this is a new row that was added during the add new row procedure.</p></dd>
            <dt><i>parameter4</i></dt><dd><p class="body">Integer. The index of the position the row is being inserted into. The parameter can be undefined if this is a new row that was added during the add new row procedure.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeRowSizeChangeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before the height of a row is changed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row being resized.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The new height of the row.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">The specified function can return True to restore the old row height.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeSelectChangeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before selection has changed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the item being selected.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeSortColumnHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a column has been sorted on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the column that is being sorted.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.ClickCellButtonHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when a cell's button is clicked on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell whose button was clicked.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.CellChangeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the active cell is changed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the new active cell.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.CellClickHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the mouse's button is clicked over a cell of the grid on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell the cursor was over when the mouse was clicked.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The number that represents the pressed mouse button. 0 - left, 1 - middle, 2 - right.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.ColumnDragHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when a column is being dragged on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the dragging column.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">String. The HTML element ID of the column in front of which the dragging column is aiming to be placed, null for the very end.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.ColumnHeaderClickHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the mouse is clicked over a column header of the grid on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the column header the cursor was over when the mouse was clicked.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The number that represents the pressed mouse button. 0 - left, 1 - middle, 2 - right.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.DblClickHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when a cell is double-clicked on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell that was double-clicked.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.EditKeyDownHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when a key is pressed during edit mode on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell being edited.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The key code of the key that was pressed.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">The specified function can return True to cancel the letter.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.EditKeyUpHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when a key is released during edit mode on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell being edited.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The key code of the key that was released.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">The specified function can return True to cancel the letter.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.GridCornerImageClickHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the left mouse button is clicked on the GridCornerImage image of the grid on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            </dl>
            <p class="body">The parameter above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.InitializeLayoutHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the internal document object model is being initialized on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file, above where the UltraWebGrid control is defined on the page, and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.InitializeRowHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when a row is being initialized on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, 
            to specify that the native function alert should be called, this property could be set to 
            "alert('hello')." To specify that a user-defined function, myFunction, should be called, this 
            property would be set to "myFunction."</p>
            <p class="body">This event is fired after a new row is added to its collection. No event fired during 
            data binding as the binding process is carried out on the server side.</p>
            <p class="body">Unlike client side, the server side <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeRow"/> event is not 
            intended to be fired when a row is simply added into its collection or added through the 
            <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AddNew"/> method, but when the grid is being data bound. In the manual add cases the developer can
            initialize the row right after it is added.</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript 
            (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row being initialized.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, 
            please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.KeyDownHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when a key is pressed when the grid is active on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell currently active.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The key code of the key that was pressed.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.KeyUpHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when a key is released when the grid is active on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the cell currently active.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The key code of the key that was released.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.MouseDownHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the left mouse button is pressed over the grid on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the item the cursor was over when the mouse button was pressed.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The number that represents the pressed mouse button. 0 - left, 1 - middle, 2 - right.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.MouseOverHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the cursor enters an item of the grid on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the item the cursor entered.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The type of item the cursor entered. Values are: 0 - Cell; 1 - Column Header.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.MouseOutHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the cursor leaves an item of the grid on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the item the cursor left.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The type of item the cursor left. Values are: 0 - Cell; 1 - Column Header.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.MouseUpHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the left mouse button is released over the grid on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the item the cursor was over when the mouse button was released.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The number that represents the pressed mouse button. 0 - left, 1 - middle, 2 - right.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.RowSelectorClickHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the mouse is clicked over a row selector of the grid on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the row the cursor was over when the mouse was clicked.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Integer. The number that represents the pressed mouse button. 0 - left, 1 - middle, 2 - right.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.TemplateUpdateCellsHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the edit template is about to be closed on the client. The event is called for each control 
            in the template that has the columnKey attribute set. To update cells values properly a developer has 
            to handle the event.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the control.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">String. The HTML element ID of the cell which is being edited.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.TemplateUpdateControlsHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the edit template is shown on the client. The event is called for each control in the template 
            that has the columnKey attribute set. To initialize those controls values properly a developer has 
            to handle the event.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the control.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">String. The HTML element ID of the cell which is being edited.</p></dd>
            <dt><i>parameter4</i></dt><dd><p class="body">Depends on the cell type. The value of the cell which is being edited.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.ValueListSelChangeHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the value list selection is changed on the client.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">String. The HTML element ID of the SELECT object.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">String. The HTML element ID of the cell which is being edited.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.XmlVirtualScrollHandler">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when the grid is scrolled on the client and type of <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.XmlLoadOnDemandType"/> is set to <b>Virtual</b>.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">Number. Top row number that is about to be scrolled to.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.BeforeClipboardOperation">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            before a clipboard operation is performed - copy, cut, or paste.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">Number. The operation type: 0 - copy, 1 - cut, 2 - paste.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Object. Optional. Available options for the operation. More information about the options can be found in the CSOM documentation of the WebGrid.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.AfterClipboardOperation">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            after a clipboard operation is performed - copy, cut, or paste.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">Number. The operation type: 0 - copy, 1 - cut, 2 - paste.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">Object. Data assotiated with the operation. Usually and array of cell references that participated in the operation.</p></dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.ClipboardError">
            <summary>
            Returns or sets a string of text that specifies the name of the JavaScript function to be called
            when a clipboard operation is failed.
            </summary>
            <remarks>
            <p class="body">The name of the JavaScript function can be user defined or native. For example, to specify that the native function alert should be called, this property could be set to "alert('hello')." To specify that a user-defined function, myFunction, should be called, this property would be set to "myFunction."</p>
            <p class="body">A user-defined function must be defined either inline or in a linked JavaScript (.JS) file and can accept the following parameters:</p>
            <dl>
            <dt><i>parameter1</i></dt><dd><p class="body">String. The HTML element ID of the grid calling the function.</p></dd>
            <dt><i>parameter2</i></dt><dd><p class="body">Number. The error number. Complete list of possible failures can be found in the CSOM documentation of the WebGrid.</p></dd>
            <dt><i>parameter3</i></dt><dd><p class="body">String. Optional. Additional information about the error if available.</p></dd>
            <dt><i>parameter4</i></dt><dd><p class="body">Object. Optional. An error object that is used to pass extra information.</p>
            <list type="">
            <item>OperationType - Number.  Determines if the action was a cut, copy or paste operation</item>
            <item>Data - Object. </item>
            </list>
            </dd>
            </dl>
            <p class="body">The parameters above are optional and can be named as desired.</p>
            <p class="body">For more information about using the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class, please see the topic on the client side object model: ASP.NET &gt; Client-Side Object Model (CSOM) Reference Guide &gt; WebGrid CSOM.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn">
            <summary>
            The Column object contains the properties and methods that control the look and behavior of a vertical column of cells within UltraWebGrid.
            </summary>
            <remarks>
            <p class="body">A set of columns in combination with a set of rows comprises a table. When bound to a database, all cells of a column are populated with data from the same column of the database table.</p>
            <p class="body">All the cells of a particular column have certain characteristics in common: DataType, Editing format string, Column Selection type, and Column style.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.#ctor">
            <summary>
            Creates an object that represents a single column of data.
            </summary>
            <remarks>
            <p class="body">An UltraGridColumn object represents a single column in the grid. The UltraGridColumn object is closely linked with a single underlying data field that is used to supply the data for all the cells in the column (except in the case of unbound columns, which have no underlying data field). The UltraGridColumn object determines what type of interface (edit, checkbox, dropdown list, etc.) will be used for individual cells, as well as controlling certain formatting and behavior-related settings, such as data masking, for the cells that make up the column. UltraGridColumns are also used when sorting grid data or setting up GroupBy mode, as they are the basic unit that provides the criteria needed for those features.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.#ctor(System.Boolean)">
            <summary>
            Creates an object that represents a single column of data.
            </summary>
            <param name="bTrackViewState">
            boolean - Designates whether the column should be included in the viewstate of the WebGrid. Setting the value to <b>true</b> will allow
            the WebGrid to persist the column across postbacks automatically. 
            </param>
            <remarks>
            <p class="body">An UltraGridColumn object represents a single column in the grid. The UltraGridColumn object is closely linked with a single underlying data field that is used to supply the data for all the cells in the column (except in the case of unbound columns, which have no underlying data field). The UltraGridColumn object determines what type of interface (edit, checkbox, dropdown list, etc.) will be used for individual cells, as well as controlling certain formatting and behavior-related settings, such as data masking, for the cells that make up the column. UltraGridColumns are also used when sorting grid data or setting up GroupBy mode, as they are the basic unit that provides the criteria needed for those features.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.#ctor(System.String,System.String,Infragistics.WebUI.UltraWebGrid.ColumnType,System.Object)">
            <summary>
            Creates an object that represents a single column of data.  This constructor can be used to pass initial values for <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Key"/>, <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HeaderText"/>, <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Type"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.DefaultValue"/> properties.
            </summary>
            <param name="key">
            The key to assign to the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Key"/> property that will uniquely represent the column in its columns collection.
            </param>
            <param name="columnHeaderText">
            The text to assign to the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HeaderText"/> property. The text will appear on the rendered header.
            </param>
            <param name="colType">
            The type of the column to assign to the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Type"/> property.
            </param>
            <param name="defaultValue">
            The default value that any new row's cell will get riaght after it's added on the client. Assigned to the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.DefaultValue"/> property.
            </param>
            <remarks>
            <p class="body">An UltraGridColumn object represents a single column in the grid. The UltraGridColumn object is closely linked with a single underlying data field that is used to supply the data for all the cells in the column (except in the case of unbound columns, which have no underlying data field). The UltraGridColumn object determines what type of interface (edit, checkbox, dropdown list, etc.) will be used for individual cells, as well as controlling certain formatting and behavior-related settings, such as data masking, for the cells that make up the column. UltraGridColumns are also used when sorting grid data or setting up GroupBy mode, as they are the basic unit that provides the criteria needed for those features.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ShouldSerializeHeaderText">
            <summary>
            Method used by the designer to decide whether to serialize the HeaderText property.
            The HeaderText property should never be serialized. 
            </summary>
            <remarks>
            The HeaderText property is a legacy property that should never be serialized. The 
            Header.Caption property should always be used instead. 
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.setPrimaryCollection(Infragistics.WebUI.UltraWebGrid.ColumnsCollection)">
            <summary>
            Assign the passed-in columns to the PrimaryCollection
            </summary>
            <param name="cols"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
            <returns>The HeaderText of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the Column class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the Column will return False until set again.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.DataTypeInt">
            <summary>
            Transfers the type object into integer associated with the type
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.IsEditable">
            <summary>
            Shows whether cells of the column are editable or not.
            </summary>
            <returns>
            <b>true</b> if the column can be edited; <b>false</b> otherwise.
            </returns>
            <remarks>
            Resolves all properties up the chain - column itself-band-grid - and returns <b>true</b> if the column is editable.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.IsSortable">
            <summary>
            Shows whether the column can be sorted or not.
            </summary>
            <returns>
            <b>true</b> if the column cane be sorted on the client; <b>false</b> otherwise.
            </returns>
            <remarks>
            Resolves all properties up the chain - column itself-band-grid - and returns <b>true</b> if the column can be sorted on the client.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.IsSelectable">
            <summary>
            Shows whether the column can be selected or not
            </summary>
            <returns>
            <b>true</b> if the column cane be selected on the client; <b>false</b> otherwise.
            </returns>
            <remarks>
            Resolves all properties up the chain - column itself-band-grid - and returns <b>true</b> if the column can be selected on the client.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.CopyFrom(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Copy the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object
            </summary>
            <param name="source">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object to copy from.
            </param>
            <returns>
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object that was copied into. That is this current column object.
            </returns>
            <remarks>
            Use the method to copy from another column into this current column.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Move(System.Int32)">
            <summary>
            Moves the column object to the specified position inside the columns collection.
            </summary>
            <param name="position">
            New position to relocate the column to.
            </param>
            <remarks>
            The method relocates the column into new position in its columns collection. The column that used to be in the targeted position is being pushed to the right.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Find(System.String,System.Boolean,System.Boolean)">
            <summary>
            Searches for a cell in the column. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <param name="backward">
            Indicates whether the search should be backward.
            </param>
            <param name="findExact">
            Indicates whether the looking string should entirely match the looking 
            cell (<b>true</b>) value or the search condition should satisfy the starting 
            portion of the cell value that matches the looking string (<b>false</b>).
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            The method starts from the top cell.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Find(System.String,System.Boolean)">
            <summary>
            Searches for a cell in the column. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <param name="backward">
            Indicates whether the search should be backward.
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            The method starts from the top cell. It uses previously used whole word search flag or partial find by default.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Find(System.String)">
            <summary>
            Searches for a cell in the column. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            The method starts from the top cell. It uses previously 
            used direction or from top to bottomt cell by default; 
            uses previously used whole word search flag or partial find by default.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Find">
            <summary>
            Searches for a cell in the column. Case is ignored.
            </summary>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            The method starts from the top cell. It uses previously passed parameters.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FindNext">
            <summary>
            Searches for a cell in the column. Case is ignored.
            </summary>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            Continues search from previously found cell. It uses previously passed parameters.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FindNext(System.String)">
            <summary>
            Searches for a cell in the column. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            Continues search from previously found cell using new 
            string value. It uses previously used direction or from 
            top to bottom cell by default; uses previously used whole 
            word search flag or partial find by default.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FindNext(System.String,System.Boolean)">
            <summary>
            Searches for a cell in the column. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <param name="backward">
            Indicates whether the search should be backward.
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            Continues search from previously found cell using new string 
            value and direction. It uses previously used whole word search flag or partial find by default.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FindNext(System.String,System.Boolean,System.Boolean)">
            <summary>
            Searches for a cell in the column. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <param name="backward">
            Indicates whether the search should be backward.
            </param>
            <param name="findExact">
            Indicates whether the looking string should entirely match 
            the looking cell (<b>true</b>) value or the search condition 
            should satisfy the starting portion of the cell value 
            that matches the looking string (<b>false</b>).
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            Continues search from previously found cell using new string value, direction and exact search flag.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ConvertToType(System.String)">
            <summary>
            Convert a string into the column's data type object.
            </summary>
            <param name="v">Value to convert.</param>
            <returns>Object of the type DataType of the column.</returns>
            <remarks>Dates are accepted in the US culture only.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.propertyDescriptor">
            <summary>
            Keeps description of the column's property
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.CreateBackup">
            <summary>
            Design time support. Stores current property values into a back up.
            </summary>
            <remarks>
            Remembers current property values of the column to be able to restore 
            them in case a <b>Cancel</b> button is clicked on the <b>Quick Design</b> dialog. 
            The properties are restored by the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Rollback"/> method.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Commit">
            <summary>
            Design time support. Applies changes and stores properties into back up after that.
            </summary>
            <remarks>
            Applies changes made to the column. Once the changes 
            are commited they cannot be rolled back. New copy of the column's 
            properies back up is created at this point.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Rollback">
            <summary>
            Design time support. Restores previously saved properties from a back up.
            </summary>
            <remarks>
            Returns previously saved propperties from a back up. Used to restore 
            old values into the column's properties when a <b>Cancel</b> button is 
            clicked in the <b>Quick Design</b> dialog.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.LoadViewState(System.Object)">
            <summary>
            Loads saved view state into the column object.
            </summary>
            <param name="savedState">
            Previously saved view state object.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SaveViewState">
            <summary>
            Saves the column's view state.
            </summary>
            <returns>
            Saved views state object of the column.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.TrackViewState">
            <summary>
            Enables tracking any changes in the column in order to put them into the view state.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.OnAddedToCollection(Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase)">
            <summary>
            Called when this object is being added to the passed
            in collection. The default implementation sets the internal
            primaryCollection reference if it hasn't already been set
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ShouldSerializeFormula">
            <summary>
            Indicates whether the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Formula"/> has changed from it's default value.
            </summary>
            <returns>Returns true if this property is set to a non-default value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ResetFormula">
            <summary>
            Resets the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Formula"/> to its default value.
            </summary>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ShouldSerializeFormulaErrorValue">
            <summary>
            Indicates whether the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FormulaErrorValue"/> has changed from it's default value.
            </summary>
            <returns>Returns true if the property is set to a non-default value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ResetFormulaErrorValue">
            <summary>
            Resets the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FormulaErrorValue"/> property to its default value of null (Nothing in Visual Basic .NET).
            </summary>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the column.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the column. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the column.
            </summary>
            <returns>
            Self if the column is the first column in the columns collection. 
            The first column in the columns collection otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Null if the column has no next siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Returns previous sibling.
            </summary>
            <returns>
            Null if the column has no previous siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the parent - columns collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the column.
            </summary>
            <returns>
            The method returns Null if neither of its header or footer exist. Otherwise the header or the footer object of the column is returned in the order of existence.
            </returns>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.preregStyles">
            <summary>
            Keeps styles to register if a style is being register before style repository is created
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#InitializeStyles">
            <summary>
            Registers all styles with the style repository.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance
            </summary>
            <remarks>The method works closely with the style repository.</remarks>
            <param name="role">Defines the role of the style to return.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole,System.Boolean)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance. The boolean parameter will determine if the
            parents' class names need to be inserted.
            </summary>
            <param name="role">Defines the role of the style to return.</param>
            <param name="withParents">Determines if the parents' class names need to be inserted.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Key">
            <summary>
            Unique string identifier for this column within the <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnsCollection"/>.
            </summary>
            <remarks>
            <p class="body">
            The property is used to uniquely identify the column. The identifier can be used 
            to get a reference to the column using the
            <see cref="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.FromKey(System.String)"/> method.
            </p>
            
            <p class="note"><b>Note:</b> There is currently a limitation in the grid that requires the Key and the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.BaseColumnName"/> property to have the same value when using ajax based sorting.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.IsBound">
            <summary>
            Indicates whether this is a bound or an unbound column. 
            </summary>
            <remarks>
            The property can be used to set up custom columns that are not removed during the <b>DataBind</b> 
            processs if the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AutoGenerateColumns"/>
            property set to <b>true</b>.<br/>
            The column will get its data accordingly to the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.BaseColumnName"/> property from the 
            database regardless of the current setting of the property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.DataType">
            <summary>
            The Type of the column.
            </summary>
            <value>A string representation of the fully-qualified Type.</value>
            <remarks>
            <p class="body">This is a fully-qualified <a href="ms-help://MS.NETFrameworkSDK/cpref/html/frlrfSystemTypeClassTopic.htm">Type</a> name that includes the Common Language namespace. It is similar to what would be returned by the <a href="ms-help://MS.NETFrameworkSDK/cpref/html/frlrfsystemtypeclassfullnametopic.htm">FullName</a> property within the .NET Framework.  This property does <i>not</i> contain assembly reference information.  It therefore cannot disambiguate between versions of the same Type, or Types with identical full names.</p>
            <p class="body">All UltraGridColumns default to the type System.String, if no other <b>DataType</b> is specified or inferred.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Tag">
            <summary>
            A field for storing user-defined, object-related information.
            </summary>
            <remarks>
            Objects assigned to this property must be serializable if ViewState is in effect.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Band">
            <summary>
            Returns the UltraGridBand object of the band that contains the column.
            </summary>
            <remarks>
            <p class="body">The <b>Band</b> property of an object refers to a specific band in the grid as defined by an UltraGridBand object. You use the <b>Band</b> property to access the properties of a specified UltraGridBand object, or to return a reference to the UltraGridBand object that is associated with the current object.</p>
            <p class="body">UltraGridBand objects are the foundation of the hierarchical data structure used by UltraWebGrid. An UltraGridBand object is used to display all the data rows from a single level of a data hierarchy.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.CellMultiline">
            <summary>
            Determines if the cells of the column will edit text as a multiline textarea.
            </summary>
            <remarks>
            <p class="body">When set to Yes, editing for the cell will take place within a textarea control that allows the Enter key to insert newline characters.  When edit mode is terminated, the cells are formatted with &lt;BR/> tags to indicate the newline placement.</p>
            </remarks>  
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowGroupBy">
            <summary>
            Determines whether the column can be dragged into the GroupByBox and used to group rows.
            </summary>
            <remarks>
            <p class="body">If this property is set to True, the column can be used to organize the rows of the band in GroupBy mode. If False, this column cannot be used to group the rows of the band, and the column header cannot be dragged into the GroupBy box.</p>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.DefaultValue" -->
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowResize">
            <summary>
            Determines whether a column can be resized and the type of resizing that is permitted.
            </summary>
            <remarks>
            <p class="body">
            You can use this property to specify how the column should be resized. The column can either be 
            fixed (no resizing), free (resizing allowed) or not set, in which case the value that determines 
            whether resizing is possible will be inherited. The default value is <b>NotSet</b>.
            </p>
            <p class="body">
            If this propert is set to <b>NotSet</b> you can use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowResizeResolved"/> 
            property to determin the value that is being used to control the resizing of the column.
            </p>
            <p class="body">
            Column sizing is not supported for grids with <a href="WebGrid_Using_a_Multi_Column_Header.html">
            header layouts</a>. It is recommended that you set this property to
            <see cref="T:Infragistics.WebUI.UltraWebGrid.AllowSizing">AllowSizing.Fixed</see> for the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowColSizing">entire 
            band</see> if you are using header layouts. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowResizeResolved">
            <summary>
            Determines whether a column can be resized and the type of resizing 
            that is permitted. This property will always return the setting that 
            is in control of the column.
            </summary>
            <remarks>
            <p class="body">
            The resizing of columns is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowResize"/> 
            property. However, <b>AllowResize</b> may be set to a "use default" 
            value, meaning the setting of the property is inherited from the band 
            containing the column, the parent band of the band containng the column, 
            or from the preset value built into the UltraWebGrid.
            </p>
            <p class="body">
            To simply find out whether column resizing is allowed for the current 
            column, use the <b>AllowResizeResolved</b> property. This property 
            resolves any inheritance issues and returns a value that tells you 
            if column resizing is premitted.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HeaderClickAction">
            <summary>
            Specifies what will occur when the user clicks on a column header.
            </summary>
            <remarks>
            <p class="body">The default action for a column header is to select the column when clicked. You can also choose to make clicking a column header sort the band based on the contents of the one column, or add the column to the ones being used to sort the band data.</p>
            <p class="body">When this property is set to HeaderClickAction.SortMultiple, the user can use the CTRL key in combination with the mouse to select multiple columns for sorting. The order in which columns are selected is significant, determining the order in which the data will be sorted.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HeaderClickActionResolved">
            <summary>
            Specifies how a column header should react to being clicked. This property will always return the setting that is in control of the column.
            </summary>
            <remarks>
            <p class="body">The action that occurs when a column header is clicked is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HeaderClickAction"/> property. However, <b>HeaderClickAction</b> may be set to a "use default" value, meaning the setting of the property is inherited from the band containing the column, the parent band of the band containng the column, or from the preset value built into the UltraWebGrid.</p>
            <p class="body">To simply find out what action will occur when the header of the current column is clicked, use the <b>HeaderClickActionResolved</b> property. This property resolves any inheritance issues and returns a value that tells you what action will be triggered by clicking the column header.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Case">
            <summary>
            Returns or sets the case to use when editing or displaying column text.
            </summary>
            <remarks>
            <p class="body">This property specifies whether the column should display text in a specific case and change the case of the text being edited. This property actually changes the case of edited text; if you set <b>Case</b> to a non-zero value, any text you edit or enter will be stored in the database as either all uppercase or all lowercase. Note that while the text is displayed using the specified case, the changed case text is not committed back into the database unless a change is made to the value of the cell. Simply placing the cell into edit mode will not change the data to the displayed case.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Type">
            <summary>
            The type of column that will be rendered.
            </summary>
            <remarks>
            <p class="body">This property specifies what type of cell will be used to display and input data for the column.  Available types include button, checkbox, and hyperlink.</p>
            <p class="body">The setting of this property for a column may affect other aspects of the control's operation.  For example, using one of the dropdown styles requires the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ValueList"/> property of the column to be set in order to fill the dropdown list with text. Setting this property to one of the button styles will cause the control to fire the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ClickCellButton"/> event.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.BaseColumnName">
            <summary>
            Gets or sets the name of the field in the data store on which the column is based.
            </summary>
            <remarks>
            <p class="body">If the column is bound to a data source, this property returns the name of the underlying data field that is supplying data for the column. If the column is unbound, this property returns Null.</p>
            <p class="body">Setting this property on an unbound column to a valid field name in the data store binds the column to the corresponding field.</p>
            <p class="note"><b>Note:</b> There is currently a limitation in the grid that requires the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Key"/> and the BaseColumnName property to have the same value when using ajax based sorting.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FieldLen">
            <summary>
            Maximum field length permitted when editing cells within this column.
            </summary>
            <remarks>
            <p class="body">In addition to acting as a constraint during editing, when cells are rendered back to the user after a postback, content placed into the cells may be truncated to the specified <b>FieldLen</b> if it exceeds this limit.</p>
            <p class="body">By default, this constraint is turned off (with the value <i>0</i>), and cells may have any field length.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterStyle">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the footer section of the column.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the footer section fo the column. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasFooterStyle">
            <summary>
            Determines if a style has been applied to the column footers.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for the column footers has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterStyle"/> property.) If False, the column footer style will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterStyleResolved">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the column footer. This object represents the actual visible state of the column footer.
            </summary>
            <remarks>
            <p class="body">The appearance of the column footer is controlled by the GridItemStyle object specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterStyle"/> property. However, only some appearance-related properties may be controlled by that object, while others are intherited from other areas of the grid. For example, rows inherit their appearance from the band. If you use the UltraGridStyle object for rows just to change their text alignment, the foreground and background color will still be intherited from the band. The values for foreground and background color will not be set in the UltraGridStyle object for the rows.</p>
            <p class="body">You can use the <b>FooterStyleResolved</b> property to determine all the formatting attributes that are being applied to an object, regardless of inheritance issues. This property returns an GridItemStyle object with all of its attributes set to the values that are being used to control the formatting of the object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterText">
            <summary>
            The text displayed in the footer section of the column.
            </summary>
            <remarks>
            Use the <b>FooterText</b> property to specify or determine the text displayed in the footer section of the column.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterTotal">
            <summary>
            Specifies the type of summary information to display in the column footer.
            <b>Text</b>, <b>Sum</b>, <b>Average</b>, <b>Minimum</b>, <b>Maximum</b>, <b>Count</b> and <b>Formula</b> are available.
            </summary>
            <remarks>
            The property allows to display summary in the column's footer. It can be set to either one of the internal summaries as well as the <b>Formula</b> which is calculated by the <b>UltraCalcManager</b>.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.CellButtonDisplay">
            <summary>
            Determines how cell buttons will be displayed in the column.
            </summary>
            <remarks>
            <p class="body">If the column is set to display cell buttons, the <b>CellButtonDisplay</b> property determines how the visibility of the buttons will be handled. Cell buttons can be displayed at all times, or only in response to the mouse pointer entering the cell.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.CellButtonStyle">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the cell buttons of the column.
            </summary>
            <remarks>
            Use this property to provide a custom style for the column's cell buttons. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use differnt styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.
            <strong>Note:</strong>
            This style controls the style applied to the Button itself, to control the position of the button object inside of the UltraGridCell you would need to change the Style on the Column object.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HeaderStyle">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the header section of the column.
            </summary>
            <remarks>
            Use this property to provide a custom style for the header section of the column. Common style attributes that can be adjusted, include forecolor, backcolor, font, and content alignment within the cell. Providing a different style enhances the appearance of the column.
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SelectedHeaderStyle">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the selected column header.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the column header when the column has been selected. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HeaderText">
            <summary>
            The text that appears in the header of the column. 
            </summary>
            <remarks>
            <p class="body">This property specifies the text of the column's header. By default, the column's header displays the name of the field from the data source to which the column is bound.</p>
            <p class="body">This property has been deprecated. Use the column's Header.Caption property to set the text instead. </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Hidden">
            <summary>
            Determines whether a column is hidden from view
            </summary>
            <remarks>
            Using the property it is possible to hide the column from view and 
            yet have its data brought down to the client. The column's data 
            can be access on the client in a regular manner.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ServerOnly">
            <summary>
            Determines whether a column will be rendered down to the client
            </summary>
            <remarks>
            Setting the property to <b>true</b> allows having the column's 
            data on the server but not rendering it down to the client. Yet the 
            column object is created for the column on the client anyway but no 
            data is accessible.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Index">
            <summary>
            Index in the Columns collection.
            </summary>
            <remarks>
            <b>-1</b> if the column does not belong to any collection.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowRowFiltering">
            <summary>
            Gets or sets whether the Column object will allow RowFiltering
            </summary>
            <remarks>Setting this value will enable or disable row filtering based on values of the cells in the column.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowRowFilteringResolved">
            <summary>
            Returns whether or not the Column object will allow for RowFiltering based on the parent object's settings	
            </summary>
            <remarks>Not for public use.</remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FilterCollectionValues">
            <summary>
            The FilterCollectionValues collection are values which will be placed into the DropDown when the filter drop down
            is opened.
            </summary>
            <remarks>The purpose of this collection is to allow developers the chance to create their RowFilter drop downs
            on the server for performance purposes.  The list will be prepended with the default options from the FilterOptions collecton
            so that these values will appear before the collection.  This list will then be passed down to the client.  
            
            This list should not contain any blank entries.  To support blanks in your data please use the ShowEmpty and EmptyString properties.
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasFilterCollectionValues">
            <summary>
            Gets whether or not this Column has user defined Filter members using the ValueList implementation
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.GatherFilterData">
            <summary>
            Gets or sets whether the Column should programmatically gather data 
            when filter is dropped
            </summary>
            <remarks>This property is to be used in conjuction with the FilterCollection property.  If the FitlerCollection is
            populated on the server, and the list is complete, then setting this to False will prevent the control from gathering data
            for the filter.  This can be used rather then canceling the BeforeFilterPopulated event on the client.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FilterIcon">
            <summary>
            Whether the column header will display a filter icon or not for grids that use the HeaderIcons FilterUIType.
            </summary>
            <remarks>
            <p class="body">
            If you set the FilterIcon to false, you can programmatically set filters on the column that the user will not be 
            able to change using the filter dropdown in the column header.
            </p>
            <p class="body">
            This property will only affect columns that would normally display a FilterIcon. The FilterIcon property will 
            be ignored if filtering is not enabled or if the <see cref="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterUIType">FilterUIType</see> is not
            set to <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterUIType">HeaderIcons</see>.
            </p>
            <p class="body">
            Setting this property will affect a single column. You can also set this property at the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.FilterOptions">band</see> or <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FilterOptionsDefault">grid</see> level. 
            </p>
            <p class="body">
            The clientside <a href="WebGrid_Column_Object_CSOM.html">Column</a> object has a method called setFilterIcon() 
            that will change the visibility of the filter icon on the client. Any changes that you make to the filter icon's 
            visibility on the client will automatically be persisted to the server.
            </p>
            <p class="body">
            For more information about using this property, see the <a href="WebGrid_Hide_the_Filter_Icon_for_a_Column.html">
            Hide the Filter Icon for a Column</a> help topic.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FilterIconResolved">
            <summary>
            Returns whether or not the Column object will allow for RowFiltering based on the parent object's settings	
            </summary>
            <remarks>Not for public use.</remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.IsGroupByColumn">
            <summary>
            Indicates and allows to manipulate the group by state of the column.
            </summary>
            <remarks>
            Setting the property to <b>true</b> will insert this column into the 
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand">Band</see>'s 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortedColumns"/> collection
            after all existing groupby columns and before any sorted columns 
            that are not Groupbys.  The rows that have common values for this column 
            will then be grouped together under a single GroupBy row along with an expansion indicator.<br/>
            Setting the property to <b>false</b> will remove the columns from the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortedColumns"/> collection.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Format">
            <summary>
            A string used to control the formatting of displayed text. 
            </summary>
            <remarks>
            <p class="body">The <b>Format</b> property is similar to the <b>Format</b> function, and supports all of the named arguments and literal strings supported by that function.</p>
            <p class="body">The <b>Format</b> property applies only to cells that are not in edit mode.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Selected">
            <summary>
            Determines whether the column is selected.
            </summary>
            <remarks>
            Setting the property to <b>true</b> will select the column and put it 
            into the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedColumns"/> collection.
            Setting the property to <b>false</b> will revert the selection steps.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortIndicator">
            <summary>
            The convenience variable stored for the sorted order of the column.
            </summary>
            <remarks>
            Setting this property will <b>NOT</b> sort the column. To sort the 
            column it has to be added into the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortedColumns"/> collection.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ValueList">
            <summary>
            A list of values that are to be contained in a combo box
            portion of a column with a combo box style
            </summary>
            <remarks>
            The object is created automatically once the property is accessed. See the 
            <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> object on how to 
            create the value list and/or bind it to a data source.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasValueList">
            <summary>
            Determines if the column has a value list attached.
            </summary>
            <remarks>
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ValueList"/> object is created when it is first time accessed. 
            The property shows if the object exists and used to detirmine whether it 
            should be persisted into the view state bag.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.NullText">
            <summary>
            The string displayed in cells with null values.
            </summary>
            <remarks>
            <p class="body">You can use this property to customize the text displayed to the user when a null value is present in a cell. For example, you may want the cell to display "(empty)" or "no value". The default setting for this property is "null".</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.NullTextResolved">
            <summary>
            The string displayed in cells with null values. This property will always return the setting that is in control of the column.
            </summary>
            <remarks>
            <p class="body">The text displayed for null value cells is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.NullText"/> property. However, <b>NullText</b> may be set to inherit its value from the band containing the column, the parent band of the band containng the column, or from the preset value built into the UltraWebGrid.</p>
            <p class="body">To simply find out what string is being displayed when the current column contains a null value, use the <b>NullTextResolved</b> property. This property resolves any inheritance issues and returns the text string that will be used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Width">
            <summary>
            The width of the column, in pixels.
            </summary>
            <remarks>
            <p class="body">
            The browser will actually treat this setting as a recommendation unless the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.TableLayout"/> property off 
            the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DisplayLayout"/> object is set to <b>Fixed</b>.
            </p>
            </remarks>remarks&gt;
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.WidthResolved">
            <summary>
            The width of the column, in pixels. This property will always return the setting that is in control of the column.
            </summary>
            <remarks>
            <p class="body">
            The width of columns is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Width"/> property. 
            However, <b>Width</b> may be inherited from the band containing the column, 
            or from the ColWidthDefault value of the DisplayLayout.
            </p>
            <p class="body">
            To simply find out the width of the current column, use the <b>WidthResolved</b> 
            property. This property resolves any inheritance issues and returns the column's width.
            </p>
            <p class="body">
            The browser will actually treat this setting as a recommendation unless the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.TableLayout"/> property off 
            the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DisplayLayout"/> object is set to <b>Fixed</b>.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.CellStyle">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the cells of the column.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the column's cells. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use differnt styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            <p class="body">This setting wil override any style applied at the band level. This setting may be overidden by any style applied at the cell level.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SelectedCellStyle">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the selected cell.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the selected cell in the column. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowUpdate">
            <summary>
            Determines whether the values of the column may be updated.
            </summary>
            <remarks>
            <p class="body">This property controls the updating for individaul columns. There is also a band-level setting for <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowUpdate"/> which determines whether any of the columns in the band may be updated. The setting of the band-level property will override the setting of the column-level property for any columns in the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowUpdateResolved">
            <summary>
            Determines whether the values of the column may be updated. 
            This property will always return the setting that is in control of the column.
            </summary>
            <remarks>
            <p class="body">
            The updating of columns is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowUpdate"/> 
            property. However, <b>AllowUpdate</b> may be set to a "use default" value, 
            meaning the setting of the property is inherited from the band containing 
            the column, the parent band of the band containng the column, or from the 
            preset value built into the UltraWebGrid.
            </p>
            <p class="body">
            To simply find out whether column updating is allowed for the current column, 
            use the <b>AllowUpdateResolved</b> property. This property resolves any 
            inheritance issues and returns a value that tells you if column updating is premitted.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasCellStyle">
            <summary>
            Determines if a style has been applied to the cells of the column.
            </summary>
            <remarks>
            <p class="body">Returns True if a style has been specifically set for the cells of the column (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.CellStyle"/> property.) If False, the cells of the column have no style of their own and their appearance will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasSelectedCellStyle">
            <summary>
            Determines if a style has been applied to the selected cell.
            </summary>
            <remarks>
            <p class="body">Returns True if the selected cell style has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SelectedCellStyle"/> property.) If False, the selected cell has no style of its own and its appearance will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasHeaderStyle">
            <summary>
            Determines if a style has been applied to the column header.
            </summary>
            <remarks>
            <p class="body">Returns True if the column header's style has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HeaderStyle"/> property. If False, the column header has no style of its own and its appearance will be inherited.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FilterOperatorDefaultValue">
            <summary>
            Determines what type of filtering will be executed on a column by default.
            </summary>
            <remarks>This setting is used by the FilterRow feature.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FilterComparisonType">
            <summary>
            Specifies whether the filtering is performed case-sensitive. Default is to perform filtering case-insensitive.  
            </summary>
            <remarks>
            By default the UltraWebGrid performs filtering using case-insensitive string comparison. You can set the FilterComparisonType property to CaseSensitive to perform filtering using case sensitve string comparisons.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FilterComparisonTypeResolved">
            <summary>
            Determines what the FilterComparisonType should be based on current settings and any parent settings which may alter it.
            </summary>
            <remarks>
            Not for public use
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasSelectedHeaderStyle">
            <summary>
            Determines if a style has been applied to the selected header.
            </summary>
            <remarks>
            <p class="body">Returns True if the selected header style has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SelectedHeaderStyle"/> property.) If False, the edit cell has no style of its own and its appearance will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasCellButtonStyle">
            <summary>
            Determines if a style has been applied to the cell button.
            </summary>
            <remarks>
            <p class="body">Returns True if the cell button style has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.CellButtonStyle"/> property.) If False, the cell button has no style of its own and its appearance will be inherited.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.MergeCells">
            <summary>
            Allows merging cells of equal value in the column.
            </summary>
            <remarks>
            <p class="body">This property allows merging of cells that have the same value into one extended cell in the column.</p>
            <p class="body">If using MergeCells with Column Filtering the the RowFiltering property needs to be set to OnServer for correct operation.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Validators">
            <summary>
            Returns a collection of the validators that are applied to the column.
            </summary>
            <remarks>
            Use this property to obtain a collection of strings that represent all the validator controls ids that are applied to the column in edit mode.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasValidators">
            <summary>
            Determines if the column has the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Validators"/> collection created.
            </summary>
            <remarks>
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Validators"/> collection is created when it is first time accessed. 
            The property shows if the collection exists and used to detirmine whether it 
            should be persisted into the view state bag.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.AllowNull">
            <summary>
            Allows having null values in the column.
            </summary>
            <remarks>
            <p class="body">This property permits to have null values in the column. The null value is assigned when user clears the cell. Visible value is taken from the NullText property.</p>
            <p class="body">This property influence the client side behavior only. If a cell had a null value initially it is kept as is regardless of the property value.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HTMLEncodeContent">
            <summary>
            Allows to have html sensitive characters in the column's cells.
            </summary>
            <remarks>
            <p class="body">This property permits to have html sensitive characters in the column's cells. The characters like &lt; &gt; &quot; etc. will be converted to &amp;lt; &amp;gt; and &amp;quot; accordingly.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.EditorControlID">
            <summary>
            A control's ID that is used to edit the cells in the column. 
            </summary>
            <remarks>
            Holds the ID of the control that will be used to edit the column's cells on the client. Also the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Type"/> property has to be set to <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnType"/>.Custom to activate the custom editor for the column.
            <seealso cref="T:Infragistics.WebUI.UltraWebGrid.ColumnType"/>
            
            <p>The editor control must be in the same containing object as the WebGrid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ChangeLinksColor">
            <summary>
            Allows to apply the cells fore color to the links in the column.
            </summary>
            <remarks>
            <p class="body">If set to true the fore color of the cells text is applied to the links in the column. By default the links color 
            is taken from the body settings.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Header">
            <summary>
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnHeader">ColumnHeader</see> object describing the header properties of this column.
            </summary>
            <remarks>
            <p class="body">Developers use this property to alter the appearance and/or behavior of the column's header.</p>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasHeader"/>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasHeader">
            <summary>
            Determines if a header has been created on the column.
            </summary>
            <remarks>
            <p class="body">Returns True if the column's header has been explicitly set through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Header"/> property. If False, the column's header has default settings.</p>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Header"/>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Footer">
            <summary>
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnFooter">ColumnFooter</see> object that describes the footer properties of this column.
            </summary>
            <remarks>
            <p class="body">Developers use this property to alter the appearance and/or behavior of the column's footer after they have
            enabled footers by setting the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ColFootersVisible">ColFootersVisible</see>
            on this column's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Band"/> (or the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ColFootersVisibleDefault">ColFootersVisibleDefault</see>
            on the grid's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DisplayLayout">DisplayLayout</see>) to <b>ShowMarginInfo.Yes</b>.</p>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasFooter"/>
            <seealso cref="T:Infragistics.WebUI.UltraWebGrid.ShowMarginInfo">ShowMarginInfo</seealso>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasFooter">
            <summary>
            Determines if a footer has been created on the column.
            </summary>
            <remarks>
            <p class="body">Returns True if the column's footer has been explicitly set through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Footer"/> property. If False, the column's footer has default settings.</p>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Footer"/>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasChanges">
            <summary>
            Shows if the column has any changes made to it at design tiem.
            </summary>
            <remarks>
            Design time support for the <b>Quick Design</b> dialog. The property is used to indicate if the column was modified.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.IsTrackingViewState">
            <summary>
            Indicates if the column is tracking its changes at the moment and putting them into the view state.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Formula">
            <summary>
            Specifies the UltraCalc formula.
            </summary>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CalcManager"/> property must be set to
            a valid implementation of <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcManager"/> for the calculation engine
            to initialize itself, create a calculation network, and evaluate the contents of
            this property.  When a <b>CalcManager</b> is not in place, settings to this property
            shall have no effect.
            </p>
            <p class="body">When a syntactically-correct formula has been assigned, the values
            stored in cells for this column reflect computed results instead of direct databound
            values.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FormulaErrorStyle">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle">GridItemStyle</see> object that contains the style properties applied to cells within the column containing UltraCalc formula errors.
            </summary>
            <remarks>
            <p class="body">The <b>FormulaErrorStyle</b> property is used to specify the visual formatting of the cells in a calculated formula (one in which <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Formula"/> is non-null and non-empty) having resulted in a formula error.</p> 
            <p class="body">This property has no effect on the grid if this column is not an UltraCalc-calculated column (<i>i.e.</i>, it has no formula defined).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HasFormulaErrorStyle">
            <summary>
            Determines if a style has been applied to the column's cells for use when their UltraCalc formula results in an error.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for the column's cells has been specified (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FormulaErrorStyle"/> property) for when their UltraCalc formula calculation results in an error. If False, the cells' formula error style will be inherited from their <b>Band</b> or (if not specified at the band-level) <b>DisplayLayout</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FormulaErrorStyleResolved">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle">GridItemStyle</see> object that
            contains the style properties for the column when it's cells result in an UltraCalc formula
            error. This object represents the actual visible state of those cells in error.
            </summary>
            <remarks>
            <p class="body">The appearance of the column cells evaluating to an error when their values are calculated
            by UltraCalc is controlled by the <b>GridItemStyle</b> object specified in the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FormulaErrorStyle"/>
            property.  However, only some appearance-related properties may be controlled by this object, while others
            are intherited from other styles defined on the grid.  For example, rows always inherit their appearance
            from the band.  If you use the <b>GridItemStyle</b> object for rows just to change their text alignment,
            the foreground and background color will still be intherited from the band. The values for foreground and
            background color will not be explicitly set in the <b>GridItemStyle</b> for the rows.</p>
            <p class="body">You can use the <b>FormulaErrorStyleResolved</b> property to determine every formatting
            attribute that is going to be rendered for an object, regardless of inheritance issues. This property
            returns a <b>GridItemStyle</b> object with all of its attributes set to the inherited values that are
            being used to control the rendering of the object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FormulaErrorValue">
            <summary>
            Specifies the value to assign to the data source if the column's formula evaluates to an error.
            </summary>
            <remarks>
            <p class="body">If this column doesn't have <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Formula"/> set, this property is ignored.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#CalcEngine#IFormulaProvider#Participant">
            <summary>
            Gets the participating formula provider for this column footer.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#CalcEngine#IFormulaProvider#Reference">
            <summary>
            Gets the <b>IUltraCalcReference</b> implementation for this participant.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.RenderGroupID">
            <summary>
            Provides group id for rendering purposes
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the column has attributes.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the column node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the column.
            </summary>
            <remarks>
            Always returns Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the column's node has children.
            </summary>
            <remarks>
            Returns true if either of the column header or the column footer exist.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#WebAgent">
            <summary>
            Reference to the web agent
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortingAlgorithm">
            <summary>
            Defines a sorting algorithm that should be used when a column in the band is sorted on.
            The property can be overriden by the delegate method of a custom sorting algorithm: <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortImplementation"/>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortImplementation">
            <summary>
            A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.SortRowsCollection"/> delegate 
            method that performs custom sorting algorithm. 
            If set the method takes precedence over the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortingAlgorithm"/> property setting 
            and is called to perform the actual sorting for the rows collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortCaseSensitive">
            <summary>
            Specifies whether to respect or ignore the capitalisation of the values in the cells when sorting.
            </summary>
            <remarks>
            <p class="body">
            Set the property to True to sort in a case sensitive way. Set it to False to ignore case 
            when doing a sort. The default value is True.  This can be useful when doing a 
            <a href="WebGrid_Multiple_Column_Sorting.html"> multiple column sort</a>. 
            </p>
            <p class="body">
            This property also affects grouping. When the property is set to False, cell values
            which are the same except for letter case will be added to the same group. When this happens
            the GroupByRow text will be the text of the first item that is matched.
            </p>
            <p class="body">
            The property will only be applied for columns that have a string <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.DataType">
            DataType</see>. Other column data types like numeric or boolean will always be sorted by value.
            </p>
            <p class="body">
            The SortCaseSensitive property will be applied to sorting on the server as well as sorting on 
            the client. Setting this property will automatically make either type of sorting case sensitive 
            or case insensitive.
            </p>
            <p class="body">
            You can find out the value of the property in javascript by looking at the SortCaseSensitive 
            property of the clientside <a href="WebGrid_Column_Object_CSOM.html">Column</a> object.
            </p>
            <p class="body">
            For columns with a <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ValueList"/> or WebCombo editor, case insensitive sorting 
            and grouping will be applied to the text of the column rather than the value when this 
            property is set to False.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortCaseSensitiveResolved">
            <summary>
            Returns whether or not the Band should be sorted case sensitively or not. 
            Uses parent's settings if band property hasn't been set.
            </summary>
            <remarks>Not for public use.</remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Visible">
            <summary>
            Returns whether the column will be visible in the grid on the client or not.
            </summary>
            <remarks>
            <p class="body">
            Checks whether the column is hidden, server only or a group by column.
            </p>
            <p class="body">
            This property is read only because it's for informational reasons only. To 
            hide the column on the client, set either the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Hidden"/> or 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.ServerOnly"/> properties to true.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnDataType">
            <summary>
            Type converter for column's DataType
            </summary>
            <remarks>Used to translate objects of varying data types into useable forms.</remarks>	
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnDataType.#ctor(System.String)">
            <summary>
            Constructor for the object.
            </summary>
            <param name="dataTypeName">The string name of the DataType.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnDataType.op_Implicit(System.Type)~Infragistics.WebUI.UltraWebGrid.ColumnDataType">
            <summary>
            Converts the Type of the column to the input type.
            </summary>
            <param name="type">The type that the column should be.</param>
            <remarks>Primarily used intenally by the control.</remarks>
            <returns>A ColumnDataType object from the input type.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnDataType.op_Implicit(Infragistics.WebUI.UltraWebGrid.ColumnDataType)~System.Type">
            <summary>
            Converts the ColumnDataType to the underlying Type
            </summary>
            <param name="columnDataType">The ColumnDataType being converted</param>
            <remarks>Primarily used intenally by the control.</remarks>
            <returns>The Type object that is being converted to.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnDataType.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnDataType"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
            <returns>The type name.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnDataType.FromString(System.String)">
            <summary>
            Returns a type based on the input string
            </summary>
            <remarks>This method converts a string type name into a type.  Restricted to types necessary for the WebGrid.</remarks>
            <param name="stringType">DataType string that the type should be instatiated from.</param>
            <returns>The Type from the input string</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnDataType.DataType">
            <summary>
            Converted DataType
            </summary>
            <remarks>The Type of the ColumnDataType.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnFooter">
            <summary>
            Encapsulates properties pertaining to the column's footer, extending those
            furnished by the <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> class.
            </summary>
            <remarks>The <b>ColumnFooter</b> object allows for entering of data that could be used to simulate summary data on the WebGrid.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.HeaderBase">
            <summary>
            Base class for the Column's header object.  The HeaderBase class is used to render the header and footer of the WebGrid.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.#ctor(System.Boolean)">
            <summary>
            Overloaded constructor for the HeaderBase object
            </summary>
            <remarks>This overloaded constructor allows for greater control on whether or not the HeaderBase object should track viewstate.</remarks>
            <param name="bTrack">True if the HeaderBase object should track viewstate</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.SetColumn(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Sets the UltraGridColumn object that will be associated with this object.
            </summary>
            <remarks>Not for public use</remarks>
            <param name="column">The UltraGridColumn object to be associated with this object.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.ShouldSerializeKey">
            <summary>
            Indicates whether the <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Key"/> has changed from it's default value.
            </summary>
            <returns>Returns true if this property is set to a non-default value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the HeaderBase class to their default values.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.CopyFrom(Infragistics.WebUI.UltraWebGrid.HeaderBase)">
            <summary>
            Copies the HeaderBase object
            </summary>
            <remarks>Perfroms a deep object copy of the source element.</remarks>
            <param name="source">The HeaderBase object which is to be copied.</param>
            <returns>A reference to the current object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Render(Infragistics.WebUI.UltraWebGrid.GridRendererBase)">
            <summary>
            Renders the header base. Can be overriden for a proper header rendering.
            </summary>
            <param name="renderer">
            The renderer to render the header onto.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.LoadViewState(System.Object)">
            <summary>
            Loads ViewState of the control.
            </summary>
            <remarks>
            <p class="body">Called automatically by the control to rehydrate the server side object based on it's persisted viewstate.</p>
            </remarks>
            <param name="savedState">The viewstate of the grid that was returned by the page.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.SaveViewState">
            <summary>
            Persists the object along with it's child elements into the Page's ViewState.
            </summary>
            <remarks>Called automatically to persist the object into ViewState</remarks>
            <returns>An object array containing ViewState information.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.TrackViewState">
            <summary>
            Marks modified elements for serialization into ViewState
            </summary>
            <remarks>
            <p class="body">Called automatically by the control to determine which properties need to be persisted into ViewState.</p>		
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#WebControls#IProvideImageDirectoryResolution#ResolveImageUrl(System.String)">
            <summary>
            Returns the resolved image path.  This path will be used in the img tag's src attribute, so it must be fully resolved.
            </summary>
            <param name="url">The unresolved url.  This may contain "~/".  The final resolved Url must take into account any values specified by config files.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#WebControls#IProvideImageDirectoryResolution#ResolveImageResourceUrl(System.String)">
            <summary>
            Resolves a resource path into a URL.  This can be done by using the Page.GetWebResourceUrl method.
            </summary>
            <param name="path">A string path to an embedded resource in the assembly.</param>
            <returns>The Url, which can be used to retrieve the embedded resource.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the column header.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.GenerateHeaderAttributes">
            <summary>
            Virtual method to create the attributes for derived classes.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.GetLocalName">
            <summary>
            Virtual method allows to return different local names for derived classes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the column header. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the column header.
            </summary>
            <returns>
            The method always returns self as it is the first sibling node of the column.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.GetFirstHeaderSibling">
            <summary>
            Virtual method allows to return different first sibling for derived classes.
            </summary>
            <returns>
            First sibling of the node.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Null if the column header has no next siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.GetNextHeaderSibling">
            <summary>
            Virtual method allows to return different next sibling for derived classes.
            </summary>
            <returns>
            Next sibling of the node.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Returns previous sibling.
            </summary>
            <returns>
            Null if the column header has no previous siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.GetPreviousHeaderSibling">
            <summary>
            Virtual method allows to return different previous sibling for derived classes.
            </summary>
            <returns>
            Previous sibling of the node.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the parent - column.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the column header.
            </summary>
            <returns>
            The column header has no child nodes. The method always returns Null.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Image">
            <summary>
            Returns the Image that is set for the Header object.
            </summary>
            <remarks class="body">The Header Image will appear on the column header when the column is seen in normal rendering
            and when the column is represented in the GroupByBox.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Title">
            <summary>
            The tooltip for the header.
            </summary>
            <remarks>
            <p class="body">This property specifies the tooltip of the header. By default, no toolip will be displayed.</p>
            <p class="body">The Title attribute is assigned to the Title HTML object, which browsers use for showing tooltips.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Caption">
            <summary>
            The text that appears in the caption of the header. 
            </summary>
            <remarks>
            <p class="body">This property specifies the text of the header. By default, the header displays the name of the field from the data source to which the column is bound. Footer has an empty string by default.</p>
            <p class="body">(The "header" here means either header or footer of the grid's columns, since this class is the base class for both.)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Column">
            <summary>
            Returns a reference to a <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn">UltraGridColumn</see> object that determines in which column this <b>HeaderBase</b> belongs.
            </summary>
            <remarks>
            <p class="body">Developers use this property to determine the column a header/footer belongs in.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.HasStyle">
            <summary>
            Determines if a style has been applied to the header.
            </summary>
            <remarks>
            <p class="body">Returns True if the column header's style has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Style"/> property. If False, the column header has no style of its own and its appearance will be inherited.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.HasImage">
            <summary>
            Determines if the Image has been applied to the Header
            </summary>
            <remarks>
            <p class="body">Returns True if the column header's Image exists.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.HasSelectedStyle">
            <summary>
            Determines if a style has been applied to the selected header.
            </summary>
            <remarks>
            <p class="body">Returns True if the selected header style has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.SelectedStyle"/> property.) If False, the edit cell has no style of its own and its appearance will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Key">
            <summary>
            String identifier uniquely identifying this <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> within its parent collection.
            </summary>
            <remarks>Inherited from KeyedObjectBase the Key object.  In a bound WebGrid, the Header Key will come from the column of data that is being bound.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Style">
            <summary>
            An <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the header.
            </summary>
            <remarks>
            Use this property to provide a custom style for the header. Common style attributes that can be adjusted, include forecolor, backcolor, font, and content alignment within the header. Providing a different style enhances the appearance of the header.
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.SelectedStyle">
            <summary>
            An <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the selected header.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the header when the column has been selected. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.RowLayoutColumnInfo">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo"/> object that 
            contains the header's positioning and sizing information inside its layout.
            </summary>
            <remarks>
            The developer is responsible for proper size/position of the items in the layout. 
            If a position set exceeds the layout boundaries it is being wrapped to be correct. 
            Overlapped items are not rendered except the latest in the order within layout.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.HasRowLayoutColumnInfo">
            <summary>
            Determines if a row layout has been applied to the header.
            </summary>
            <remarks>
            <p class="body">Returns True if the column header's row layout has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.RowLayoutColumnInfo"/> property. If False, the column header has no row layout of its own.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.IsTrackingViewState">
            <summary>
            Returns whether ViewState is being tracked on the object.
            </summary>
            <remarks>Implementation for IStateManager.  True if the collection is tracked in ViewState.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.ImageDirectory">
            <summary>
            Returns the ImageDirectory path.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.ImageDirectoryResolved">
            <summary>
            Returns the final resolved ImageDirectory path that should be used for an image.
            </summary>
            <remarks>This path returned here should already have resolved "~/", and taken any values from config files if present.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the column header has attributes.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the column header node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the column header.
            </summary>
            <remarks>
            Always returns Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the column header's node has children.
            </summary>
            <remarks>
            Column header never has children. The property is always false.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFooter.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnFooter"/> class with default
            properties.
            </summary>
            <remarks>Default constructor.  Called by the control when column footers are enabled on the WebGrid.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFooter.#ctor(System.Boolean)">
            <summary>
            Creates an instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnFooter"/> class with default
            properties.
            </summary>
            <param name="bTrack">
            Indicates if the column footer has to turn tracking view state on.
            </param>
            <remarks>Default constructor.  Called by the control when column footers are enabled on the WebGrid.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFooter.SetColumn(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Sets the UltraGridColumn object that will be associated with this object.
            </summary>
            <remarks>Not for public use</remarks>
            <param name="column">The UltraGridColumn object to be associated with this object.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFooter.CopyFrom(Infragistics.WebUI.UltraWebGrid.ColumnFooter)">
            <summary>
            Copies a given instance of a Column Footer into this Column Footer.
            </summary>
            <returns>For developer convenience, this method returns a copy of
            this Column Footer instance.</returns>
            <remarks>
            <p class="body">Affects the current instance of <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnFooter"/>.</p>
            </remarks>
            <param name="source">The ColumnFooter object which will be mimic by this column.</param>		
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFooter.ResetFormula">
            <summary>
            Resets Formula property to it's default value of null.
            </summary>
            <remarks>Clears the formula for this column.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFooter.ShouldSerializeFormula">
            <summary>
            Indicates whether the Formula property has changed from the
            default value.
            </summary>
            <returns>True if the <see cref="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.Formula"/> should be serialized
            because it has changed from its default value, false otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFooter.GenerateHeaderAttributes">
            <summary>
            Fills the attributes of the columns footer.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFooter.GetLocalName">
            <summary>
            Returns local node name of the column footer.
            </summary>
            <returns>
            Local node name.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFooter.GetFirstHeaderSibling">
            <summary>
            The column footer is the first sibling.
            </summary>
            <returns>
            Header if it exists. Self otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFooter.GetPreviousHeaderSibling">
            <summary>
            Returns previous sibling node of the column footer.
            </summary>
            <returns>
            Header if it exists. Null otherwise.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.Formula">
            <summary>
            Specifies an UltraCalc formula for calculating the summary of this
            column's footer.
            </summary>
            <value>
            A string representing a formula of one or more references and optionally
            built-in and/or user-defined functions in UltraCalc expression syntax.
            </value>
            <remarks>
            <p class="body">
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.Total"/> property must be set to <i>Formula</i> and the
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CalcManager"/> must be set to a valid instance
            of <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcManager"/> for this property to have any affect.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.FormulaErrorStyle">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle">GridItemStyle</see> object that contains the style properties applied to values within the column footer resulting from an UltraCalc formula error.
            </summary>
            <remarks>
            <p class="body">The <b>FormulaErrorStyle</b> property is used to specify the visual formatting of the footer with a calculated formula (one in which <see cref="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.Formula"/> is non-null and non-empty) having resulted in a formula error.</p> 
            <p class="body">This property has no effect on the grid if this column footer is not an UltraCalc-calculated column footer (<i>i.e.</i>, it has no formula defined and <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterTotal"/> is something other than <i>Formula</i>).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.Image">
            <summary>
            This property is inherited from a base class and not currently used by the control.
            </summary>
            <remarks>This property is inherited from a base class and not currently used by the control.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.HasFormulaErrorStyle">
            <summary>
            Determines if a style has been applied to the column's footer value for use when the UltraCalc formula results in an error.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for the column's footer value has been specified (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.FormulaErrorStyle"/> property) for when the UltraCalc formula calculation results in an error. If False, the footer's formula error style will be inherited from it's <b>Column</b>, <b>Band</b> (if not specified at the column-level) or (if not specified at the column- or band-levels) <b>DisplayLayout</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.FormulaErrorStyleResolved">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle">GridItemStyle</see> object that
            contains the style properties for the column footer when it's value result from an UltraCalc
            formula is an error. This object represents the actual visible state of the footer value in
            error.
            </summary>
            <remarks>
            <p class="body">The appearance of the column footers evaluating to an error when its value is calculated
            by UltraCalc is controlled by the <b>GridItemStyle</b> object specified in the <see cref="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.FormulaErrorStyle"/>
            property.  However, only some appearance-related properties may be controlled by this object, while others
            are inherited from other styles defined on the grid.  For example, rows always inherit their appearance
            from the band.  If you use the <b>GridItemStyle</b> object for rows just to change their text alignment,
            the foreground and background color will still be inherited from the band. The values for foreground and
            background color will not be explicitly set in the <b>GridItemStyle</b> for the rows.</p>
            <p class="body">You can use the <b>FormulaErrorStyleResolved</b> property to determine every formatting
            attribute that is going to be rendered for an object, regardless of inheritance issues. This property
            returns a <b>GridItemStyle</b> object with all of its attributes set to the inherited values that are
            being used to control the rendering of the object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.Infragistics#WebUI#CalcEngine#IFormulaProvider#CalcManager">
            <summary>
            Gets the <b>IUltraCalcManager</b> implementation associated with this participant.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.Infragistics#WebUI#CalcEngine#IFormulaProvider#Participant">
            <summary>
            Gets the participating formula provider for this column footer.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.Infragistics#WebUI#CalcEngine#IFormulaProvider#Reference">
            <summary>
            Gets the <b>IUltraCalcReference</b> implementation for this participant.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.Style">
            <summary>
            An <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the column footer.
            </summary>
            <remarks>Use this property to provide a custom style for the column footer.  This property is read-only.  Common style attributes that can be read include forecolor, backcolor, font, and content alignment within the footer.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFooter.Total">
            <summary>
            Specifies the type and calculation method of summary information to display in this column's footer.
            </summary>
            <remarks>
            <p class="body">Possible types of summary information that can appear in a footer include: Text, Sum, Average, Minimum, Maximum,
            Count and Formula. The default setting is <i>Text</i>, which displays literal text in the footer.</p>
            <p class="body">Developers must set <b>Total</b> to <i>Formula</i> in order to have an UltraCalc formula calculated and displayed
            in the footer.</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <p class="body">Thrown when a value not defined by the <b>SummaryInfo</b>
            enumeration is assigned (for instance, an out-of-range integer value).</p>
            <p class="body">This exception sometimes arises in languages like VB.NET,
            where compile-time type-checking is weak, when casting a patently invalid value and attempting to assign it to this property,
            or from using an .aspx document created with a newer version of the UltraWebGrid element that contains an enhanced set of
            SummaryInfo values that are unavailable to an older version of the UltraWebGrid element built from a parsing of that .aspx
            document.</p>
            </exception>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnHeader">
            <summary>
            Holds properties for the column's header. Inherited from HeaderBase
            </summary>
            <remarks>The column header appears at the top of the data area.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnHeader.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>Called internally by the control to create the header object of the column</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnHeader.#ctor(System.Boolean)">
            <summary>
            Constructor for ColumnHeader object
            </summary>
            <param name="bTrack">
            Indicates if the column header has to turn tracking view state on.
            </param>
            <remarks>Called internally by the control to create the header object of the column</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnHeader.CopyFrom(Infragistics.WebUI.UltraWebGrid.ColumnHeader)">
            <summary>
            Copies the ColumnHeader object
            </summary>
            <remarks>Copies the settings from source onto the current object.</remarks>
            <param name="source">The ColumnHeader object to be copied.</param>
            <returns>A reference to this object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnHeader.RenderHeaderImage(Infragistics.WebUI.UltraWebGrid.ColumnHeader,System.Text.StringBuilder)">
            <summary>
            Renders out the Image that was set on the Header
            </summary>
            <param name="header">The Header which is currently being processed.</param>
            <param name="sb">The StringBuilder the image is rendered to.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnHeader.GenerateHeaderAttributes">
            <summary>
            Fills the attributes of the columns header.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnHeader.GetLocalName">
            <summary>
            Returns local node name of the column header.
            </summary>
            <returns>
            Local node name.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnHeader.GetFirstHeaderSibling">
            <summary>
            The column header is the first sibling.
            </summary>
            <returns>
            Always returns self.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnHeader.GetNextHeaderSibling">
            <summary>
            Returns next sibling node of the column header.
            </summary>
            <returns>
            Footer if it exists. Null otherwise.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnHeader.ClickAction">
            <summary>
            Specifies what will occur when the user clicks on a column header.
            </summary>
            <remarks>
            <p class="body">The default action for a column header is to select the column when clicked. You can also choose to make clicking a column header sort the band based on the contents of the one column, or add the column to the ones being used to sort the band data.</p>
            <p class="body">When this property is set to HeaderClickAction.SortMultiple, the user can use the CTRL key in combination with the mouse to select multiple columns for sorting. The order in which columns are selected is significant, determining the order in which the data will be sorted.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnHeader.ClickActionResolved">
            <summary>
            Specifies how a column header should react to being clicked. This property will always return the setting that is in control of the column.
            </summary>
            <remarks>
            <p class="body">The action that occurs when a column header is clicked is controlled by the <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderClickAction"/> property. However, <b>HeaderClickAction</b> may be set to a "use default" value, meaning the setting of the property is inherited from the band containing the column, the parent band of the band containng the column, or from the preset value built into the UltraWebGrid.</p>
            <p class="body">To simply find out what action will occur when the header of the current column is clicked, use the <b>HeaderClickActionResolved</b> property. This property resolves any inheritance issues and returns a value that tells you what action will be triggered by clicking the column header.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnHeader.Fixed">
            <summary>
            Specifies whether the header is fixed.
            </summary>
            <remarks>
            <p class="body">If the property is set to true the entire column the header belongs to will be fixed on the left side of the grid and not scrollable with the rest of the data. You must enable the fixed-headers functionality by setting UseFixedHeaders to true in order for this property to have any effect.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnHeader.FixedHeaderIndicator">
            <summary>
            Specifies whether the user is allowed to fix/unfix the header on the client.
            </summary>
            <remarks>
            <p class="body">Setting the property to the Button value will enable the user's ability to fix or unfix the header dynamically on the client.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnHeader.FixedHeaderIndicatorResolved">
            <summary>
            Specifies whether a column header is allowed to be fixed or unfixed by the user. This property will always return the setting that is in control of the column.
            </summary>
            <remarks>
            <p class="body">Whether the user is allowed to fix/unfix columns is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.ColumnHeader.FixedHeaderIndicator"/> property. However, <b>FixedHeaderIndicator</b> may be set to a "use default" value, meaning the setting of the property is inherited from the band containing the column, the parent band of the band containng the column, or from the preset value built into the UltraWebGrid.</p>
            <p class="body">To simply find out if the user is allowed to fix the column manually, use the <b>FixedHeaderIndicatorResolved</b> property. This property resolves any inheritance issues and returns a value that tells you if the user is allowed to fix/unfix the column.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnHeader.TitleMode">
            <summary>
            Behavior used for generating the HTML Title attribute of this column header.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnsCollection">
            <summary>
            The Columns collection manages the set of UltraGridColumn objects that correspond to a Band within the grid.
            </summary>
            <remarks>
            <p class="body">The top-level UltraWebGrid object exposes the Columns collection of Band(0) and is useful for non-hierarchical, flat grids.  Each UltraGridBand object also contains a Columns collection.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>Primarily used internally by the control, creates a collection to hold column objects.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.GetEnumerator">
            <summary>
            Returns an enumerator object for the Columns collection.
            </summary>
            <remarks>Implemented for IEnumerator support.</remarks>
            <returns>An IEnumerator object based on this collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.FromKey(System.String)">
            <summary>
            Key string indexer for the collection. Uses key string to return a column.
            </summary>
            <remarks>Based on a case sensitive key, this method scans the collection looking for a column with a matched key.  When a WebGrid is bound, the key will other be the property name or DataColumn name that the data is based on.</remarks>
            <returns>An <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object with the matching key value.</returns>
            <param name="key">The string value for the column that is being searched for in the collection.  The key is case sensitive.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Boolean)">
            <summary>
            Adds an UltraGridColumn to the Column collection, and applies the default value to all
            existing cells
            </summary>
            <param name="webGridColumn">The UltraGridColumn object to be added to the collection.</param>
            <param name="applyDefaultToExistingRows">If true, the DefaultValue of the Column object is applied to any existing cells of the WebGrid.</param>
            <returns>The index of the UltraGridColumn in the Column Collection</returns>		
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Inserts an UltraGridColumn object into the collection.
            </summary>
            <param name="webGridColumn">The UltraGridColumn object to be added.</param>
            <returns>The index of the newly added UltraGridColumn.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Add(System.String)">
            <summary>
            Creates a new UltraGridColumn object in the collection and initializes its Key value.
            </summary>
            <param name="key">String to use as the unique Key value for the new UltraGridColumn object.</param>
            <returns>The index of the newly-added UltraGridColumn object within the collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Add(System.String,System.String)">
            <summary>
            Creates a new UltraGridColumn object in the collection and initializes its Key value and header text.
            </summary>
            <param name="key">String to use as the unique Key value for the new UltraGridColumn object.</param>
            <param name="headerText">String displayed as the identifiying text for the column in the column's header.</param>
            <returns>The index of the newly-added UltraGridColumn object within the collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Inserts an UltraGridColumn object into the collection at the specified index.
            </summary>
            <remarks>
            <p class="body">Adding an UltraGridColumn object to this collection will cause that column to become selected in the grid. Depending on the type of selection that is allowed, this may cause other columns to become unselected.</p>
            </remarks>
            <param name="index">The position in the collection for the new column. Note that if you specify the index of an existing column, the new column will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="webGridColumn">The UltraGridColumn object to be inserted into the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a new UltraGridColumn object with specified key into the collection at the specified index.
            </summary>
            <remarks>
            <p class="body">Adding an UltraGridColumn object to this collection will cause that column to become selected in the grid. Depending on the type of selection that is allowed, this may cause other columns to become unselected.</p>
            </remarks>
            <param name="index">The position in the collection for the new column. Note that if you specify the index of an existing column, the new column will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="key">String to use as the unique Key value for the new UltraGridColumn object.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Removes the specified UltraGridColumn object from the collection.
            </summary>
            <param name="webGridColumn">The UltraGridColumn object to be removed from the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the UltraGridColumn object at the specified index from the collection.
            </summary>
            <param name="index">The index of the UltraGridColumn object to be removed.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Clear">
            <summary>
            Removes all UltraGridColumn objects from the collection.
            </summary>
            <remarks>
            <p class="body">Invoking this method will de-select any selected columns in the grid.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.CopyFrom(Infragistics.WebUI.UltraWebGrid.ColumnsCollection)">
            <summary>
            Populates a Columns collection with all of the UltraGridColumn objects in a different Columns collection. 
            </summary>
            <remarks>
            <p class="body">This method copies UltraGridColumn objects from one collection to another. Any columns in the current Columns collection will be removed before the UltraGridColums from the passed-in collection are copied. The columns in the passed-in collection are not removed from that collection by this method.</p>
            </remarks>
            <param name="columns">A Columns collection containing the UltraGridColumn objexts that will be copied.</param>
            <returns>The Columns collection that was passed as a parameter to the method.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.CreateBackup">
            <summary>
            Creates an interal replication of the collection to be used when RollBack is called
            </summary>
            <remarks>This method is used when changes are being made to hold the original state of the collection should changes be rolled back later.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Commit">
            <summary>
            Commits all changes made since last checkpoint and persists changes.
            </summary>
            <remarks>Commital of changes prevents rolling back of values past the last commital point.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Rollback">
            <summary>
            Reverts collection back to the last checkpoint
            </summary>
            <remarks>Rollback will undo changes made to the collection since the last committal of data.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the columns collection.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The columns collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
            <remarks>
            The columns collection don't have any attributes. This method always returns -1.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The columns collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
            <remarks>
            The columns collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the columns collection. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the columns collection.
            </summary>
            <returns>
            The columns collection node has no siblings. Always returns itself.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Always returns Null.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Gets the previous sibling of the columns collection.
            </summary>
            <returns>
            Always returns Null.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the columns collection's parent node.
            </summary>
            <returns>
            UltraWebBand object.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the columns collection.
            </summary>
            <returns>
            The first column in the collection is returned.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Band">
            <summary>
            Provides access to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object that contains this Columns collection
            </summary>
            <remarks>This collection uses the <b>Band</b> to connect into the WebGrid.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.IsReadOnly">
            <summary>
            Returns a Boolean value indicating whether the collection is read-only.
            </summary>
            <remarks>This collection is not read only.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Item(System.Int32)">
            <summary>
            Property indexer for the collection. Uses numeric index.
            </summary>
            <remarks>Allows access via an integer index.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.HasChanges">
            <summary>
            Designates whether the collection has changed since the last commital of data.
            </summary>
            <remarks>
            Used to support ISupportRollback, returns true if changes appear in one of the columns of the collection.
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the columns collection has attributes.
            </summary>
            <remarks>
            The columns collection has no attributes. The property is always false.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the columns collection node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the columns collection node.
            </summary>
            <remarks>
            The columns collection has no node value. The property is always Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the columns collection has children.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.HasRelativeColumnWidths">
            <summary>
            Returns true if all of the columns have a pixel width set on them and false
            if any of them have a relative width.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.ColumnEnumerator">
            <summary>
            An enumerator class that can be used to iterate through the columns of a ColumnsCollection object
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.ColumnEnumerator.#ctor(Infragistics.WebUI.UltraWebGrid.ColumnsCollection)">
            <summary>
            The constructor for the ColumnEnumerator
            </summary>
            <param name="theColumns">The ColumnsCollection that is to be enumerated</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.ColumnEnumerator.MoveNext">
            <summary>
            Move to the next item in the Columns collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.ColumnEnumerator.Reset">
            <summary>
            Resets the enumeration to the beginning.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnsCollection.ColumnEnumerator.Current">
            <summary>
            Returns the current Column in the enumeration sequence.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.HeaderItem">
             <summary>
             The HeaderItem object is used to implement header templates in a templated column. The HeaderItem functions as the container into which the column header template is instantiated.
             </summary>
            <remarks>
            <seealso cref="T:Infragistics.WebUI.UltraWebGrid.FooterItem"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeaderItem.#ctor(Infragistics.WebUI.UltraWebGrid.TemplatedColumn)">
            <summary>
            Constructor for a FooterItem
            </summary>
            <param name="column">The templated column object that contains the HeaderItem</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderItem.HeaderText">
            <summary>
            Returns a string value containing the header text that will be displayed for the column. This property is read-only.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.HeaderText"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderItem.Column">
            <summary>
            Returns the column that contains the item template. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeaderItem.SortIndicator">
            <summary>
            Returns a string value containing the URL of the image file being used as the column's sort indicator. This property is read-only.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortIndicator"/>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.CellItem">
            <summary>
            The CellItem object is used to implement cell edit templates in a templated column. The CellItem functions as the container into which the cell editing templates are instantiated.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellItem.#ctor(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Default Constructor
            </summary>
            <param name="cell">The UltraGridCell object associated with this CellItem</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellItem.CreateChildControls">
            <summary>
            Overrides the base class' <b>CreateChildControls</b>.
            </summary>
            <remarks>
            Creates child controls collection, fills it and instanciate in every control in it. The child controls collection is created basing on the templates that are set  in the grid.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.CellItem.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            	Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellItem.Value">
            <summary>
            Returns the value of the cell that will be stored in the data source. This may be text or a pure value such as true/false. This property is read-only.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Value"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellItem.Cell">
            <summary>
            Returns the  cell that will be stored in the data source. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellItem.Text">
            <summary>
            Returns the plain text of the cell with any formatting or masking removed. If the user has entered data in the cell, this text will correspoind to the characters entered by the user. This property is read-only.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.Text"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellItem.FormattedText">
            <summary>
            Returns the text of the cell as it will be displayed in the grid, with any masking or formatting applied. This property is read-only.
            </summary>
            <remarks>
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridCell.GetText"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellItem.DataItem">
            <summary>
            The object which is used to populate the values of the item.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FooterItem">
            <summary>
            The FooterItem object is used to implement footer templates in a templated column. The FooterItem functions as the container into which the column footer template is instantiated.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.WebUI.UltraWebGrid.HeaderItem"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterItem.#ctor(Infragistics.WebUI.UltraWebGrid.TemplatedColumn)">
            <summary>
            Constructor for a FooterItem
            </summary>
            <param name="column">The templated column object that contains the FooterItem</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FooterItem.FooterText">
            <summary>
            Returns the label text that will be displayed in the column footer. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FooterItem.Column">
            <summary>
            Returns the column that contains the item template. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FooterItem.FooterSummary">
            <summary>
            Returns or sets the summary text that will be displayed in the column footer.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.TemplatedColumn">
            <summary>
            The TemplatedColumn class provides access to the template-specific features of the UltraGridColumn object. You can use this class to manage the header, footer and cell templates attached to any given column.
            </summary>
            <remarks>
            Each column can support three kinds of templates. Header templates apply to the column header and determine the text that will be displayed in the header and the image displayed for the sort indicator. Footer templates appy to the column footer and supply text and summary text for the footer. Cell templates are applied to each cell of the column, and offer the capability to provide a custom editing control layout on a cell-by-cell basis.<br></br>  If the TemplatedColumn class is used with server controls any sorting must be done on the server to preserve the integrity of the rows.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.TemplatedColumn.#ctor">
            <summary>
            Creates a new Templated Column object which can be used to inject controls inside of the UltraGridColumn object.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.TemplatedColumn.#ctor(System.Boolean)">
            <summary>
            Creates a new Templated Column object which can be used to inject controls inside of the UltraGridColumn object.
            </summary>
            <param name="bTrackViewState">
            boolean - Designates whether the cell should be included in the viewstate of the WebGrid. 
            Setting the value to <b>true</b> will allow
            the WebGrid to persist the column across postbacks automatically. 
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.TemplatedColumn.CopyFrom(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Copies the template from the specified column to the current column. Header, footer and cell templates will be copied.
            </summary>
            <param name="source">The templated column (UltraGridColumn object) from which you wish to copy the templates.</param>
            <returns>The current column with the templates applied. If the passed-in column is not a templated column, the current column is returned unchanged.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.TemplatedColumn.HeaderTemplate">
            <summary>
            Returns or sets the template that will be used with the column header.
            </summary>
            <remarks>
            <p class="body">Use this property to assign a template to a column header or to access the properties of the template assigned to a column header. Column header templates can be used to specify the text and sort indicator image for a column header.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.TemplatedColumn.HeaderItem">
            <summary>
            Returns or sets the HeaderItem associated with this column. The HeaderItem functions as the container into which the column header template is instantiated.
            </summary>
            <remarks>
            <p class="body">You can use this property to access the controls used by the header template for a given column. This property returns a collection of <see cref="T:System.Web.UI.Control"/> objects that correspond to the controls that make up the template. Use <b>HeaderItem</b> to access these controls and any children they may contain.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.TemplatedColumn.CellTemplate">
            <summary>
            Returns or sets the template that will be used with the column's cells.
            </summary>
            <remarks>
            <p class="body">Use this property to assign a template to the cells of a column or to access the properties of the template assigned to a column's cells.</p>
            <p class="body">Cell templates can be used to provide an alternative to entering data directly into the cell. A template is a set of controls for the user to use when entering or viewing data. The template appears as a sub-form with at least one editable control (text box, drop-down list, set of option buttons, etc.) corresponding to the value of the cell. The template is updated with the value from the cell when it is displayed. The template can also display any other interface elements the developer deems appropriate. After the user has edited the cell data using the controls of the template, they can dismiss the template, optionally comitting the changed data. Any changes made in the template will be reflected in the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.TemplatedColumn.CellItems">
            <summary>
            Returns or sets the collection of CellItems associated with this column. The CellItem functions as the container into which the Cell templates are instantiated.
            </summary>
            <remarks>
            <p class="body">You can use this property to access the controls used by the Cell templates for a given column. This property returns a collection of <see cref="T:System.Web.UI.Control"/> objects that correspond to the controls that make up the template. Use <b>CellItem</b> to access these controls and any children they may contain.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.TemplatedColumn.FooterTemplate">
            <summary>
            Returns or sets the template that will be used with the column footer.
            </summary>
            <remarks>
            <p class="body">Use this property to assign a template to a column footer or to access the properties of the template assigned to a column footer. Column footer templates can be used to specify the label text and the summary text that appears in the column footer.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.TemplatedColumn.FooterItem">
            <summary>
            Returns or sets the FooterItem associated with this column. The FooterItem functions as the container into which the cell footer template is instantiated.
            </summary>
            <remarks>
            <p class="body">You can use this property to access the controls used by the Footer template for a given column. This property returns a collection of <see cref="T:System.Web.UI.Control"/> objects that correspond to the controls that make up the template. Use <b>FooterItem</b> to access these controls and any children they may contain.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.DBBinding">
            <summary>
            	Encapsulation of ICollection databinding functionality
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.DBBinding.FillXmlDataColumns(System.Xml.XmlElement)">
            <summary>
            Fill in columns of xml data. First node of the data is used.
            </summary>
            <param name="node"></param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.BrowserLevel">
            <summary>
            Enumeration of the types of browser output supported.
            </summary>
            <remarks>
            <p class="body"> The default value is <b>Auto</b>, meaning that the control itself will decide, based on the user agent in effect on the client, what level of DHTML support will be rendered.  Overriding this value forces the rendering to either <b>UpLevel</b> or <b>DownLevel</b>, regardless of the browser in use.</p>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Browser">Browser</seealso>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BrowserLevel.Auto">
            <summary>
            Automatic browser-level detection.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BrowserLevel.DownLevel">
            <summary>
            Down-level browsers with an emphasis on compatibility with older standards
            and platforms with limited rendering capabilities.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BrowserLevel.UpLevel">
            <summary>
            Up-level browsers conforming to current standards and capable of rendering
            dynamic HTML and executing JavaScript.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BrowserLevel.Xml">
            <summary>
            Up-level browsers with standards-conformant support for embedded XML and
            client-side rendering.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.BrowserTarget">
            <summary>
            Enumeration of the types of browser output supported.
            </summary>
            <remarks>This enumeration is for internal use only.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BrowserTarget.IE4">
            <summary>
            Browser detected is Internet Explorer 4
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BrowserTarget.IE5">
            <summary>
            Browser detected is Internet Explorer 5
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BrowserTarget.IE6">
            <summary>
            Browser detected is Internet Explorer 6
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BrowserTarget.Net4">
            <summary>
            Browser detected is Netscape 4.7
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BrowserTarget.Net6">
            <summary>
            Browser detected is Netscape 6
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BrowserTarget.Net7">
            <summary>
            Browser detected is Netscape 7 (Mozilla.Org browser)
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BrowserTarget.FireFox">
            <summary>
            Browser detected is FireFox (Mozilla.Org browser)
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowSelectors">
            <summary>
            Enumeration values for row selectors presence.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowSelectors.NotSet">
            <summary>
            When set to <b>NotSet</b> default to the value of a higher level object as to what behavior to perform.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowSelectors.Yes">
            <summary>
            Show RowSelectors
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowSelectors.No">
            <summary>
            Hides RowSelectors
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.Cursors">
            <summary>
            Enumeration of cursors that can be used in styles.
            </summary>
            <remarks>
            The types of cursors are made available by the browser. 
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Cursors.NotSet">
            <summary>
            Uses the setting from a preceding style or from the browser itself.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Cursors.Default">
            <summary>
            Uses the setting from a preceding style or from the browser itself.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Cursors.Auto">
            <summary>
            Uses the browser setting for the cursor.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Cursors.Hand">
            <summary>
            Hand with the first finger pointing up, as when the user moves the pointer over a link.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Cursors.Move">
            <summary>
            Crossed arrows, indicating something is to be moved.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Cursors.Crosshair">
            <summary>
            Simple cross hair.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Cursors.Text">
            <summary>
            Editable text; usually an I-bar.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Cursors.Wait">
            <summary>
            Hourglass or watch, indicating that the program is busy and the user should wait.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Cursors.Help">
            <summary>
            Arrow with question mark, indicating help is available.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.CellMultiline">
            <summary>
            Enumeration for the Column.CellMultiline property. Determines whether cell editing will support multi-line text areas for text input.
            </summary>
            <remarks>
            CellMultiline uses editor controls which will allow for new line characters to be persisted in the HTML. 
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellMultiline.NotSet">
            <summary>
            Value is taken from a parent object.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellMultiline.Yes">
            <summary>
            Multiline editing will be allowed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellMultiline.No">
            <summary>
            Multiline editing will not be allowed.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AllowGroupBy">
            <summary>
            Enumeration used for setting the AllowGroupBy property of the UltraGridColumn object.
            </summary>
            <remarks><see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> objects can individually control whether they will allow themselves
            to be dragged into the <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByBox"/>.
             </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowGroupBy.NotSet">
            <summary>
            When set to <b>NotSet</b> default to the value of a higher level object as to whether it will allow group by.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowGroupBy.Yes">
            <summary>
            When set to <b>Yes</b> the column will allow itself to be dragged into the <b>GroupByBox</b>
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowGroupBy.No">
            <summary>
            When set to <b>No</b> the column will not allow itself to be dragged into the <b>GroupByBox</b>
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.Expandable">
            <summary>
            Enumeration used for controlling whether rows are expandable or not.
            </summary>
            <remarks>Set on the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object or the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see>, this setting can be used to limit the depth of data
            that the client can see.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Expandable.NotSet">
            <summary>
            When set on the <b>UltraGridBand</b> the value from the <B>DisplayLayout</B> object will be used.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Expandable.Yes">
            <summary>
            The <b>UltraGridRow</b>s are expandable, if they have child rows.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Expandable.No">
            <summary>
            The <b>UltraGridRow</b>s are not expandable, if they have child rows.  
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AllowAddNew">
            <summary>
            Defines whether rows can be added or not on the client.
            </summary>
            <remarks>This enumeration is used to set the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowAdd"/> and the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowAddNewDefault"/> properties. 
            On the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> object a setting of NotSet would be interpretted as <b>No</b>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowAdd"/>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowAddNewDefault"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowAddNew.NotSet">
            <summary>
            When set to <b>NotSet</b> the value for the <b>Band</b> object is inherited from the parent object, the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> object.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowAddNew.Yes">
            <summary>
            When set to <b>Yes</b> adding rows will be allowed for this band regardless of settings on other <b>Band</b> objects and despite the setting on the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> object.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowAddNew.No">
            <summary>
            When set to <b>No</b> adding rows will not be allow for this band regardless of settings on other <b>Band</b> objects and despite the setting on the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> object.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AllowDelete">
            <summary>
            Enumeration used for controlling whether rows can be deleted or not on the client.
            </summary>
            <remarks>This enumeration is used to set the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowDelete"/> and the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowDeleteDefault"/> properties. 
            On the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> object a setting of NotSet would be interpretted as <b>No</b>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowDelete"/>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowDeleteDefault"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowDelete.NotSet">
            <summary>
            When set to <b>NotSet</b> the value for the <b>Band</b> object is inherited from the parent object, the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> object.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowDelete.Yes">
            <summary>
            When set to <b>Yes</b> deleting rows will be allowed for this band regardless of settings on other <b>Band</b> objects and despite the setting on the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> object.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowDelete.No">
            <summary>
            When set to <b>No</b> deleting rows will not be allow for this band regardless of settings on other <b>Band</b> objects and despite the setting on the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see>object.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AllowUpdate">
            <summary>
            Enumeration used for controlling whether cells can be updated on the client.
            </summary>
            <remarks>
            AllowUpdate can be set on the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see>, <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/>, or individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowUpdate.NotSet">
            <summary>
            Value is taken from a higher level in the hierarchy.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowUpdate.Yes">
            <summary>
            Editing is allowed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowUpdate.No">
            <summary>
            Editing is not allowed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowUpdate.RowTemplateOnly">
            <summary>
            Editing is via client interaction with the RowEditTemplate for the WebGrid.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AllowSorting">
            <summary>
            Enumeration used for controlling whether sorting can be performed.
            </summary>
            <remarks>
            Sorting is set on either the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> of the WebGrid or on the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object.	
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowSorting.NotSet">
            <summary>
            Value is taken from a higher level in the hierarchy.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowSorting.Yes">
            <summary>
            Sorting is performed on the server.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowSorting.No">
            <summary>
            Sorting is not enabled.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowSorting.OnClient">
            <summary>
            Sorting is performed on the client.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ShowMarginInfo">
            <summary>
            Enumeration used for setting the visibility of several different objects in the boundary areas of the grid. These include ColFootersVisible and ColHeadersVisible.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ShowMarginInfo.NotSet">
            <summary>
            When set to <b>NotSet</b> default to the value of a higher level object as to what behavior to perform.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ShowMarginInfo.Yes">
            <summary>
            When set to Yes, the WebGrid will allow showing of the RowSelectors, Headers, and Footers
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ShowMarginInfo.No">
            <summary>
            When set to No, the WebGrid will not allow showing of the RowSelectors, Headers, and Footers
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.PagerStyleMode">
            <summary>
            Enumeration used for setting the style of paging labels within the paging area of the grid.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.PagerStyleMode.Numeric">
            <summary>
            Shows a numeric based link in the Pager area corresponding to the page that will be accessed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.PagerStyleMode.PrevNext">
            <summary>
            Displays previous and next options to navigate the pages of the WebGrid.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.PagerStyleMode.CustomLabels">
            <summary>
            Allows the user to customize how the Pager options will appear.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.PagerStyleMode.QuickPages">
            <summary>
            Enables the QuickPages functionality of the WebGrid.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.PagerStyleMode.ComboBox">
            <summary>
            Displays a drop down control to control paging.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.PagerAppearance">
            <summary>
            Enumeration used for setting the location of the paging labels.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.PagerAppearance.Top">
            <summary>
            WebGrid will show the Pager object at the top of the visible area
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.PagerAppearance.Bottom">
            <summary>
            WebGrid will show the Pager object at the bottom of the visible area
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.PagerAppearance.Both">
            <summary>
            WebGrid will show the Pager object at the top and bottom of the visible area
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.PagerAlignment">
            <summary>
            Enumeration used to set the alignment of the paging labels.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.PagerAlignment.Right">
            <summary>
            The Pager artifacts will be located on the right of the Pager area.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.PagerAlignment.Left">
            <summary>
            The Pager artifacts will be located on the left of the Pager area.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.PagerAlignment.Center">
            <summary>
            The Pager artifacts will be located in the center of the Pager area.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.BoxLocation">
            <summary>
            Enumeration used for setting the location of the box controls of the WebGrid.
            </summary>
            <remarks>This property allows for moving the Pager, AddNewBox, and GroupByBox within the control. </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BoxLocation.Top">
            <summary>
            The box will be placed at the top of the WebGrid.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BoxLocation.Bottom">
            <summary>
            The box will be placed at the bottom of the WebGrid.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RenderLocation">
            <summary>
            Enumeration used for setting the location where a plug-in renderer injects HTML.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInRender"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RenderLocation.Top">
            <summary>
            Render object at the top of the area
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RenderLocation.Bottom">
            <summary>
            Render object at the bottom of the area
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.HeaderClickAction">
            <summary>
            Indicates how a column or group header should react to being clicked.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.HeaderClickAction.NotSet">
            <summary>
            Use Default. The setting of the object's parent will be used (or 'Select' if not parent is set to default).
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.HeaderClickAction.Select">
            <summary>
            Select. Selects the column or group (based on the setting of the SelectTypeCol property).
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.HeaderClickAction.SortSingle">
            <summary>
            Single Selection Sort. Changes the sort indicator for the column after clearing all other columns' sort indicators.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.HeaderClickAction.SortMulti">
            <summary>
            Multiple Selection Sort. Changes the sort indicator for the column. If the shift key is pressed does not clear other columns sort indicators.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SelectType">
            <summary>
            Indicates the type of selection that is allowed for an object.
            </summary>
            <remarks>The SelectType is used by the selection modes to determine the selection behavior of the WebGrid.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SelectType.NotSet">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SelectType.None">
            <summary>
            None. Objects may not be selected.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SelectType.Single">
            <summary>
            Single Select. Only one object may be selected at any time.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SelectType.Extended">
            <summary>
            Extended Select. Multiple objects may be selected at once.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.Case">
            <summary>
            Indicates the case of text in a column.
            </summary>
            <remarks>Depending on the setting, the WebGrid will format the text of the cell to meet with this setting.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Case.Unchanged">
            <summary>
            Unchanged. Text appears as it was entered.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Case.Lower">
            <summary>
            Lower. All text appears as lowercase.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Case.Upper">
            <summary>
            Upper. All text appears as uppercase.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.CellClickAction">
            <summary>
            Indicates how a cell should react to being clicked.
            </summary>
            <remarks>
            The CellClickAction setting for the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> controls 
            the behavior of the WebGrid when various elements are clicked via the mouse.	
            <seealso cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</seealso>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellClickAction.NotSet">
            <summary>
            Use Default. The setting of the object's parent will be used (CellSelect if parent has no default.)
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellClickAction.Edit">
            <summary>
            Edit. Selects and highlights the cell that was clicked and puts it in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellClickAction.RowSelect">
            <summary>
            Row Select. Selects and highlights the entire row of the cell that was clicked.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellClickAction.CellSelect">
            <summary>
            Cell Select. Selects and highlights the cell that was clicked.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.Nullable">
            <summary>
            Indicates the way null values are stored.
            </summary>	
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Nullable.Automatic">
            <summary>
            Automatic. Data stored as null if allowed, otherwise as empty string.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Nullable.Null">
            <summary>
            Null. Data stored as null value.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Nullable.EmptyString">
            <summary>
            Empty String. Data stored as a zero-length string.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SortIndicator">
            <summary>
            Indicates the method used to sort a column.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SortIndicator.None">
            <summary>
            None. The column should not be sorted.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SortIndicator.Ascending">
            <summary>
            Ascending. The column should be sorted in ascending order.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SortIndicator.Descending">
            <summary>
            Descending. The column should be sorted in descending order.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SortIndicator.Disabled">
            <summary>
            Disabled. Sorting should be disabled for the column.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnType">
            <summary>
            Indicates the different column styles.
            </summary>
            <remarks>
            The ColumnType controls how the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> will render, showing different HTML Input controls
            depending on the setting of the ColumnType
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ColumnType.NotSet">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ColumnType.CheckBox">
            <summary>
            Checkbox. The cells in the column are represented by checkboxes.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ColumnType.DropDownList">
            <summary>
            DropDownList. The cells in the column are represented by a dropdown list, which has a small dropdown button that users 
            can click to display a dropdown list from which they can select an item.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ColumnType.Button">
            <summary>
            Button. The cells in the column are represented by a button.
            When the user clicks the button, the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ClickCellButton"/> event is generated.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ColumnType.HyperLink">
            <summary>
            HyperLink. The cells in the column are represented by a hyperlink. The hyperlink can be clicked to direct the user to a URL.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ColumnType.Custom">
            <summary>
            Custom. A custom editor control is used to edit this column. The ID of the control needs to be set in the EditorControlID property.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ValueListDisplayStyle">
            <summary>
            An enumeration for defining the value list style.
            </summary>
            <remarks>
            Inidicates which property of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/>
            will be displayed in each item of the dropdown list.
            This applies to the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection"/> collection associated with
            each <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> for various dropdown column styles.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ValueListDisplayStyle.NotSet">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ValueListDisplayStyle.DataValue">
            <summary>
            DataValue. Actual cell values are shown to the user.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ValueListDisplayStyle.DisplayText">
            <summary>
            DisplayText. Associated text values are shown to the user.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ViewType">
            <summary>
            Indicates the view type of the grid.
            </summary>
            <remarks>
            The ViewType of the WebGrid should be set before DataBinding so that the control can properly
            bind to the available data.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ViewType.Flat">
            <summary>
            Flat. The grid displays flat, or single-band data.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ViewType.Hierarchical">
            <summary>
            Hierarchical. The grid displays hierarchical, or multi-band data.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ViewType.OutlookGroupBy">
            <summary>
            OutlookGroupBy. The grid displays data in the OutlookGroupBy view style.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ShowBandLabels">
            <summary>
            Indicates how band labels are displayed in the GroupBy box.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ShowBandLabels.Default">
            <summary>
            Default. The None setting with single-band views and the IntermediateBandsOnly setting for multi-band views.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ShowBandLabels.All">
            <summary>
            All. Display all band labels.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ShowBandLabels.None">
            <summary>
            None. Do not display any band labels.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ShowBandLabels.AllWithGroupByColumnsOnly">
            <summary>
            AllWithGroupByColumnsOnly. Only display lables for bands for which there is a GroupBy column are displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ShowBandLabels.IntermediateBandsOnly">
            <summary>
            IntermediateBandsOnly. display labels for bands that are between the first band with a GroupBy column and the
            last band with a GroupBy column, including those bands.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AddNewBoxView">
            <summary>
            Defines how the AddNewBox is rendered.
            </summary>
            <remarks>This enumeration is used to set the <see cref="P:Infragistics.WebUI.UltraWebGrid.AddNewBox.View"/> value which determines how the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> will be rendered. </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AddNewBoxView.Full">
            <summary>
            Full. Displays a staggered appearance, with each Band button below the one before it, with right-angled connecting lines linking them.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AddNewBoxView.Compact">
            <summary>
            Compact. Displays a linear appearance, with each Band button to the right of the one before it, with straight connecting lines linking them.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SummaryInfo">
            <summary>
            Indicates column footer summary information.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SummaryInfo.Text">
            <summary>
            Text. The text of the column is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SummaryInfo.Sum">
            <summary>
            Sum. The sum of the column is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SummaryInfo.Avg">
            <summary>
            Avg. The average of the column is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SummaryInfo.Min">
            <summary>
            Min. The minimum value of the column is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SummaryInfo.Max">
            <summary>
            Max. The maximum value of the column is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SummaryInfo.Count">
            <summary>
            Count. The number of cells in the column is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SummaryInfo.Formula">
            <summary>
            Formula. Evaluates an UltraCalc formula assigned to the <b>Formula</b> property and displays calculation.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.CellButtonDisplay">
            <summary>
            Indicates when a cell's button is displayed.
            </summary>
            <remarks>Depending on what setting is used, the WebGrid will render differently.  With <b>OnMouseEnter</b> the WebGrid uses a single INPUT object and only shows it when the Focus is in the cell.
            With <b>Always</b>, each cell has an INPUT control rendered down for it.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellButtonDisplay.OnMouseEnter">
            <summary>
            OnMouseEnter. Only display the cell's button when the mouse enters the cell.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellButtonDisplay.Always">
            <summary>
            Always. Always display the cell's button.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UltraGridLines">
            <summary>
            Indicates grid lines.
            </summary>
            <remarks>
            The type of the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GridLines"/> property. Returns or sets a value that specifies which cell borders should be displayed for the grid.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridLines.NotSet">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridLines.None">
            <summary>
            None. Grid lines are not displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridLines.Horizontal">
            <summary>
            Horizontal. Only horizontal grid lines are displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridLines.Vertical">
            <summary>
            Vertical. Only vertical grid lines are displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridLines.Both">
            <summary>
            Both. Both horizontal and vertical grid lines are displayed.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.TableLayout">
            <summary>
            Indicates the layout of the grid.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.TableLayout.Auto">
            <summary>
            Column width is set by the widest unbreakable content in the column cells.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.TableLayout.Fixed">
            <summary>
            Table and column widths are set either by the sum of the widths on the column objects or, if these are not specified, by the width of the first row of cells. If no width is specified for the table, it renders by default with a width of 100%.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AllowSizing">
            <summary>
            Indicates types of column and row resizing.
            </summary>
            <remarks>Used for both both <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> and <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> resizing, this enumeration controls both how the object will render and how the user can interact.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowSizing.NotSet">
            <summary>
            Use Default. The setting of the object's parent will be used.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowSizing.Fixed">
            <summary>
            Fixed. Column or row resizing is not allowed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowSizing.Free">
            <summary>
            Free. Columns or rows can be resized by the user, with no effect on other columns or rows.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.DataChanged">
            <summary>
            Used for defining what kind of changes were made with a row.
            </summary>
            <remarks>
            The DataChanged value is assigned to an object by the WebGrid while returning from the client to the server.	
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.DataChanged.Unchanged">
            <summary>
            Use default value.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.DataChanged.Modified">
            <summary>
            Some cell values in the row were changed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.DataChanged.Added">
            <summary>
            A new row has been added.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.DataChanged.Deleted">
            <summary>
            Row has been marked for deletion.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.StationaryMargins">
            <summary>
            Used for defining which part or parts of the grid remain stationary while scrolling.
            </summary>
            <remarks>
            <p class="body">Either the <b>Header</b>, <b>Footer</b> or <b>Both</b> can be made stationary.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.StationaryMargins.No">
            <summary>
            Use default value
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.StationaryMargins.Header">
            <summary>
            Only the header is stationary.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.StationaryMargins.Footer">
            <summary>
            Only the footer is stationary.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.StationaryMargins.HeaderAndFooter">
            <summary>
            Both header and footer are stationary.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ExpandEffectType">
            <summary>
            Enumeration of the various types of transitioning supported by UltraWebGrid when showing expandable objects. The Duration property of the ExpandEffects object controls how long each of these effects takes to complete.
            </summary>
            <remarks>ExpandEffects are features of Microsoft's Internet Explorer browser and may not appear on alternate browsers.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ExpandEffectType.NotSet">
            <summary>
            No effect is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ExpandEffectType.Fade">
            <summary>
            The expandable object fades in to the page.   
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ExpandEffectType.Iris">
            <summary>
            The expandable object displays as an expanding area.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ExpandEffectType.Slide">
            <summary>
            The expandable object slides into view.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ExpandEffectType.RandomDissolve">
            <summary>
            The expandable object appears in a random pattern.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ExpandEffectType.GradientWipe">
            <summary>
            The expandable object appears gradually in a linear fashion.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ExpandEffectType.Pixelate">
            <summary>
            The expandable object appears gradually in a random fashion.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ReadOnly">
            <summary>
               Used for defining what level of additional content that will be inserted into final HTML code.
            </summary>
            <remarks>
            The WebGrid utilizies JavaScript in order to provide an active client side behavior model.  This JavaScript increases the 
            size of the page.  The <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ReadOnly">DisplayLayout.ReadOnly</seealso> of the 
            WebGrid can be set to the following levels to limit the amount of client side activity that will be allowed.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ReadOnly.NotSet">
            <summary>
            HTML is generated in full without any restrictions.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ReadOnly.LevelZero">
            <summary>
            No ViewState and no JavaScript are generated. The grid is completely passive.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ReadOnly.LevelOne">
            <summary>
            No ViewState is generated and minimum of JavaScript is generated. Functionality available includes: expand and collapse rows, change a column's width.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ReadOnly.LevelTwo">
            <summary>
            No ViewState is generated and minimum of JavaScript is generated. Functionality available includes: expand and collapse rows, change a column's width, and stationary margins.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ReadOnly.PrintingFriendly">
            <summary>
            Renders the WebGrid in a manner to allow for printing of the component.  The grid is completely passive.
            </summary>		
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.BorderCollapse">
            <summary>
            Used for defining whether the grid borders should collapse or not.
            </summary>
            <remarks>Reflected property of the HTML table. </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BorderCollapse.NotSet">
            <summary>
            Default value is used.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BorderCollapse.Collapse">
            <summary>
            Borders of the neighboring cells are collapsed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BorderCollapse.Separate">
            <summary>
            All borders are rendered as is.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AllowColumnMoving">
            <summary>
            Used for defining whether the grid columns can be moved or not.
            </summary>
            <remarks>The <b>AllowColumnMoving</b> property can be set on the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> on the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowColumnMovingDefault"/> property or 
            the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AllowColumnMoving"/> property of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowColumnMoving.NotSet">
            <summary>
            Default value is used.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowColumnMoving.None">
            <summary>
            No column moving is allowed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowColumnMoving.OnServer">
            <summary>
            Columns are moved on the server. A post back is required to display the new column order.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowColumnMoving.OnClient">
            <summary>
            Columns are moved on the client. No post back is required to display the new column order. 
            This mode is available only when XML rendering is on.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.TextOverflow">
            <summary>
            Used to specify how cell text should be handled when text wrapping is not enabled.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.TextOverflow.Clip">
            <summary>
            Default value - text is clipped at cell border.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.TextOverflow.Ellipsis">
            <summary>
            Text is clipped at cell border and ellipsis is shown where clipping occurs. (Internet Explorer 6 and above only).
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.LoadOnDemand">
            <summary>
             Enumeration of the types of Load On Demand styles supported.
             These property settings control the methods used to load rows into the grid.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.LoadOnDemand.NotSet">
            <summary>
            All rows are populated during a databind operation and expand images are only displayed for rows that have children. 
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.LoadOnDemand.Manual">
            <summary>
            The developer is responsible for populating the rows of the grid. The application populates an initial set of rows.
            For those rows that may have children added later, the <b>ShowExpand</b> property needs to be set to true by the developer.
            The grid then renders the row with an expand image next to it. If the user clicks the expand image to expand the row, 
            the <b>DemandLoad</b> event is fired on the server and the children of the node need to be populated by the developer.
            Using LoadOnDemand.Manual, it is necessary to have Band objects created for each level of Rows that may be expanded using 
            plus (+) images.  If there is no Band object for rows that may be expanded, the WebGrid will not display a plus sign next 
            to rows in the parent Band.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.LoadOnDemand.Automatic">
            <summary>
            The application databinds the grid using a dataset. Initially, only the rows at the top level of the hierarchy 
            are added to the grid. All Band 0 rows with children in the dataset are rendered with the <b>ShowExpand</b> 
            property set to true. When the user clicks a row expansion indicator, the page is posted back and the databind 
            is performed again. This time, the row that was expanded is also populated from the dataset. No unexpanded rows 
            are populated. Using the Automatic form of LoadOnDemand requires that DataBind() is called on each postback.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.LoadOnDemand.Xml">
            <summary>
            Xml HTTP requests are being performed whenever more rows are needed. There is also the XMLHttpRequest event fired 
            for every type of of the request. See also XmlHTTPRequestType enumeration.
            The UpdateRow event is fired for every updated row (XmlHTTPRequest is fired once for whole row whether it was updated 
            and/or added); if the row is updated on the server new information gets back to the client.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AllowEditing">
            <summary>
            Enumeration used for controlling whether cells can be edited on the client.
            </summary>
            <remarks>Used to directly control the editablility of an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowEditing.NotSet">
            <summary>
            When set to <b>NotSet</b> the editing of the cell is controlled by the <b>AllowUpdate</b> of the <b>Band</b> or the <b>AllowUpdateDefault</b> of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> object.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowEditing.Yes">
            <summary>
            When set to <b>Yes</b> editing of the cell will be allowed regardless of settings on other <b>Band</b> objects and despite the setting on the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> object.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AllowEditing.No">
            <summary>
            When set to <b>No</b> editing of the cell will be prohibited for this cell regardless of settings on other <b>Band</b> objects and despite the setting on the<see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">DisplayLayout</see> object.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ScrollBar">
            <summary>
            Enumeration used for controlling scrollbar appearance.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ScrollBar.Auto">
            <summary>
            Scroll bars appear automatically depending on the amount of data inside of the grid.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ScrollBar.Always">
            <summary>
            Scroll bars are always present. When no data is available beyoud the grid's borders the scroll bars are greyed out.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ScrollBar.Never">
            <summary>
            Scroll bars are not present.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ScrollBarView">
            <summary>
            Enumeration used for controlling scrollbar view.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ScrollBarView.Both">
            <summary>
            Both vertical and horizontal scroll bars are present.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ScrollBarView.Horizontal">
            <summary>
            Only horizontal scroll bar is present.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ScrollBarView.Vertical">
            <summary>
            Only vertical scroll bar is present.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.StyleContext">
            <summary>
            Enumeration describing supported contexts of the style resolution interface.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.WebUI.UltraWebGrid.IResolveStyles"/>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.StyleContext.Default">
            <summary>
            Resolve the most applicable context (determined automatically, if possible).
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.StyleContext.Cell">
            <summary>
            Resolve the default cell's style.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.StyleContext.Header">
            <summary>
            Resolve the column header's style.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.StyleContext.Footer">
            <summary>
            Resolve the column footer's style.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.TabDirection">
            <summary>
            Enumeration used for defining the direction in which the tab key moves through the cells in the grid.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.TabDirection.LeftToRight">
            <summary>
            Tab key moves focus from cell to cell in the left to right, top to bottom order (Shift+Tab reverses the way).
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.TabDirection.RightToLeft">
            <summary>
            Tab key moves focus from cell to cell in the right to left, bottom to top order (Shift+Tab reverses the way).
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.TabDirection.TopToBottom">
            <summary>
            Tab key moves focus from cell to cell in the top to bottom, left to right order (Shift+Tab reverses the way).
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.TabDirection.BottomToTop">
            <summary>
            Tab key moves focus from cell to cell in the bottom to top, right to left order (Shift+Tab reverses the way).
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FixedHeaderIndicator">
            <summary>
            Enumeration used for defining the fixed header's indicator presentation on the client.
            </summary>
            <remarks>The FixedHeaderIndicator setting will change what UI representation will be seen for the fixed column.  
            
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FixedHeaderIndicator.NotSet">
            <summary>
            Default value is used. It's inherited from the band the column belongs to.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FixedHeaderIndicator.None">
            <summary>
            Dont allow the user to fix or unfix the header.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FixedHeaderIndicator.Button">
            <summary>
            Display a button that allows the user to fix or unfix the header. Button also displays whether the header is fixed or not.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType">
            <summary>
            Enumeration used for defining the XmlHTTPRequest type fired from client to server.
            </summary>
            <remarks>
            The enumeration is used as the first parameter passed into the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.XmlHTTPRequest"/> event handler.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.None">
            <summary>
            Request is empty.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.LoadChildRows">
            <summary>
            Child rows are requested from the client.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.LoadMoreRows">
            <summary>
            More rows is requested from the client.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.Sort">
            <summary>
            Sorted data requested from the client.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.UpdateCell">
            <summary>
            Some cells is being updated on the client.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.AddNewRow">
            <summary>
            A new row is being added on the client.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.DeleteRow">
            <summary>
            A row is being deleted the client.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.UpdateRow">
            <summary>
            A row that is being updated on the client
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.Custom">
            <summary>
            A custom call through the grid structure.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.Page">
            <summary>
            A new page of data is requested.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.FilterDropFill">
            <summary>
            A request to fill the filter drop down box.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.Filter">
            <summary>
            A request to provide an updated dataset filtered with the new filter conditions.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType.Refresh">
            <summary>
            A request to provide an updated dataset filtered with the new filter conditions.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FixedColumnScrollType">
            <summary>
            Enumeration used for defining the type of the horizontal scrolling when the grid has fixed columns.
            </summary>
            <remarks>Fixed columns allows the viewer to keep certain columns in place while scrolling through the remaining columns.  This enumeration controls how the scrolling will appear on the client.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FixedColumnScrollType.Pixel">
            <summary>
            The grid is scrolled horizontally in a traditional way. The unit of scroll is one pixel.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FixedColumnScrollType.Delay">
            <summary>
            The grid starts to be scrolled horizontally when the user is either releasing the scroll 
            bar or stops scrolling for at least 250 millisecond. The unit of scroll is one pixel.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponseStatus">
            <summary>
            Enumeration used to signal whether the XmlHTTP execution on the server was completed successfully.  
            This determination must be made by user code and set by user code.	
            </summary>
            <remarks>
            After a XMLHTTP request this value is available on the client side in the  XMLHttpResponse client side event.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponseStatus.Success">
            <summary>
            Process has completed successfully
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponseStatus.Fail">
            <summary>
            An error has been detected and needs to inform the client of the issue
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FormulaRowIndexSource">
            <summary>
            Enum used for specifying FormulaRowIndexSource property.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FormulaRowIndexSource.Default">
            <summary>
            Default. Resolves to RowIndex.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FormulaRowIndexSource.RowIndex">
            <summary>
            Row's index in its parent rows collection. This is the index associated with <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Index"/> property.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowNumbering">
            <summary>
            Enumeration for the row numbering methodology used by the WebGrid.
            </summary>
            <remarks>
            Row Numbering numbers are based on the rows on the displayed grid, not the entire webgrid.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowNumbering.NotSet">
            <summary>
            Value is taken from higher level object. 
            This is only a valid option on the Band level.  Setting the DisplayLayout.AllowRowNumberingDefault to this value
            will be evaluated as setting it to None.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowNumbering.None">
            <summary>
            No row numbering will be done.  
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowNumbering.Continuous">
            <summary>
            Row numbering will increment for each row ignoring band depth as a discriminator. 
            In this mode, each row will receives a value that will be unique to the current page of the WebGrid.
            Continuous RowNumbering is not supported when the grid is in <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadOnDemand">LoadOnDemand</see>
            mode because the grid does not have all of the rows available. 
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowNumbering.ByDataIsland">
            <summary>
            Row numbering will reset for each data island.
            Values in a data island will be unique, however values may be repeated in data islands which are at the same band depth but
            have different parent rows.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowNumbering.ByBandLevel">
            <summary>
            Row numbering will increment with respect to band depth.
            Values will be unique within the same band depth level on the current page.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IndentationType">
            <summary>
            Enumeration for the IndentationType methodolgy used by the WebGrid.
            </summary>	
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.IndentationType.NotSet">
            <summary>
            Value is inherited from a higher level object.
            This is only a valid option on the Band level.  Setting the DisplayLayout.IndentationType to this value
            will be evaluated to setting it as Indented.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.IndentationType.Indented">
            <summary>
            Rows will be indented with respect to their parent object.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.IndentationType.Flat">
            <summary>
            Rows will not be indented with respect to their parent object.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.GroupByColumnsHidden">
            <summary>
            Enumeration for hiding the columns while they are grouped by.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.GroupByColumnsHidden.NotSet">
            <summary>
            Value is inherited from a higher level object.
            This is only a valid option on the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> level. 
            Setting the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.GroupByColumnsHiddenDefault"/> to this value
            will be evaluated to setting it as <b>Yes</b>.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.GroupByColumnsHidden.Yes">
            <summary>
            The columns will be hidden when grouped by.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.GroupByColumnsHidden.No">
            <summary>
            The columns won't be hidden when grouped by.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AddNewRowVisible">
            <summary>
            Defines the add new row visibility.
            </summary>
            <remarks>Controls whether or not the AddNewRow will be shown.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AddNewRowVisible.NotSet">
            <summary>
            The value is inherited fro the parent object. If top parent No is assumed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AddNewRowVisible.Yes">
            <summary>
            The add new row is visible.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AddNewRowVisible.No">
            <summary>
            The add new row is hidden.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AddNewRowView">
            <summary>
            Defines the add new row position
            </summary>
            <remarks>The AddNewRowView allows for greater control of where the AddNewRow will be shown.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AddNewRowView.NotSet">
            <summary>
            The value is inherited fro the parent object. If top parent, Bottom is assumed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AddNewRowView.Top">
            <summary>
            The add new row appears on the top of its row island.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.AddNewRowView.Bottom">
            <summary>
            The add new row appears on the bottom of its row island.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RenderDtdType">
            <summary>
            Enumeration used internally to track the HTML document type of page that the grid is on. 
            For internal use only. 
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RenderDtdType.Unknown">
            <summary>
            Either DTD is not set or grid is not able to establish the document type. 
            Possible reason for this is that the grid is on a user control or master page. 
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RenderDtdType.Html40Transitional">
            <summary>
            <a href="http://www.w3.org/TR/html401/sgml/loosedtd.html">HTML 4.0 transitional</a>
            document type
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RenderDtdType.Html40Frameset">
            <summary>
            <a href="http://www.w3.org/TR/html401/sgml/framesetdtd.html">HTML 4.0 frameset</a>
            documentation type
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RenderDtdType.Html40Strict">
            <summary>
            <a href="http://www.w3.org/TR/html401/sgml/dtd.html">HTML 4.0 strict</a> document
            type. 
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RenderDtdType.Xhtml10Transitional">
            <summary>
            <a href="http://www.w3.org/TR/xhtml1/dtds.html#a_dtd_XHTML-1.0-Transitional">XHTML 
            transitional</a> document type.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RenderDtdType.Xhtml11Strict">
            <summary>
            <a href="http://www.w3.org/TR/xhtml1/dtds.html#a_dtd_XHTML-1.0-strict">XHTML 
            strict</a> document type.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RenderDtdType.Other">
            <summary>
            A document type is found by not recognized. 
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RenderDtdType.DefaultMissing">
            <summary>
            The page has no doctype. 
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.XmlLoadOnDemandType">
            <summary>
            Defines the type of load on demand in which the rows are being brought to the client in the LoadOnDemand.Xml mode.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlLoadOnDemandType.Synchronous">
            <summary>
            Default behavior. The rows are being shown when they are requested. The top band's scroll bar is being 
            adjusted after the rows are appended.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlLoadOnDemandType.Portioned">
            <summary>
            The top band's scroll bar is rendered to accomodate all rows from the server. When it is scrolled 
            beyond the loaded amount of the rows the grid waits until all rows are fetched up to the point of 
            the scroll bar. The setting does not affect child rows.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlLoadOnDemandType.Virtual">
            <summary>
            The top band's scroll bar is rendered to accomodate all rows from the server. When it is scrolled 
            to the area where no rows were fetched yet the grid gets only visible rows window. Fetched rows 
            are being stored on the client and shown when next time the scroll bar is moved to the position. 
            The setting does not affect child rows, the mode is designed for the <b>ViewType.Flat</b> 
            view of the grid where rows will not be added.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlLoadOnDemandType.Background">
            <summary>
            The top band's scroll bar is rendered to accomodate all rows from the server. 
            The rows are being loaded asynchronously on the background. The Xml HTTP requests are being sent
            behind the scene one after another until all rows are present on the client. In case if the scroll
            bar moved ahead of loaded rows the grid will wait until the rows are loaded up to the point.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlLoadOnDemandType.Accumulative">
            <summary>
            This type is similar to <b>Synchronous</b>. The difference is that all rows that are fetched to 
            the client are being preserved through out all full post backs. This mode allows having the logic 
            dependent on interaction with the rows that are beyond the <b>RowsRange</b> reach. For example you 
            can successfully get to a selected row even if it is number 51 where RowsRange is set to 50.<br/>
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowFiltering">
            <summary>
            The RowFiltering value controls whether or not a given object allows for RowFiltering
            </summary>
            <remarks>
            The setting of the RowFiltering value to NotSet on the DisplayLayout object will be evaluated as No.  
            
            When using LoadOnDemand.Xml, setting RowFiltering to either OnClient or OnServer will execute a XmlHttp request for
            the rows based on the current filter settings.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowFiltering.NotSet">
            <summary>
            When set to NotSet, the object looks to it's parent objects to see what value was set on it and inherits that value. 
            The value of NotSet is not a valid selection on the DisplayLayout object and will be evaluated as No.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowFiltering.No">
            <summary>
            When set to No, the object will not allow for RowFiltering on the object or child objects which have their setting at NotSet.
            </summary>
            <remarks>This controls whether the user interface will allow row filtering.  Programmatic filters can still be set on the column.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowFiltering.OnClient">
            <summary>
            When set to OnClient, the filtering is done in the browser.
            </summary>
            <remarks>
            When using OnClient filtering, all the rows that would normally be provided on the client are provided 
            during any postback.  In normal operation this is expected.  In situations where the data returned on a postback 
            is restricted, i.e. Paging, LoadOnDemand.Auto, LoadOnDemand.Manual, rows that are filtered out are rendered down to the client
            marked as hidden so that they will not display initially.  This allows the filter to appropriately show the rows when the 
            filter is changed.
            
            These rows are marked hidden during the render phase of the WebGrid and are sent to the client.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowFiltering.OnServer">
            <summary>
            When set to OnServer, the filtering is done on the server via a postback.
            </summary>
            <remarks>
            When using OnServer rows are removed in a two stage process on the server.  First all bound column based values are removed
            during the DataBind pass through the data.  During the Render phase, a check is made to remove rows based on unbound column data.  Rows filtered out 
            in this mode are excluded from the HTML payload sent to the client.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowFilterMode">
            <summary>
            The RowFilterMode value controls what filter collection will be applied to the RowsCollection
            </summary>
            <remarks>
            The setting of the RowFiltering value to NotSet on the DisplayLayout object will be evaluated as ByRowIsland.  
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowFilterMode.NotSet">
            <summary>
            When set to NotSet, the object looks to it's parent objects to see what value was set on it and inherits that value. 
            The value of NotSet is not a valid selection on the DisplayLayout.FilterOptionDefault object and will be evaluated as SiblingRowsOnly.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowFilterMode.AllRowsInBand">
            <summary>
            When set to AllRowsInBand, the ColumnFilter collection of the UltraGridBand object is applied to the Rows of the Band
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowFilterMode.SiblingRowsOnly">
            <summary>
            When set to SiblingRowsOnly, the ColumnFiler collection on the containing RowCollection is applied to the RowCollection.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterComparisonType">
            <summary>
            Enum used for setting the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FilterComparisonType"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterComparisonType"/> properties.
            </summary>
            <remarks>This enumeration only holds true for string based values.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisonType.Default">
            <summary>
            The default filter comparison type. 
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisonType.CaseInsensitive">
            <summary>
            Filtering is performed without case sensitivity. 
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisonType.CaseSensitive">
            <summary>
            Filtering is performed with case sensitivity. 
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator">
            <summary>
            The FilterComparisonOperator controls what type of comparison will be done when filtering.
            </summary>
            <remarks>The DataType of the column will limit the effectiveness of some of the options.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.All">
            <summary>
            Include all rows in the collection.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.Empty">
            <summary>
            Filter in only items which have only whitespace values.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.NotEmpty">
            <summary>
            Filter in only items which aren't blank.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.Equals">
            <summary>
            Tests for two values being equal.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.NotEquals">
            <summary>
            Tests for two values being not equal.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.Like">
            <summary>
            Will do a wildcard comparision of the column's value to the comparision value
            taking comparision value as the string with wild cards.
            </summary>
            <remarks>This value will only be used by <seealso cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn">UltraGridColumn</seealso> objects with a DataType of System.String.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.NotLike">
            <summary>
            Complement of Like.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.LessThan">
            <summary>
            Tests for the column's value being less than the value.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.LessThanOrEqualTo">
            <summary>
            Tests for the column's value being less than or equal to the value.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.GreaterThan">
            <summary>
            Tests for the column's value being greater than the value.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.GreaterThanOrEqualTo">
            <summary>
            Tests for the column's value being greater than or equal to the value.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.StartsWith">
            <summary>
            Tests to see if the cell value starts with the operand.
            </summary>
            <remarks>This value will only be used by <seealso cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn">UltraGridColumn</seealso> objects with a DataType of System.String.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.DoesNotStartWith">
            <summary>
            Complement of StartsWith.
            </summary>
            <remarks>This value will only be used by <seealso cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn">UltraGridColumn</seealso> objects with a DataType of System.String.</remarks>        
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.EndsWith">
            <summary>
            Tests to see if the cell value ends with the operand.
            </summary>
            <remarks>This value will only be used by <seealso cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn">UltraGridColumn</seealso> objects with a DataType of System.String.</remarks>                		
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.DoesNotEndWith">
            <summary>
            Complement of EndsWith.
            </summary>
            <remarks>This value will only be used by <seealso cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn">UltraGridColumn</seealso> objects with a DataType of System.String.</remarks>		
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.Contains">
            <summary>
            Tests to see if the cell value contains the operand.
            </summary>
            <remarks>This value will only be used by <seealso cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn">UltraGridColumn</seealso> objects with a DataType of System.String.</remarks>		
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator.DoesNotContain">
            <summary>
            Complement of Contains.
            </summary>
            <remarks>This value will only be used by <seealso cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn">UltraGridColumn</seealso> objects with a DataType of System.String.</remarks>		
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ShowFilterString">
            <summary>
            ShowFilterString determines if the basic filter string are included in the dropdown.
            </summary>
            <remarks>
            The WebGrid filtering mechanism will include special strings for special cases of filtering.  These values
            are used to control what is shown.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ShowFilterString.NotSet">
            <summary>
            When NotSet, the value of the parent object is used.  If NotSet is evaluated at the topmost parent
            then the value will be evaluated as Yes.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ShowFilterString.No">
            <summary>
            The string will not be included in the dropdown
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ShowFilterString.Yes">
            <summary>
            The string will be included in the dropdown.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.CellTitleMode">
            <summary>
            Enum with values representing different ways of generating the HTML Title attribute of elements.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellTitleMode.NotSet">
            <summary>
            No setting.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellTitleMode.Always">
            <summary>
            Always use the Title attribute.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellTitleMode.OnOverflow">
            <summary>
            Only use the Title attribute when not enough space is available to display text within the element.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.CellTitleMode.Never">
            <summary>
            Never use the Title attribute.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.GridStyleRole">
            <summary>
            Enumerates style roles
            </summary>
            <remarks>The enumeration is used to assign the roles to styles and manipulate them better.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SortingAlgorithm">
            <summary>
            Sorting algorithm to use on the grid, a band, or a column.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SortingAlgorithm.NotSet">
            <summary>
            Inherits value from the parent object - for columns from the band, for bands 
            from the <b>DisplayLayout</b>. If set on the <b>DisplayLayout</b> it defaults to the <b>QuickSort</b> logic.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SortingAlgorithm.QuickSort">
            <summary>
            Directs sorting of rows to use the quick sort algorithm. 		
            </summary>
            <remarks>Rows with equal values maybe shuffled while using this sort.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SortingAlgorithm.BubbleSort">
            <summary>
            Directs sorting of rows to use the bubble sort algorithm.		
            </summary>
            <remarks>Rows with equal values are not shuffled while using this sort.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SortingAlgorithm.InsertionSort">
            <summary>
            Directs sorting of rows to use the insertion sort algorithm.		
            </summary>
            <remarks>Rows with equal values are not shuffled while using this sort.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SortingAlgorithm.BinaryTreeSort">
            <summary>
            Directs sorting of rows to use the binary tree sort algorithm.		
            </summary>
            <remarks>Rows with equal values are not shuffled while using this sort.</remarks>		
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.SortingAlgorithm.Custom">
            <summary>
            Directs sorting of rows to use a custom sort algorithm. 
            The algorithm must be provided via the <b>SortImplementation</b> on 
            the object that controls the sorting: <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SortImplementation"/> 
            for the <b>DisplayLayout</b>, <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortImplementation"/> for the band, and
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortImplementation"/> for the column.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterUIType">
            <summary>
            The FilterUIType is used to control what visual mechanism the WebGrid will allow for RowFiltering.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterUIType.Default">
            <summary>
            When set to Default, the FilterUIType will evaluate out to the setting of a parent object.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterUIType.FilterRow">
            <summary>
            FilterRow will use an extra blank row on the WebGrid to allow the user to enter in values in order to filter the data        
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterUIType.HeaderIcons">
            <summary>
            HeaderIcons can be used to allow for simple drop down filtering on the WebGrid.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowLocation">
            <summary>
            Defines the position of a feature row, a row that isn't in the WebGrid to store data but rather to allow an action to take place on the data.
            </summary>
            <remarks>The FeatureRowView allows for greater control of where the FeatureRow will be shown.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowLocation.NotSet">
            <summary>
            The value is inherited from the parent object. If top parent, Top is assumed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowLocation.Top">
            <summary>
            The feature row appears on the top of its row island.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowLocation.Bottom">
            <summary>
            The feature row appears on the bottom of its row island.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterEvaluationTrigger">
            <summary>
            Used to determine when the Filtering should be executed when using the FilterRow feature.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterEvaluationTrigger.NotSet">
            <summary>
            NotSet is resolved to OnCellValueChange.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterEvaluationTrigger.OnLeaveCell">
            <summary>
            Filter input typed into a filter cell is applied when the cell is left.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.FilterEvaluationTrigger.OnCellValueChanged">
            <summary>
            Filter input typed into a filter cell is applied as characters are typed.
            </summary>
            <remarks>When this option is selected, the WebGrid will evaluate System.String based columns as the text changes.  Non string columns will still be evaluated as OnLeaveCell</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.BindingOption">
            <summary>
            Indicates what to bind for the grid
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BindingOption.Default">
            <summary>
            Default binding should be performed (columns and rows)
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BindingOption.ColumnsOnly">
            <summary>
            Only columns should be bound to
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.BindingOption.RowsOnly">
            <summary>
            Only rows should be bound to
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UltraGridEventArgs">
            <summary>
            The base class for UltraWebGrid events. 
            </summary>
            <remarks>It includes a Cancel property which allows the processing of the event to be stopped.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridEventArgs.Cancel">
            <summary>
            Property that allows processing of the event to be canceled.
            </summary>
            <remarks>
            Setting the value to True stops execution of the current event firing.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SelectedRowsEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve the selection of rows.
            </summary>
            <remarks>A subclass of UltraGridEventArgs, this is a cancelable event.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SelectedRowsEventArgs.SelectedRows">
            <summary>
            The SelectedRows of the WebGrid.
            </summary>
            <remarks>The collection provided contains all the selected rows for the WebGrid at the time of evaluation.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SelectedColumnsEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve the selection of columns.
            </summary>
            <remarks>A subclass of UltraGridEventArgs, this is a cancelable event.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SelectedColumnsEventArgs.SelectedColumns">
            <summary>The SelectedColumns for the WebGrid</summary>
            <remarks>The collection provided contains all the selected columns for the WebGrid at the time of evaluation.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SelectedCellsEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve the selection of cells.
            </summary>
            <remarks>A subclass of UltraGridEventArgs, this is a cancelable event.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SelectedCellsEventArgs.SelectedCells">
            <summary>The SelectedCells for the WebGrid</summary>
            <remarks>The collection provided contains all the selected cells for the WebGrid at the time of evaluation.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve changes to rows.
            </summary>
            <remarks>
            Contains information relevant to the event context.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowEventArgs.Row">
            <summary>
            Returns the Row object associated with the event.
            </summary>
            <remarks>When using <see cref="T:Infragistics.WebUI.UltraWebGrid.LoadOnDemand">LoadOnDemand.Xml</see>, the row object may not have access
            to neighboring rows.  The design of LoadOnDemand.Xml tries to mimimize the amount of information bound to and processed.  This limits the amount of 
            data bound to at any given time.		
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowEventArgs.Data">
            <summary>
            Returns the Data object associated with the event.
            </summary>
            <remarks>This property exposes extra data for this event.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve changes to columns.
            </summary>
            <remarks>
            Contains information relevant to the event context.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnEventArgs.Column">
            <summary>
            Returns the Column object associated with the event.
            </summary>
            <remarks>ReadOnly access to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object for the event.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnEventArgs.Data">
            <summary>
            Returns the Data object associated with the event.
            </summary>
            <remarks>Depending on the event, this data signifys differnt information.  </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnMoveEventArgs">
            <summary>
            Event argument object for the <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnMoveEventHandler"></see>
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnMoveEventArgs.FromIndex">
            <summary>
            The original index of the UltraGridColumn
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnMoveEventArgs.ToIndex">
            <summary>
            The final index of the UltraGridColumn
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.CellEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve changes to cells.
            </summary>
            <remarks>
            Utilized in <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCell"/> and <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCellBatch"/> this argument object
            provides information on the cell being acted on.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellEventArgs.Cell">
            <summary>
            Returns the Cell object associated with the event.
            </summary>
            <remarks>This is the cell as it is in it's <b>Row</b>.  The current WebGrid may not be the entire WebGrid depending on whether or not this is an <see cref="T:Infragistics.WebUI.UltraWebGrid.LoadOnDemand"/>.Xml based WebGrid.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.CellEventArgs.Data">
            <summary>
            Returns the Data object associated with the event.
            </summary>
            <remarks>During the Update events, this contains the old value of the cell. </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.PageEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve paging.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.PageEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor of the object
            </summary>
            <param name="newPageIndex">New page index to be changed to.</param>
            <param name="oldPageIndex">Old page index.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.PageEventArgs.NewPageIndex">
            <summary>
            The index of the new page that has been selected.  This value is the same as the Pager.CurrentPageIndex property.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.PageEventArgs.OldPageIndex">
            <summary>
            The index of the page that was previously displayed.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SortColumnEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve column sorting.
            </summary>
            <remarks>
            Contains information relevant to the event context.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SortColumnEventArgs.BandNo">
            <summary>
            The index of the Band in which the sorting is taking place. -1 if multiple sorting is done on the client.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SortColumnEventArgs.ColumnNo">
            <summary>
            The index of the Column in which the sorting is taking place. -1 if multiple sorting is done on the client.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SortColumnEventArgs.ShiftKey">
            <summary>
            Shows if the shift key is pressed while the header is clicked.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.LayoutEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve layout initialization.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.LayoutEventArgs.Layout">
            <summary>
            A reference to the DisplayLayout object of UltraWebGrid.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.BandEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve band initialization.
            </summary>
            <remarks>Currently only used in the InitializeBand event, allows access to the band currently being initialized.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.BandEventArgs.Band">
            <summary>
            A reference to the Band object that the event applies to.
            </summary>
            <remarks>The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object for which the event is invoked.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FooterEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve footers.
            </summary>
            <remarks>Currently the only event that involves footers is the InitializeFooter event.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FooterEventArgs.Rows">
            <summary>
            A reference to the rows collection that the event applies to.  
            </summary>
            <remarks>The rows collection forms a data island to which the footer is being applied.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UpdateEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve cell updates.
            </summary>
            <remarks>
            Contains information relevant to the event context.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UpdateEventArgs.Grid">
            <summary>
            A reference to the grid to which the event applies.
            </summary>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ClickEventArgs">
            <summary>
            Event arguments that are passed to event handlers that involve mouse clicks.
            </summary>
            <remarks>Almost all objects can respond to a click event, which could cause many postbacks to be executed.  
            The individual properties of this object may not be populated for every usage of this object as a <b>UltraGridRow</b> can 
            be clicked without having a <b>UltraGridColumn</b> being in the parameters.
            
            Since the Click event is thrown in response for mutiple objects, only the originating object is set on the event argument.  For example,
            if a UltraGridCell is clicked, even though the UltraGridRow and UltraGridColumn references for that cell can be passed in the argument, they are left out, so that it can be detected by the 
            user handler that a UltraGridCell object caused the event.   
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClickEventArgs.Row">
            <summary>
            Returns the Row object associated with the event. 		
            </summary>
            <remarks>If the click event does not occur over a row, this property will be null.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClickEventArgs.Column">
            <summary>
            Returns the Column object associated with the event. 
            </summary>
            <remarks>If the click event does not occur over a column or column header, this property will be null.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ClickEventArgs.Cell">
            <summary>
            Returns the Cell object associated with the event. 
            </summary>
            <remarks>If the click event does not occur over a cell, this property will be null.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs">
            <summary>
            Event arguments that are passed to event handlers for the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.XmlHTTPRequest"/> event.
            </summary>
            <remarks>
            The object is used to provide information about the out-of-band callback from the client.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs.Type">
            <summary>
            Returns the type of request.
            </summary>
            <remarks>
            Properties that are used for different types:
            LoadChildRows - Band, RowNo and RowDataKey. The number and data key is for the row which child rows are being requested.
            LoadMoreRows - Band and RowNo. The band is always band 0. RowNo is the first row number that is being requested.
            Sort - Band and Column which is being sorted, Data is the shift key state, should be cast to bool.
            UpdateCell - Band, Column, RowNo, RowDataKey and Data. The column defines the cell in the row that is being edited. Data contains new cell value.
            AddNewRow - Band, RowNo and RowDataKey. Band is the band to which a row is being added, row number and data key are the parent row's number and data key, not defined if it's the top level.
            DeleteRow - Band, RowNo and RowDataKey.
            UpdateRow - Band, RowNo and RowDataKey.
            Custom - Data.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs.Band">
            <summary>
            Returns the Band object associated with the event.
            </summary>
            <remarks>
            Set by the grid while the event is processed. Indicates the band the event is fired for if applicable. Otherwise the property is null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs.Column">
            <summary>
            Returns the Column object associated with the event. If the request does not involve any column this property is null.
            </summary>
            <remarks>
            Set by the grid while the event is processed. Indicates the column the event is fired for if applicable. Otherwise the property is null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs.RowNo">
            <summary>
            Returns the number of the row associated with the event. If the request does not involve any row this property is -1.
            </summary>
            <remarks>
            Set by the grid while the event is processed. Indicates the row the event is fired for if applicable. Otherwise the property is -1.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs.RowDataKey">
            <summary>
            Returns the data key of the row associated with the event. If the request does not involve any row or the data key cannot be determined this property is null.
            </summary>
            <remarks>
            Set by the grid while the event is processed. Indicates the row the event is fired for if applicable. Otherwise the property is null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs.Data">
            <summary>
            Additional data associated with the request.
            </summary>
            <remarks>
            Set by the grid while the event is processed. Provides additional data to the event handler if applicable. Otherwise the property is null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs.DataKeyArray">
            <summary>
            Returns the data key in array form.   Used primarily with compound key values. 
            </summary>
            <remarks>
            Set by the grid while the event is processed. Indicates the compound data key of the row the event is fired for if applicable. Otherwise the property is null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs.Cancel">
            <summary>
            This property is for informational purpose only. It is not supposed to cancel the server side event.
            </summary>
            <remarks>
            Setting the value to True will notify the client side that the event is being canceled so the application developer on the client could do proper actions.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ActiveCellChangeEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveCellChange"/> event, which is generated when the active cell is about to be changed.
            </summary>
            <remarks>
            <p class="body">This event occurs when the control must change the active cell, either due to user activity or in response to a directive in code, such as setting the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveCell"/> property.</p>
            <p class="body">Note that changes to the active row may also cause the active cell to change. The <see cref="T:Infragistics.WebUI.UltraWebGrid.ActiveRowChangeEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveRowChange"/> event, which is generated when the active row is about to be changed.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.CellEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ActiveRowChangeEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveRowChange"/> event, which is generated when the active row is about to be changed.
            </summary>
            <remarks>
            <p class="body">This event occurs when the control must change the active row, either due to user activity or in response to a directive in code, such as setting the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveRow"/> property.</p>
            <p class="body">Note that changes to the active cell may also cause the active row to change. The <see cref="T:Infragistics.WebUI.UltraWebGrid.ActiveCellChangeEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveCellChange"/> event, which is generated when the active cell is about to be changed.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AddRowEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRow"/> event, which is generated when a new row is about to be added to the grid.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.AddRowEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRow"/> event, which is generated when a row is about to be added.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.AddRowBatchEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRowBatch"/> event, which is generated when one or more new row(s) is about to be added to the grid.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.AddRowBatchEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRowBatch"/> event, which is generated when a row is about to be added.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ClickCellButtonEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ClickCellButton"/> event.
            </summary>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.CellEventArgs"/> object containing additional information associated with the event.</param>
            <remarks>The <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ClickCellButton"/> can be raised on the server when by clicking a button in a <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> that is part of a <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> with a <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnType"/> of <B>Button</B>.
            <p>It will not be raised for a button injected into the WebGrid inside of a TemplatedColumn.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ClickEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Click"/> event. 
            </summary>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClickEventArgs"/> object containing additional information associated with the event.</param>
            <remarks>Generated when a row, a column or a cell is clicked, this event needs to be used carefully as all objects will respond to click events.  This could cause almost all user actions
            to cause postbacks, degrading perceived performance.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.CollapseRowEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CollapseRow"/> event, which is generated when a row is about to be collapsed.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.ExpandRowEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ExpandRow"/> event, which is generated when a row is about to be expanded.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnMoveEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ColumnMove"/> event, which is generated when the column is being moved.
            </summary>
            <remarks>Used when <see cref="T:Infragistics.WebUI.UltraWebGrid.AllowColumnMoving"/> is set to <b>OnServer</b></remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnSizeChangeEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ColumnSizeChange"/> event, which is generated when the width of a column is being changed.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.RowSizeChangeEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RowSizeChange"/> event, which is generated when the height of a row is being changed.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.DblClickEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DblClick"/> event.
            </summary>
            <remarks>
            The DblClickEvent can be generated when a row, a column or a cell is double clicked.
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.ClickEventArgs"/> object containing additional information associated with this click event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.DeleteRowEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DeleteRow"/> event, which is generated when a row is about to be deleted.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.AddRowEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRow"/> event, which is generated when a new row is about to be added to the grid.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.DeleteRowBatchEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DeleteRowBatch"/> event, which is generated when a row is deleted on a post back.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.AddRowEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRow"/> event, which is generated when a new row is about to be added to the grid.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ExpandRowEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ExpandRow"/> event, which is generated when a row is about to be expanded.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.CollapseRowEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CollapseRow"/> event, which is generated
            when a row is about to be collapsed.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.GroupColumnEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GroupColumn"/> event, which is generated when a column is about to be grouped.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.UnGroupColumnEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UnGroupColumn"/> event, which is generated when a column is about to be ungrouped.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.InitializeBandEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeBand"/> event, which is generated when a band needs to be configured during data binding.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.InitializeBandEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeBand"/> event, which is generated when a band needs to be configured during data binding.  Handling this event provides the opportunity to control further databinding to child bands. The <b>ChildBandColumn</b> property of the Band can be set to indicate which column name or relation name to use in the datasource for creating the rows of the child band. If "NoChildBand" is specified, the databinding will stop at the level of the current band even if child enumerations are present in the data source.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.BandEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.InitializeDataSourceEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeDataSource"/> event, which is generated
            when the grid is being data bound.
            </summary>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridEventArgs"/> object containing additional information associated with the event.
            Starting version 20061 the parameter can be cast to the <see cref="T:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs"/> object
            to take advantage of the new properties provided off of it to enable the grid's custom binding to a data window during the
            out-of-band HTTP requests.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.XmlHTTPRequest"/> event, which is generated
            when a request is sent from the client to server.
            </summary>
            <remarks>
            The event is fired every time an out-of-band callback is send from the client to the server. The <see cref="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs.Type"/> property of the <see cref="T:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs"/> object shows what kind of the callback is being fired.
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.InitializeFooterEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeFooter"/> event, which is generated
            when footers need to be configured during data binding.
            </summary>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to a FooterEventArgs object that holds a reference to the footer row.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.InitializeLayoutEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeLayout"/> event, which is generated
            when the grid's layout needs to be initialized during data binding.
            </summary>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.LayoutEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.InitializeRowEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeRow"/> event, which is generated
            when a row needs to be initialized during data binding.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.InitializeBandEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeBand"/> event, which is generated
            when a band needs to be initialized during data binding.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.InitializeGroupByRowEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeGroupByRow"/> event, which is generated
            when a group by row needs to be initialized during its creation.
            </summary>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.PageIndexChangedEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.PageIndexChanged"/> event, which is generated
            when a new page of data is about to be displayed when paging is enabled.
            </summary>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.PageEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowSizeChangeEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RowSizeChange"/> event, which is generated
            when the height of a row is being changed.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnSizeChangeEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ColumnSizeChange"/> event, which is generated
            when the width of a column is being changed.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SelectedCellsChangeEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedCellsChange"/> event, which is generated
            when a cell or cells in the grid are about to be selected or unselected.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedColumnsChangeEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedColumnsChange"/> event, which is generated
            when a column or columns in the grid are about to be selected or unselected.</p>
            <p class="body">Simalarly, the <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedRowsChangeEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedRowsChange"/> event, which is generated
            when a row or rows in the grid are about to be selected or unselected.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedCellsEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SelectedColumnsChangeEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedColumnsChange"/> event, which is generated
            when a column or columns in the grid are about to be selected or unselected.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedCellsChangeEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedCellsChange"/> event, which is generated
            when a cell or cells in the grid are about to be selected or unselected.</p>
            <p class="body">Simalarly, the <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedRowsChangeEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedRowsChange"/> event, which is generated
            when a row or rows in the grid are about to be selected or unselected.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedColumnsEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SelectedRowsChangeEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedRowsChange"/> event, which is generated
            when a row or rows in the grid are about to be selected or unselected.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedCellsChangeEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedCellsChange"/> event, which is generated
            when a cell or cells in the grid are about to be selected or unselected.</p>
            <p class="body">Simalarly, the <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedColumnsChangeEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedColumnsChange"/> event, which is generated
            when a row or rows in the grid are about to be selected or unselected.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedRowsEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SortColumnEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SortColumn"/> event, which is generated
            when a column is about to be sorted.
            </summary>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.SortColumnEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UnGroupColumnEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UnGroupColumn"/> event, which is generated
            when a column is about to be ungrouped.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupColumnEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GroupColumn"/> event, which is generated
            when a column is about to be grouped.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UpdateGridEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateGrid"/> event, which is generated
            when the grid is updated, meaning the value of a cell or cells changed, or rows were added or deleted.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.UpdateGridEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateGrid"/> event, which is generated
            when the grid is updated, meaning the value of a cell or cells changed, or rows were added or deleted. The event cannot be canceled.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UpdateEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UpdateCellEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCell"/> event, which is generated
            when a cell's value is updated.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.UpdateCellEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCell"/> event, which is generated
            when a cell's value is updated. The event cannot be canceled, but the e.Data parameter contains the old cell value which can be returned back at this point.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.CellEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UpdateCellBatchEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCellBatch"/> event, which is generated
            when a cell's value is about to be updated.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.UpdateCellEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCellBatch"/> event, which is generated
            when a cell's value is updated. The event cannot be canceled, but the e.Data parameter contains the old cell value which can be returned back at this point.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.CellEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UpdateRowEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRow"/> event, which is generated
            when a rows' values are updated. Handling the event will force a post back from the client.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.UpdateRowEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRow"/> event, which is generated
            when a rows' values are updated. The event can be canceled; the e.Data parameter contains the old row object with cell values that were there before the update.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UpdateRowBatchEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRowBatch"/> event, which is generated
            when a rows' values are updated. Handling the event will not force a post back from the client.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.UpdateRowBatchEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRowBatch"/> event, which is generated
            when a rows' values are updated. The event can be canceled; the e.Data parameter contains the old row object with cell values that were there before the update.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterPopulatingEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.FilterPopulated"/> event, which is generated
            when a filter action is taking place so that the dropdown values can be populated.
            </summary>
            <remarks>This event is only used by the Grid when doing an XmlHttp request to populate the DropDown.  This is so when LoadOnDemand.Xml is used.</remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterPopulatedEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.FilterPopulated"/> event, which is generated
            after the filter list is populated.
            </summary>
            <remarks></remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowFilterApplyingEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RowFilterApplying"/> event, which is generated
            after the filter list is populated by before the rows are processed.
            </summary>
            <remarks>This event is only used by the Grid when doing an XmlHttp request to populate the DropDown.  This is so when LoadOnDemand.Xml is used.</remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowFilterAppliedEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RowFilterApplied"/> event, which is generated
            after the rows are processed.
            </summary>
            <remarks></remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.DemandLoadEventHandler">
            <summary>
            Event handler for DemandLoad events.
            </summary>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
            <remarks>This event is thrown when the WebGrid's <see cref="T:Infragistics.WebUI.UltraWebGrid.LoadOnDemand"/> is set to <b>Manual</b>.  This is not used when it is set to <b>Xml</b>.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.TemplatedColumnRestoredEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.TemplatedColumnRestored"/> event, which is generated
            when a Templated column is restored from postback.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.TemplatedColumnRestoredEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.TemplatedColumnRestored"/> event, which is generated 
            when a column is restored from postback. The event cannot be canceled.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the	event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnEventArgs"/>
            object containing the recently restored column.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.MoveRowEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.MoveRow"/> event, which is generated when a row is moved inside its collection.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.MoveRowEventHandler"/> delegate handles the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.MoveRow"/> event, which is generated when a row is moved inside its collection.</p>
            </remarks>
            <param name="sender">A reference to the grid that generated the event.</param>
            <param name="e">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowEventArgs"/> object containing additional information associated with the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ItemCommandEventHandler">
            <summary>
            Delegate that handles the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ItemCommand"/> event, which is generated when a control inside of the UltraWebGrid causes a postback
            </summary>
            <param name="sender">The UltraWebGrid which contains the control</param>
            <param name="e">The UltraWebGridCommandEventArgs which contains information about the event.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UltraWebGridCommandEventArgs">
            <summary>
            The UltraWebGridCommandEventArgs class contains information related to the ItemCommand generated by the grid.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGridCommandEventArgs.InnerCommandEventArgs">
            <summary>
            A reference to the original event argument object which caused the postback.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGridCommandEventArgs.CommandSource">
            <summary>
            A reference to the original object which created the event.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGridCommandEventArgs.ParentControl">
            <summary>
            A reference to the control that contains the control which fired the event.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterDropDownEventArgs">
            <summary>
            The FilterDropDownEventArgs is used during events which handle the population of the Filter Drop Down
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterDropDownEventArgs.Column">
            <summary>
            The Column that the Filter DropDown is being populated against.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterDropDownEventArgs.ParentRowDataKey">
            <summary>
            The DataKey of the ParentRow
            </summary>
            <remarks>This value is only set when using <b>RowFilterMode.SiblingRowsOnly</b> and the filter drop down
            being requested is on a child band. When using using <b>RowFilterMode.AllRowsInBand</b> the individual child bands
            all share the same drop down and when on band zero, there is no parent row.
             </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterDropDownEventArgs.WorkingListValues">
            <summary>
            The working list is the list of filters that will be returned to the client.  
            </summary>
            <remarks>By using a ValueListCollection seperate value - text pairs can be used to represent data.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterDropDownEventArgs.Handled">
            <summary>
            When set this value prevents the WebGrid from auto populating the dropdown
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterEventArgs">
            <summary>
            The FilterEventArgs object is used during filter events to pass context sensitive information for the event.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterEventArgs.ActiveColumnFilter">
            <summary>
            The ColumnFilter object that is currently being evaluated on.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterEventArgs.AppliedFilterCondition">
            <summary>
            The FilterCondition object that is being evaluated.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs">
            <summary>
            Passed into the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeDataSource"/> event
            The default event argument has to be cast to this object to expose extra properties available. 
            </summary>
            <remarks>.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs.Grid">
            <summary>
            A reference to the grid that has fired the event.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs.EnablePartialDataBinding">
            <summary>
            Indicates if the data source provided is customized to be used from the top.
            </summary>
            <remarks>
            The property has to be set to <b>true</b> from within the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeDataSource"/> 
            event. It should be used
            during a Xml HTTP request to provide to the grid only those rows from the data source that are 
            actually required to complete the request. For example having a data source with enormous amount of rows
            would not be very effitioent to select them all an provide to the grid. In such a case the property 
            can be set to <b>true</b> and depending on the <see cref="P:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs.CurrentRowCount"/> property and current sorting
            condition only row set in the amount of the <see cref="P:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs.DataPortionSize"/> can be provided.
            Using that property the grid will determine that provided record set should be bound to starting from 
            the top row up to the end of the set or to the <b>DataPortionSize</b> amount
            whichever is shortest.<br/>
            The property is not stored into the view state and therefore has to be set on every post back.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs.CurrentRowCount">
            <summary>
            Indicates the number of rows the grid has been bound to during the XML HTTP requests.
            </summary>
            <remarks>
            Available only during Xml HTTP requests. Can be queried to provide a custom record 
            set in conjunction with the <see cref="P:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs.EnablePartialDataBinding"/> property.<br/>
            The property is a read-only.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs.CompleteRowCount">
            <summary>
            Indicates total number of rows in the data source.
            </summary>
            <remarks>
            Available only during Xml HTTP requests. Can be queried to provide a custom record 
            set in conjunction with the <see cref="P:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs.EnablePartialDataBinding"/> property.<br/>
            The property at the same time as the <b>CustomBind</b> property set this property has to be set to an actual
            number of rows available off of the data set. In the cases where this number cannot be determined it can be
            simply set to <see cref="P:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs.CurrentRowCount"/>+<see cref="P:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs.DataPortionSize"/>+1 just to indicate to the grid that there 
            are more rows to bind to.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.DataSourceEventArgs.DataPortionSize">
            <summary>
            The number of rows that are retrieved at a time when the XML rendering is in progress.
            </summary>
            <remarks>
            This property is responsible for the rows payload from server to client when the XML rendering is used. Applies to Band 0 only.
            The rows range equals to the number of rows that are brought from server to client per each HTTP XML request.
            Initial number of rows and number of requested rows during scrolling depends on this value.
            Default value is 50. Value of -1 means no restriction on the rows payload are applied. This property is a reflection of the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowsRange"/> property.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ExpandEffects">
            <summary>
            This object encapsulates the Internet Explorer Transitions functionality that UltraWebGrid's expandable objects expose.
            </summary>
            <remarks>ExpandEffects are provided through Microsoft's Internet Explorer web browser.  These settings may have no effect in other browsers which do not expose a client side API to perform these functions.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ExpandEffects.#ctor">
            <summary>
            Returns a reference to the ExpandEffects object for the Grid control.
            </summary>
            <remarks>
            <p class="body">The ExpandEffects object encapsulates the settings of the expansion effects that can be applied to expandable objects. You can use this object to specify an effect such as Fade In, Iris, Slide, Gradient Wipe or Pixelate. This object also contains properties for controlling the effects that will be applied during the transition, such as delay and duration, and that will be applied to the expandable objects during and after the transition, such as opacity and drop shadow.</p>
            <p class="body">The transition effects applied to the expandable objects rely on the transition features built into Internet Explorer version 5 or greater. These settings are ignored in down-level browsers or any version of Netscape. The visual effects are also operating system dependant, and may not be available on all systems.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ExpandEffects.CopyFrom(Infragistics.WebUI.UltraWebGrid.ExpandEffects)">
            <summary>
            Applies the attributes of an existing ExpandEffects object to the current ExpandEffects object, using the property categories specified.
            </summary>
            <remarks>
            <p class="body">Invoke this method to copy some or all of an existing object's property settings to another object of the same type.</p>
            <p class="body">By default, all the properties of the object are copied. You can also specify that only certain categories of properties should be copied form the one object to the other. Multiple categories can be copied by combining them using logical <b>Or</b>.</p>
            </remarks>
            <param name="source">The ExpandEffects object to be copied.</param>
            <returns>A reference to this object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ExpandEffects.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ExpandEffects"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the Band class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the ExpandEffects object will return False until set again.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ExpandEffects.ToString">
            <summary>
            Returns a string representation of the ExpandEffects object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned. The <b>ExpandEffects</b> object will return an empty string.</p>
            </remarks>
            <returns>The empty string.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.Type">
            <summary>
            Specifies the type of expansion effect that will be applied to an expandable object whenever it is displayed.
            </summary>
            <remarks>
            <p class="body">Various transition effects are avialable in Internet Explorer version 5 or greater. These transitions may be applied to expandable objects to create expansion effects. Expansion effects are not supported in Netscape or down-level browsers, and may also depend on operating system factors.</p>
            <p class="body">If <b>Type</b> is set to ExpandEffectType.NotSet, no transition is applied to the expandable object's appearance on-screen; the expandable object simply appears in its entirety. However other settings of the ExpandEffects object, such as <see cref="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.Delay"/>, <see cref="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.Opacity"/>, <see cref="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.ShadowColor"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.ShadowWidth"/> will be applied.</p><p> Values other than NotSet cause the expandable object to appear in a variety of ways. Expandable objects can fade in (from completely transparent to the level determined by <see cref="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.Opacity"/>), iris in (appear inside of an expanding circle), slide in, wipe in (appear from left to right with a soft, gradient edge) or "pixelate" in by appearing at a low resolution that gradually increases to full resolution.</p> 
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.Duration">
            <summary>
            Specifies the amount of time elapsed in milliseconds between the beginning and the end of a transition effect.
            </summary>
            <remarks>
            <p class="body">This is the amount of time it takes the expand effect to occur. If <see cref="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.Type"/> is set to ExpandEffectsType.Notset, this setting has no effect.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.Opacity">
            <summary>
            Specifies the amount of transparency applied to the expandable object after the expand effect is complete.
            </summary>
            <remarks>
            <p class="body">This property specifies the opacity of the expandable object as a percentage. A setting of 100 is completely opaque, a setting of 0 is completely transparent (invisible). A setting in between these values will produce a partially visisble expandable object through which the contents of the page may be seen.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.ShadowColor">
            <summary>
            Specifies the color of the drop shadow that will appear under the expandable object.
            </summary>
            <remarks>
            <p class="body">Drop shadows provide an illusion of depth to expandable objects as they appear over the web page. You can specify the width of the drop shadow using the <see cref="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.ShadowWidth"/> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.ShadowWidth">
            <summary>
            Specifies the width of the drop shadow that will appear under the expandable object.
            </summary>
            <remarks>
            <p class="body">Drop shadows provide an illusion of depth to expandable objects as they appear over the web page. Set this property to 0 to eliminate the drop shadow. You can specify the color of the drop shadow using the <see cref="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.ShadowColor"/> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ExpandEffects.Delay">
            <summary>
            Specifies the amount of time elapsed before an expandable object will open up in response to a mouse click or a mouseover.
            </summary>
            <remarks>
            <p class="body">The default delay is 200 milliseconds. This property specifies the time that will elapse before the expand effect begins.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FootersCollection">
            <summary>
            Summary description for FootersCollection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FootersCollection.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the node.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The node don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
            <remarks>
            The node don't have any attributes. This method always returns -1.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The node don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
            <remarks>
            The node don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the node.
            </summary>
            <returns>
            Always returns self as the node is the first sibling in the XPath order.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Child rows collection of the current row. Null if the current row has no child rows.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Gets the previous sibling of the node.
            </summary>
            <returns>
            Always returns Null as the node is the first sibling in the XPath order.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the parent node.
            </summary>
            <returns>
            The rows collection the node belongs to.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node.
            </summary>
            <returns>
            First footer of the collection.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the node has attributes.
            </summary>
            <remarks>
            The node has no attributes. The property is always false.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the node.
            </summary>
            <remarks>
            The node has no value. The property is always Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FootersCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the node has children.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterRows.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the node.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the node.
            </summary>
            <returns>
            Self if the nodeis the first node in the collection. 
            The first node in the collection otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Null if the node has no next siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Returns previous sibling.
            </summary>
            <returns>
            Null if the node has no previous siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the parent - footers collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the node.
            </summary>
            <returns>
            Always null.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the node has attributes.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the node.
            </summary>
            <remarks>
            Always null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FooterRows.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the node has children.
            </summary>
            <remarks>
            Always false.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle">
            <summary>
            The GridItemStyle class handles properties and methods directly related to the appearance of an object inside the grid.  GridItemStyles are applied to the cells, footers and column headers of the grid.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridItemStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridItemStyle.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> class.
            </summary>
            <param name="bTrackViewState">True if ViewState should be tracked for this object.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridItemStyle.#ctor(Infragistics.WebUI.UltraWebGrid.UltraWebGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> class.
            </summary>
            <param name="grid">Reference to the grid that holds the style.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridItemStyle.#ctor(System.Boolean,Infragistics.WebUI.UltraWebGrid.UltraWebGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> class.
            </summary>
            <param name="bTrackViewState">True if ViewState should be tracked for this object.</param>
            <param name="grid">Reference to the grid that holds the style.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridItemStyle.IsEmpty">
            <summary>
            Returns a Boolean value that determines whether a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object is set to Nothing or Null.
            </summary>
            <remarks>
            <p class="body">True if the GridItemStyle object from which this method was invoked is set to Nothing or Null; otherwise, False.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridItemStyle.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the GridItemStyle class to their default values.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridItemStyle.CopyFrom(System.Web.UI.WebControls.Style)">
            <summary>
            Duplicates the style properties of the specified <b>Style</b> into the instance of the Style class from which this method is invoked.
            </summary>
            <remarks>
            <p class="body">Use the CopyFrom method to duplicate the style properties of the specified Style into the instance of the Style class from which this method is invoked.</p>
            <p class="body">All properties in the current instance of the Style class will be replaced by their corresponding properties in the Style specified by the <i>style</i> parameter.</p>
            </remarks>
            <param name="style">
            <p class="body">A Style object that represents the style to copy.</p>
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridItemStyle.CopyFrom(Infragistics.WebUI.UltraWebGrid.GridItemStyle)">
            <summary>
            Duplicates the style properties of the specified <b>GridItemStyle</b> into the instance of the GridItemStyle class from which this method is invoked.
            </summary>
            <remarks>
            <p class="body">Use the CopyFrom method to duplicate the style properties of the specified GridItemStyle into the instance of the GridItemStyle class from which this method is invoked.</p>
            <p class="body">All properties in the current instance of the GridItemStyle class will be replaced by their corresponding properties in the GridItemStyle specified by the <i>style</i> parameter.</p>
            </remarks>
            <param name="style">
            <p class="body">A GridItemStyle object that represents the style to copy.</p>
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridItemStyle.MergeWith(Infragistics.WebUI.UltraWebGrid.GridItemStyle,System.String)">
            <summary>
            Merges the style with the 'mergeStyle' style using 'styles' as the array of styles to merge separated with semicolon. Empty means CustomRules.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridItemStyle.HasData(System.Boolean)">
            <summary>
            Used to determine if the GridItemStyle has information to be persisted into its viewstate
            </summary>
            <param name="control"></param>
            <returns>True if viewstate has been modified</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridItemStyle.Merge(Infragistics.WebUI.Shared.Style,System.Boolean)">
            <summary>
            Replaces values in the style with values from the input style
            </summary>
            <param name="s">Style which priorities have priority over properties of this</param>
            <param name="reset">True: Reset this before merging.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GridItemStyle.Wrap">
            <summary>
            Returns or sets a Boolean value that determines whether the text associated with a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object is wrapped.
            </summary>
            <remarks>
            <p class="body">Set this property to True when the text associated with the GridItemStyle object should wrap from one line to the next when it does not fit.</p>
            <p class="body">Set this property to False (default) when the text associated the GridItemStyle object should not wrap.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GridItemStyle.HorizontalAlign">
            <summary>
            Returns or sets a value that specifies the horizontal alignment of the text associated with a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object.
            </summary>
            <remarks>
            <p class="body">The Left setting horizontally aligns text at the left of the object.</p>
            <p class="body">The Center setting horizontally centers text in the object.</p>
            <p class="body">The Right setting horizontally aligns text at the right of the object.</p>
            <p class="body">The Justify setting horizontally aligns text so that text is aligned at both the left and the right of the object.</p>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.GridItemStyle.VerticalAlign"/> property is used to align text vertically.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GridItemStyle.VerticalAlign">
            <summary>
            Returns or sets a value that specifies the vertical alignment of the text associated with a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object.
            </summary>
            <remarks>
            <p class="body">The Bottom setting vertically aligns text at the bottom of the object.</p>
            <p class="body">The Middle setting vertically centers text in the object.</p>
            <p class="body">The Top setting vertically aligns text at the top of the object.</p>		
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.GridItemStyle.HorizontalAlign"/> property is used to align text horizontally.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GridItemStyle.TextOverflow">
            <summary>
            Defines text's behavior in a nowrap-mode (Internet Explorer 6 and above only).
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GridItemStyle.Role">
            <summary>
            Defines role of the style
            </summary>
            <remarks>The property is getting assigned during style initialization</remarks>
            <value>NotSet</value>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GridItemStyle.Key">
            <summary>
            Defines extra key notation for the style.
            </summary>
            <remarks>Helps to sort out styles with the same role but different objects in the style repository.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GridItemStyle.Priority">
            <summary>
            Defines priority of the style
            </summary>
            <remarks>The property is getting assigned during style initialization</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridRendererBase.ShouldEmitNoDataMessage(Infragistics.WebUI.UltraWebGrid.BandsCollection)">
            <summary>
            This method supports the Infragistics control infrastructure, and is not intended
            for use by application code.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridRendererBase.EmitNoDataMessage(System.String)">
            <summary>
            This method supports the Infragistics control infrastructure, and is not intended
            for use by application code.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridRendererBase.GetStyleName(Infragistics.WebUI.UltraWebGrid.GridItemStyle,System.String)">
            <summary>
            This method supports the Infragistics control infrastructure and is not intended
            for use from application code.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.GridWebAgent">
            <summary>
            Extends shared's WebAgent class
            </summary>
            <remarks>The class is used to serve as a proxy between the grid and helper web constructions such as style repository and application styling.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.GridWebAgent.rowSelectors">
            <summary>
            Default selectors for optimized rendering
            </summary>
            <remarks>The members of this array correspond to the GridStyleRole enumeration</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridWebAgent.#ctor(System.Web.UI.Control)">
            <summary>
            Public constructor
            </summary>
            <param name="control">Control to assotiate with the web agent</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridWebAgent.#ctor(System.Web.UI.Control,Infragistics.WebUI.Shared.AppStyling.StyleInfoNames)">
            <summary>
            Public constructor with style infos
            </summary>
            <param name="control">Control to assotiate with the web agent</param>
            <param name="styleInfoName">Style info to associate with the agent</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridWebAgent.RegisterStyle(Infragistics.WebUI.UltraWebGrid.GridItemStyle,Infragistics.WebUI.UltraWebGrid.GridStyleRole)">
            <summary>
            Registers a style object with the grid's web agent
            </summary>
            <remarks>This method is called internally to register a style with app styling framework</remarks>
            <param name="style">Style to register</param>
            <param name="role">Role of the style</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridWebAgent.RegisterStyle(Infragistics.WebUI.UltraWebGrid.GridItemStyle)">
            <summary>
            Registers a style object with the grid's web agent
            </summary>
            <remarks>General regestration method. For the styles that are not part of the app styling framework.</remarks>
            <param name="style">Style to register with style repository</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridWebAgent.GetClassName(Infragistics.WebUI.UltraWebGrid.GridItemStyle)">
            <summary>
            Composes full class name of the style
            </summary>
            <remarks>The method looks into style's role and current optimization mode and returns proper class name.</remarks>
            <param name="style">Style to get the full name for.</param>
            <returns>CSS class name of the style</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridWebAgent.GetClassName(Infragistics.WebUI.UltraWebGrid.GridItemStyle,System.Boolean)">
            <summary>
            Composes full class name of the style. There is an option to get just the Style Repository name of the style.
            </summary>
            <remarks>The method looks into style's role and current optimization mode and returns proper class name.</remarks>
            <param name="style">Style to get the full name for.</param>
            <param name="full">Indicates to compose full name. If false returns just the Style Repository name.</param>
            <returns>CSS class name of the style</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridWebAgent.GetObjectRoleClassName(System.Object,Infragistics.WebUI.UltraWebGrid.GridStyleRole)">
            <summary>
            Composes class name for the object and role base on current optimization option and the object's inheritance
            </summary>
            <remarks>This method is a centralized place for all objects to get its appearance class names. The method works closely with the style repository.</remarks>
            <returns>Composed string of class names</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridWebAgent.GetObjectRoleClassName(System.Object)">
            <summary>
            Same as GetObjectRoleClassNames with both parameters. Second parameter is passed as None from this method.
            </summary>
            <remarks>See GetObjectRoleClassNames with two parameters</remarks>
            <returns>See GetObjectRoleClassNames with two parameters</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridWebAgent.InitializeStyles">
            <summary>
            Ensures that all styles are in the style repository.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GridWebAgent.GetOptimizedClassName(System.Object,Infragistics.WebUI.UltraWebGrid.GridStyleRole,System.Boolean)">
            <summary>
            Returns class name for the object passed in. The method considers optimization as well.
            </summary>
            <param name="obj">Object to resolve the class name for. Can be one of the objects  from the UltraWebGrid namespace.</param>
            <param name="role">The GridStyleRole which this object should be evaluated as.</param>
            <param name="top">Indicates if this is top element the class is requested for, for example TBODY above the cells. Judging from this parameter and the optimization mode the method returns corresponding class name for this element.</param>
            <returns>A string with the class name for the role</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GridWebAgent.Grid">
            <summary>
            The grid object the web agent belongs to
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.GroupByBox">
            <summary>
            The GroupByBox object represents the area at the top of the grid that is used for dragging or clicking column headers in order to group rows by the common values of that column.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByBox.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByBox.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByBox"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the GridItemStyle class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the GridItemStyle will retun False until set again.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByBox.CopyFrom(Infragistics.WebUI.UltraWebGrid.SpecialBoxBase)">
            <summary>
            Duplicates the properties of the specified <see cref="T:Infragistics.WebUI.UltraWebGrid.SpecialBoxBase"/> into the instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByBox"/> class from which this method is invoked.
            </summary>
            <remarks>
            <p class="body">Use the CopyFrom method to duplicate the properties of the specified SpecialBoxBase into the instance of the GroupByBox class from which this method is invoked.</p>
            <p class="body">All properties in the current instance of the SpecialBoxBase class will be replaced by their corresponding properties in the SpecialBoxBase object specified by the <i>passin</i> parameter.</p>
            </remarks>
            <param name="source">
            <p class="body">A SpecialBoxBase object that represents the base box class to copy.</p>
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByBox.ToString">
            <summary>
            Returns a string representation of a <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByBox"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByBox.TrackViewState">
            <summary>
            Marks modified elements for serialization into ViewState
            </summary>
            <remarks>
            <p class="body">Called automatically by the control to determine which properties need to be persisted into ViewState.</p>		
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByBox.LoadViewState(System.Object)">
            <summary>
            Loads the ViewState from the Page and applies it to the control.
            </summary>
            <remarks>Load ViewState is called automatically by the .Net Framework to return the control on the server to the state that it was at during the last rendering.</remarks>
            <param name="savedState">An object array  containing the key value pairs that were persisted into ViewState.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByBox.SaveViewState">
            <summary>
            Creates a key value pair object array that contains the properties that are being pushed into the ViewState.
            </summary>
            <remarks>
            This is called by the control to persist ViewState for the object.
            </remarks>
            <returns>An object array of key value pairs of storable values.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByBox.CreateBackup">
            <summary>
            Persists the current state of the control.
            </summary>
            <remarks>
            Called internally by the control to persist the current state of the control.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByBox.Commit">
            <summary>
            Finalizes all changes to the control
            </summary>
            <remarks>
            Called internally by the control to finalize changes to the control.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByBox.Rollback">
            <summary>
            Returns control back to last commit point.
            </summary>
            <remarks>Called automatically by the control to undo changes back to the last commital point.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByBox.Prompt">
            <summary>
            Returns or sets a string of text that indicates to the user how to perform GroupBy operations.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Drag a column header here to group by that column."</p>
            <p class="body">The prompt will not be shown unless the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ViewType"/> property is set to OutlookGroupBy.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByBox.Location">
            <summary>
            Returns or sets a value that specifies where the <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByBox"/> band labels are rendered to the client.
            </summary>
            <remarks>
            <p class="body">The Top (default) setting renders the GroupByBox band labels above the grid on the client.</p>
            <p class="body">The Bottom setting renders the GroupByBox band labels below the grid on the client.</p>
            <p class="body">The band labels will not be shown unless the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ViewType"/> property is set to OutlookGroupBy.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByBox.BandLabelStyle">
            <summary>
            Returns a reference to or sets a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that determines how the <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByBox"/> band labels are rendered on the client.
            </summary>
            <remarks>
            <p class="body">Individual style attributes can be applied by setting the GridItemStyle object's corresponding properties. For example, a style's background color can be changed by setting its <b>BackColor</b> property.</p>
            <p class="body">A comprehensive pre-defined style can be applied by setting the GridItemStyle object's <b>CssClass</b> property to the name of the style.</p>
            <p class="body">The band labels will not be shown unless the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ViewType"/> property is set to OutlookGroupBy and the <see cref="T:Infragistics.WebUI.UltraWebGrid.ShowBandLabels"/> property is set to a value other than None.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByBox.HasBandLabelStyle">
            <summary>
            Returns a Boolean value that determines whether the <see cref="P:Infragistics.WebUI.UltraWebGrid.GroupByBox.BandLabelStyle"/> property is currently set to a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object.
            </summary>
            <remarks>
            <p class="body">This property returns True if the BandLabelStyle property is currently set; otherwise, it returns False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByBox.ShowBandLabels">
            <summary>
            Returns or sets a value that specifies the style of the type of band levels shown in the GroupByBox.
            </summary>
            <remarks>
            <p class="body">This property is used to specify the way in which band labels are rendered on the client when the GroupByBox is enabled.</p>
            <p class="body">The All setting will display all band labels.</p>
            <p class="body">The None setting will not display any band labels.</p>
            <p class="body">The AllWithGroupByColumnsOnly setting will only display band lables for bands for which there is a GroupBy column.</p>
            <p class="body">The IntermediateBandsOnly setting will display labels for bands that are between the first band with a GroupBy column and the last band with a GroupBy column, including those bands.</p>
            <p class="body">The Default (default) setting will use the None setting with single-band views and the IntermediateBandsOnly setting for multi-band views.</p>
            <p class="body">Regardess of the value of this property, band labels will not be displayed unless the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ViewType"/> property is set to OutlookGroupBy.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByBox.Hidden">
            <summary>
            Returns or sets a Boolean value that determines whether the <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByBox"/> box is hidden.
            </summary>
            <remarks>
            <p class="body">This property returns True if the GroupByBox box is currently hidden; otherwise, it returns False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByBox.HasChanges">
            <summary>
            Returns whether or not the control has undergone changes which have yet to be finalized.
            </summary>
            <remarks>Called internally by the control.</remarks>
            <returns>True if the object has style changes which need to be finalized</returns>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.GroupByRow">
            <summary>
            The GroupByRow object is a row that represents a grouped column.  
            </summary>
            <remarks>
            All rows in the data source that have common/equal values in the column that is grouped will be children of the GroupByRow object.  
            The GroupByRow object contains a reference to the grouped column as well as a reference to the particular value that the child rows have in common.	
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow">
            <summary>
            The UltraGridRow displays a row of data in the grid. A row typically represents the data from a single record in the attached datasource.
            </summary>
            <remarks>
            <p class="body">The UltraGridRow object represents a single row of data, and corresponds to a single record in the underlying recordset. Rows occupy a position in the data hierarchy of the UltraWebGrid between Cells and Bands. The UltraGridRow object is always the child of an UltraGridBand object, and its children are UltraGridCell objects.</p>
            <p class="body">Much of the data-binding functionality of the grid involves working with the UltraGridRow object. Whenever an UltraGridRow object is loaded by the grid, the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeRow"/> event is fired.</p>
            <p class="body">UltraGridRow objects can influence the formatting of the cells they contain through the setting of the UltraGridRow's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property. Rows can also be formatted independently of the cells they contain. Frequently, cells are drawn from the top of the row to the bottom and are aligned edge to edge so that they occupy the entire area of the row; the row itself is not visible because cells are always "above" the row in the grid's z-order. However it is possible to specify spacing between and around cells that lets the underlying UltraGridRow object to show through. Only then will formatting applied directly to the UltraGridRow object be visible to the end user.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.#ctor">
            <summary>
            The UltraGridRow displays a row of data in the grid. A row typically represents the data from a single record in the attached datasource.
            </summary>
            <remarks>
            <p class="body">The UltraGridRow object represents a single row of data, and corresponds to a single record in the underlying recordset. Rows occupy a position in the data hierarchy of the UltraGrid between Cells and Bands. The UltraGridRow object is always the child of an UltraGridBand object, and its children are UltraGridCell objects.</p>
            <p class="body">Much of the data-binding functionality of the grid involves working with the UltraGridRow object. Whenever an UltraGridRow object is loaded by the grid, the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeRow"/> event is fired.</p>
            <p class="body">UltraGridRow objects can influence the formatting of the cells they contain through the setting of the UltraGridRow's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property. Rows can also be formatted independently of the cells they contain. Frequently, cells are drawn from the top of the row to the bottom and are aligned edge to edge so that they occupy the entire area of the row; the row itself is not visible because cells are always "above" the row in the grid's z-order. However it is possible to specify spacing between and around cells that lets the underlying UltraGridRow object show through. Only then will formatting applied directly to the UltraGridRow object be visible to the end user.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.#ctor(System.Boolean)">
            <summary>
            The UltraGridRow displays a row of data in the grid. A row typically represents the data from a single record in the attached datasource.
            </summary>
            <remarks>
            <p class="body">The UltraGridRow object represents a single row of data, and corresponds to a single record in the underlying recordset. Rows occupy a position in the data hierarchy of the UltraGrid between Cells and Bands. The UltraGridRow object is always the child of an UltraGridBand object, and its children are UltraGridCell objects.</p>
            <p class="body">Much of the data-binding functionality of the grid involves working with the UltraGridRow object. Whenever an UltraGridRow object is loaded by the grid, the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeRow"/> event is fired.</p>
            <p class="body">UltraGridRow objects can influence the formatting of the cells they contain through the setting of the UltraGridRow's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property. Rows can also be formatted independently of the cells they contain. Frequently, cells are drawn from the top of the row to the bottom and are aligned edge to edge so that they occupy the entire area of the row; the row itself is not visible because cells are always "above" the row in the grid's z-order. However it is possible to specify spacing between and around cells that lets the underlying UltraGridRow object show through. Only then will formatting applied directly to the UltraGridRow object be visible to the end user.</p>
            </remarks>
            <param name="bTrack">boolean - Designates whether the row should be included in the viewstate of the WebGrid. Setting the value to true will allow
            the WebGrid to persist the row across postbacks automatically. 
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.#ctor(System.Object[])">
            <summary>
            The UltraGridRow displays a row of data in the grid. A row typically represents the data from a single record in the attached datasource.
            </summary>
            <param name="values">
            The values that are used to initialize the row's cells.
            </param>
            <remarks>
            <p class="body">The UltraGridRow object represents a single row of data, and corresponds to a single record in the underlying recordset. Rows occupy a position in the data hierarchy of the UltraGrid between Cells and Bands. The UltraGridRow object is always the child of an UltraGridBand object, and its children are UltraGridCell objects.</p>
            <p class="body">Much of the data-binding functionality of the grid involves working with the UltraGridRow object. Whenever an UltraGridRow object is loaded by the grid, the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeRow"/> event is fired.</p>
            <p class="body">UltraGridRow objects can influence the formatting of the cells they contain through the setting of the UltraGridRow's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property. Rows can also be formatted independently of the cells they contain. Frequently, cells are drawn from the top of the row to the bottom and are aligned edge to edge so that they occupy the entire area of the row; the row itself is not visible because cells are always "above" the row in the grid's z-order. However it is possible to specify spacing between and around cells that lets the underlying UltraGridRow object show through. Only then will formatting applied directly to the UltraGridRow object be visible to the end user.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.ShouldSerializeCells">
            <summary>Returns true if any property of Cells has at least one item.</summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.ResetCells">
            <summary>
            Clears the Cells collection.
            </summary>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.IsExpanding">
            <summary>
            XmlLoadOnDemandType.Accumulative support
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object.
            </summary>
            <returns>
            The value returned always equals to "Row".
            </returns>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Collapse(System.Boolean)">
            <summary>
            Collapses the row and its children.
            </summary>
            <param name="all">
            Indicates whether the descendants of the row should be collapsed as well.
            </param>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Expand(System.Boolean)">
            <summary>
            Expand the row and its children.
            </summary>
            <param name="all">
            Indicates whether the descendants of the row should be expanded as well.
            </param>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Toggle(System.Boolean)">
            <summary>
            Changes the expanded state of the row to Collapsed from Expanded or to Expanded from Collapsed.
            </summary>
            <param name="all">
            Indicates whether the descendants of the row should change its expanded state as well.
            </param>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.toggle(System.Boolean,System.Boolean)">
            <summary>
            Obtain the UltraWebGrid object to which the row is attached.
            </summary>
            <param name="all"></param>
            <param name="exp"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.IsChild(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Specifies whether the passed-in row is the direct child of the current row.
            </summary>
            <remarks>
            <p class="body">You can invoke this method to determine whether ther is a single-level parent/child relationship between two rows. You supply a reference to the UltraGridRow object you want to test in relation to the object on which you invoke the method.</p>
            <p class="body">Note that this method tests for a direct parent/child relationship, and will not test for rows more than one level below the current row. In other words, this method will test for childhood, but not grandchildhood. To find out whether this row is descended of another row that is more than one level below it, use the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.IsDescendant(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/> method.</p>
            </remarks>
            <param name="row">The UltraGridRow object being examined to determine parenthood of the row.</param>
            <returns>True if the supplied row is the immediate child of the current row, False if the row is not the immediate child.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.GetRowNumber">
            <summary>
            Returns the row number of this row.
            This method can only be used during rendering, it's value may be inconsistant anytime but then
            </summary>
            <returns>long - This row's calculated row number</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.IsDescendant(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Specifies whether the passed-in row is a descendant of the current row.
            </summary>
            <remarks>
            <p class="body">You can invoke this method to determine whether there is any parent/child relationship between two rows. You supply a reference to the UltraGridRow object you want to test in relation to the object on which you invoke the method.</p>
            <p class="body">Note that this method tests for a parent/child relationship across all levels of the data hierarchy, and will determine if a row is descended directly from another row or from any descnedant of that row. To find out whether this row is decended directly from another row, use the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.IsChild(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/> method.</p>
            </remarks>
            <param name="row">The UltraGridRow object being examined to determine ancestorhood of the current row.</param>
            <returns>True if the supplied row is an ancestor of the current row at any level, False if the row is not an ancestor.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.NextSiblingParent">
            <summary>
            Returns the next row available.  If the next sibling is not available
            it moves to the next higher level and attempts to return the next
            non-null sibling row until it traverses to the top of the hierarchy
            and there are no further sibling rows available.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.GetCellText(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Returns string representation of the value of the specified cell.
            </summary>
            <param name="column">
            The UltraGridColumn object representing the column containing the cell.
            </param>
            <returns>
            A string value that represents the text displayed in the cell, or a text representation of the cell's value, if possible.
            </returns>
            <remarks>
            The cell of the row is detirmined by the column provided and its text is returned by the method.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.GetCellValue(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Returns value of the cell in its native form.
            </summary>
            <param name="column">
            The UltraGridColumn object representing the column containing the cell.
            </param>
            <returns>
            The unformatted value of a cell as retrieved from the datasource.
            </returns>
            <remarks>
            The cell of the row is detirmined by the column provided and its value is returned by the method.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Activate">
            <summary>
            Sets the current row as the active row.
            </summary>
            <remarks>
            <p class="body">Only one row in the grid at a time may be the active row. The active row is the one that receives the input focus. If a row is being edited, that row is automatically the active row. However, a row may also be active without being in edit mode.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.ExpandAncestors">
            <summary>
            Expands all ancestor rows of the current row.
            </summary>
            <remarks>
            <p class="body">Use this method to insure that all ancestor rows of the current row will be expanded and visible to the end user.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Delete">
            <summary>
            Deletes the current row.
            </summary>
            <remarks>
            <p class="body">This method will delete a row from the grid. It will also delete the corresponding record from the recordsource, provided deletion is an allowed action and the control has been properly configured to implement record deletion.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.CompareTo(System.Object)">
            <summary>
            Compares the row to the sorted data in the band and returns the row's position within the sort order.
            </summary>
            <remarks>
            <p class="body">This method takes into account the columns being used to sort the current band, and compares the corresponding values in the current row to those of other rows in the band.</p>
            </remarks>
            <param name="row">The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow">Row</see> object to compare against for position. </param>
            <returns>A long integer value representing the row's position within the sort order of the band/</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.IsSelectable">
            <summary>
            Determines whether the row may be selected, based on the current selection settings of the grid and the band.
            </summary>
            <returns>
            <b>true</b> if the row can be selected.
            </returns>
            <remarks>
            This method indicates whether the row can be selected by the end user.
            It takes into account the selection strategies in effect in the grid,
            but is not based on current selection status.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.IsAlternate">
            <summary>
            Determines whether the row is an alternate (even-numbered) row.
            </summary>
            <remarks>
            <p class="body">The UltraWebGrid provides a number of formatting options designed to increase data readability, and one of these is the ability to apply distinct formatting to odd and even numbered rows. By formatting alternating rows with different colors and/or attributes, it is easier for the user to see what data constitutes a row and keep the data in the rows separated. This is especially true when the rows of a band are set up to use multiple levels, so that each row of data may appear, for example, three cells high on screen.</p>
            <p class="body">Use this method to determine whether the current row is an alternate row. Alternate rowscan have a different style from non-alternate rows by assigning style attibutes via the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.RowAlternateStyle"/> property.</p>
            </remarks>
            <returns>True if the row is alternate (even-numbered), False if the row is not alternate (odd-numbered).</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.IsActiveRow">
            <summary>
            Determines whether the row is the active row.
            </summary>
            <remarks>
            <p class="body">Only one row in the grid at a time may be the active row. The active row is the one that receives the input focus. If a row is being edited, that row is automatically the active row. However, a row may also be active without being in edit mode.</p>
            <p class="body">Use this method to determine whether a row is currently the active row.</p>
            </remarks>
            <returns>True if the row is the active row, False otherwise.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.IsExpanded">
            <summary>
            Determines whether the row is currently expanded.
            </summary>
            <remarks>
            <p class="body">If a row is expanded, any child row it has are visible in the grid.</p>
            </remarks>
            <returns>True if the row is expanded, False otherwise.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.OnAddedToCollection(Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase)">
            <summary>
            Overrides its parent method.
            </summary>
            <param name="primaryCollection">
            The collection it is added.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.CopyFrom(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Copies the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object.
            </summary>
            <param name="passin">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object to copy from.
            </param>
            <returns>
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object that was copied into. That is this current row object.
            </returns>
            <remarks>
            Use the method to copy from another row into this current row.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Find(System.String,System.Boolean,System.Boolean)">
            <summary>
            Searches for a cell in the row. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <param name="backward">
            Indicates whether the search should be backward.
            </param>
            <param name="findExact">
            Indicates whether the looking string should entirely match the looking cell (<b>true</b>) value or the search condition should satisfy the starting portion of the cell value that matches the looking string (<b>false</b>).
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            The method starts from the first cell.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Find(System.String,System.Boolean)">
            <summary>
            Searches for a cell in the row. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <param name="backward">
            Indicates whether the search should be backward.
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            The method starts from the first cell. It uses previously used whole word search flag or partial find by default.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Find(System.String)">
            <summary>
            Searches for a cell in the row. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            The method starts from the first cell. It uses previously used direction or from first to last cell by default; uses previously used whole word search flag or partial find by default.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Find">
            <summary>
            Searches for a cell in the row. Case is ignored.
            </summary>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            The method starts from the first cell. It uses previously passed parameters.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.FindNext">
            <summary>
            Searches for a cell in the row. Case is ignored.
            </summary>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            Continues search from previously found cell. It uses previously passed parameters.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.FindNext(System.String)">
            <summary>
            Searches for a cell in the row. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            Continues search from previously found cell using new 
            string value. It uses previously used direction or from 
            first to last cell by default; uses previously used whole 
            word search flag or partial find by default.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.FindNext(System.String,System.Boolean)">
            <summary>
            Searches for a cell in the row. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <param name="backward">
            Indicates whether the search should be backward.
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            Continues search from previously found cell using new string value and direction. It uses previously used whole word search flag or partial find by default.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.FindNext(System.String,System.Boolean,System.Boolean)">
            <summary>
            Searches for a cell in the row. Case is ignored.
            </summary>
            <param name="lookingString">
            The string to look for.
            </param>
            <param name="backward">
            Indicates whether the search should be backward.
            </param>
            <param name="findExact">
            Indicates whether the looking string should entirely match the looking cell (<b>true</b>) value or the search condition should satisfy the starting portion of the cell value that matches the looking string (<b>false</b>).
            </param>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object if found; <b>null</b> otherwise.
            </returns>
            <remarks>
            Continues search from previously found cell using new string value, direction and exact search flag.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.LoadViewState(System.Object)">
            <summary>
            Loads the row's view state. Called by the framework.
            </summary>
            <param name="savedState">
            Saved vew state object.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.SaveViewState">
            <summary>
            Saves the row's view state. Called by the framework.
            </summary>
            <returns>
            Save view state object.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.TrackViewState">
            <summary>
            Turns tracking view state on.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#WebControls#IProvideImageDirectoryResolution#ResolveImageUrl(System.String)">
            <summary>
            Returns the resolved image path.  This path will be used in the img tag's src attribute, so it must be fully resolved.
            </summary>
            <param name="url">The unresolved url.  This may contain "~/".  The final resolved Url must take into account any values specified by config files.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#WebControls#IProvideImageDirectoryResolution#ResolveImageResourceUrl(System.String)">
            <summary>
            Resolves a resource path into a URL.  This can be done by using the Page.GetWebResourceUrl method.
            </summary>
            <param name="path">A string path to an embedded resource in the assembly.</param>
            <returns>The Url, which can be used to retrieve the embedded resource.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the row.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridRow.xpathAttributes">
            <summary>
            Caches the attributes the row uses for rendering. 
            For internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.GenerateAttributes">
            <summary>
            Called once to get the row's attributes in place
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.GenerateSpecificAttributes">
            <summary>
            Generates specific attributes for the object
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.GetLocalXPathName">
            <summary>
            Provides local name for the xpath node
            </summary>
            <returns>
            Name of the xpath node
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the row. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the row.
            </summary>
            <returns>
            Self if the row is the first row in the rows collection. 
            The first row in the rows collection otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Null if the row has no next siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Returns previous sibling.
            </summary>
            <returns>
            Null if the row has no previous siblings.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the parent rows collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the row.
            </summary>
            <returns>
            Cells collection if the row has cells. Otherwise - rows collection if the row has child rows.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.IsFilteredOut(Infragistics.WebUI.UltraWebGrid.RowsCollection)">
            <summary>
            Returns whether or not the row should be filtered out based on any ColumnFilters that should be
            applied to the row.
            </summary>
            <param name="rows">
            Row collection the row is about to be added to. This oveload allows checking if the row
            satisfies currently set filtering condition before it's added to the row collection.
            </param>
            <returns>True if the row does not meet all the filtering criteria to remain in the dataset.</returns>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridRow.preregStyles">
            <summary>
            Keeps styles to register if a style is being register before style repository is created
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#InitializeStyles">
            <summary>
            Registers all styles with the style repository.
            This method is not used on the row as all the row styles are intialized off the layout.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance
            </summary>
            <remarks>The method works closely with the style repository.</remarks>
            <param name="role">Defines the role of the style to return.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole,System.Boolean)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance. The boolean parameter will determine if the
            parents' class names need to be inserted.
            </summary>
            <param name="role">Defines the role of the style to return.</param>
            <param name="withParents">Determines if the parents' class names need to be inserted.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Key">
            <summary>
            Returns or sets a unique string identifier for this Row within the UltraGridRows collection.
            </summary>
            <remarks>
            <p class="body">This is the key used within the UltraWebGrid's collection object model to
            programmatically locate grid row objects.  It is different from the primary key that may
            uniquely identify the underlying data row within the data source, which is stored in the
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.DataKey"/> property.  For one reason, <b>Key</b> is always a string whereas
            <b>DataKey</b> is an object whose underlying datatype can vary based on the data schema.)
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Activated">
            <summary>
            Indicates whether this row has been activated.
            </summary>
            <remarks>
            <p class="body">A row that has been activated becomes the active row. There can only be one active row in the grid that can be accessed through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveRow">ActiveRow</see> property.</p>
            <p class="body">A row can become active by the end user clicking on a cell in the row, by the end user clicking on the row area itself, or by the end user clicking on the row's row selector. The active row can also be set programmatically in an event handler.</p>
            <p class="body">When a row becomes the active row, or the active row changes, the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveRowChange"/> event occurs.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Band">
            <summary>
            Returns the UltraGridBand object of the band that contains the row.
            </summary>
            <remarks>
            <p class="body">The <b>Band</b> property of an object refers to a specific band in the grid as defined by an UltraGridBand object. Developers use the <b>Band</b> property to access the properties of a specified UltraGridBand object, or to return a reference to the UltraGridBand object that is associated with the current object.</p>
            <p class="body">UltraGridBand objects are the foundation of the hierarchical data structure used by UltraWebGrid. Bands are also used to apply consistent formatting and behavior to the rows that they comprise. An UltraGridBand object is used to display all the data rows from a single level of a data hierarchy. UltraGridBand objects contain multiple sets of child UltraGridRow objects that actually display the data of the recordset.</p>
            <p class="body">The rows of a band are generally displayed in groups of one more. How rows appear grouped depends on their relationship to the rows of the previous (parent) band and to any child rows which are in the following (child) band. For example, if a hierarchical recordset has tables that display Customer, Order and Order Detail data, each one of these record sets maps to its own band in the UltraWebGrid. The rows in the Customer band will appear separated by any Order data rows that exist for the customers. By the same token, rows in the Order band will be separated to make room for Order Detail rows.</p>
            <p class="body">Although the rows in a band may appear to be separated, they are treated contiguously. When selecting a column in a band, you will see that the cells of that column become selected in all rows for the band, regardless of any intervening rows. Also, it is possible to collapse the hierarchical display such that any children of the rows in the current band are hidden.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Cells">
            <summary>
            Returns a collection of the UltraGridCell objects that make up the row.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to a collection of UltraGridCell objects that can be used to access the UltraGridCell objects that belong to a row. Developers can use this reference to access any of the returned collection's properties or methods, as well as the properties or methods of the objects within the collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.DataChanged">
            <summary>
            Indicates whether the row's data has been edited or this is a new or deleted row and the changes did not yet committed to the database
            </summary>
            <remarks>
            <p class="body">This property returns value that is different from <b>Unchanged</b> when a row's data has changed, the row is new, or the row has been deleted, but these changes haven't yet been committed to the data source; otherwise, it returns <b>Unchanged</b>.</p>
            <p class="body">When the value of a cell is changed by user interaction this property is set to the corresponding value and the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRow"/> and <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateGrid"/> events are generated. Note that the cell's new value is not necessarily committed to the data source at this time, since various factors can affect when the actual update occurs. Once the data source is actually updated, this property is set back to <b>Unchanged</b>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Height">
            <summary>
            The height of the row, in pixels.
            </summary>
            <remarks>
            <p class="body">The height returned by this property excludes any spacing that may appear between rows.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HeightResolved">
            <summary>
            The height of the row, in pixels. This property will always return the setting that is in control of the row.
            </summary>
            <remarks>
            <p class="body">Row height is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Height"/> property. However, <b>Height</b> may be set to a "use default" value, meaning the setting of the property is inherited from the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowHeightDefault">RowHeightDefault</see> property of the <b>UltraGridLayout</b> object. <b>RowHeightDefault</b> may also be set to its "use default" value, which means the value used for row height is the preset one built into the UltraWebGrid.</p>
            <p class="body">To simply find out the row height used in the current band, use the <b>HeightResolved</b> property. This property resolves any inheritance issues and returns a value that tells you the actual height in pixels of the row.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.RowSelectorStyle">
            <summary>
            An <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the row selector.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the row selector. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            <p class="body">Row selectors appear to the left of row data in the grid. By clicking on a row selector, the end user can activate and select a specific row. Use this property to determine how the row selector for the row will be formatted. The setting of this property may be inherited from the band level.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Hidden">
            <summary>
            Determines whether the object will be displayed.
            </summary>
            <remarks>
            <p class="body">The <b>Hidden</b> property determines whether an object is visible. Hiding an object may have have effects that go beyond simply removing it from view. For example, hiding a band also hides all the rows in that band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Selected">
            <summary>
            Determines the selected state of the row.
            </summary> 
            <remarks>
            <p class="body">If the row has been selected by the end user, this property returns True. Otherwise, it returns False.</p>
            <p class="body">There are different ways for the end user to select a row, the most common being to click on the row selector for that row. Once a row is selected it is added to the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedRows"/> collection, so any row that returns True for this property will be a member of that collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Sizing">
            <summary>
            Determines whether the row height can be changed.
            </summary>
            <remarks>
            <p class="body">If row sizing is permitted, users can resize rows by clicking on the line that separates row selectors and dragging up or down.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.SizingResolved">
            <summary>
            Determines whether the row height can be changed. This property will always return the setting that is in control of the row.
            </summary>
            <remarks>
            <p class="body">Row sizing is controlled by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Sizing"/> property. However, if a band is a child of another band, <b>AllowColSizing</b> may be set to a "use default" value, meaning the setting of the property is inherited from the parent band. If the parent band is a child of another band, it may also be inheriting a value for this property, so its own <b>AllowColSizing</b> property would also be set to the "use default" setting. Even if the band is a top-level band, <b>AllowColSizing</b> may be set to its "use default" value, which means the value used is the preset one built into the UltraWebGrid.</p>
            <p class="body">To simply find out whether rows can be resized in the current band, use the <b>SizingResolved</b> property. This property resolves any inheritance issues and returns a value that tells you whether row sizing is allowed for the band.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.ParentRow">
            <summary>
            Gets the row immediately above the current one in the data hierarchy, if any.
            </summary>
            <remarks>
            <p class="body">Rows in the top-level band (Band 0) will not have a parent row. For any other bands, each row is descended from a row in the previous band. This is the row returned by this property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Level">
            <summary>
            Returns the number of the band containing the row within the grid's data hierarchy. This property is read-only.
            </summary>
            <remarks>
            <p class="body">You can use the <b>Level</b> property to determine the level of the data hierarchy (i.e. band) where the row appears.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.ParentCollection">
            <summary>
            Returns the Rows collection that contains the current row.
            </summary>
            <remarks>
            You can use this collection to enumerate the siblings of the current row.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Rows">
            <summary>
            Returns the collection of the current row's child rows, if any.
            </summary>
            <remarks>
            <p class="body">You can use this property to access all the child UltraGridRow objects of the current row.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasChildRows">
            <summary>
            Determines whether the row has a set of child rows.
            </summary>
            <remarks>
            <p class="body">If the row is a parent row with a set of child rows, this property will return <b>true</b>. If <b>false</b>, the row has no children in the next band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Tag">
            <summary>
            A field for storing user-defined, object-related information.
            </summary>
            <remarks>
            The property can be used to store any user defined information.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Expanded">
            <summary>
            Returns the expanded state of the row.
            </summary>
            <remarks>
            <p class="body">This property returns True if the row is expanded, False if it is collapsed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.DataSourceIndex">
            <summary>
            Specifies the index (position) in the recordsource of the data record that corresponds to the current row.
            </summary>
            <remarks>
            <p class="body">This property is obsolete. Do not use it in your projects. This information is returned by the data binding mechanism. Depending on how data binding is being implemented, this property may not return a useful value.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style">
            <summary>
            An <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the row.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the row. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.DataKey">
            <summary>
            Returns the key value for the underlying data row.
            </summary>
            <remarks>
            <p class="body">The value returned by this property is the unique identifier for the record in the datasource that correpsonds to this grid row. This may be the value of one of the fields in the database that is being used as the primary key in the recordsource, or it may be a value that is not displayed as a cell in the row because that column is hidden.</p>
            <p class="body">When searching for a grid row object within the grid's collection of rows, methods like <see cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.FromKey(System.String)">FromKey</see> use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Key"/> property and not <b>DataKey</b>.  These key values are intended for different purposes and can be (and typically are) different.   Developers should recognize this distinction, and apply the <b>DataKey</b> property in situations when they are working in terms of data rows (as opposed to using <b>Key</b> with grid rows.)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.ShowExpand">
            <summary>
            <p class="body">Returns or sets a Boolean value that determines whether a <b>Row</b> object is displayed with an expand image next to it, regardless of whether or not it has children.  This property is only effective in conjunction with the use of the LoadOnDemand property of the DisplayLayout object.</p>
            </summary>
            <remarks>
            <p class="body">Set this property to true if LoadOnDemand is set to Manual and you want to indicate that the node can be expanded even though it doesn't have any child nodes.</p>
            <p class="body">When the user then clicks the expandsion indicator, the DemandLoad event will be fired on the server, providing the application with the opportunity to load the row with children.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasNextSibling">
            <summary>
            Determines whether a row has a sibling row below it.
            </summary>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasParent"/>, <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasChildRows"/>, and <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasPrevSibling"/> properties can be invoked to determine if a row has a parent row, at least one child row, and sibling row above it, respectively.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasPrevSibling">
            <summary>
            Determines whether a row has a sibling row above it.
            </summary>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasParent"/>, <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasChildRows"/>, and <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasNextSibling"/> properties can be invoked to determine if a row has a parent row, at least one child row, and sibling row below it, respectively.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasParent">
            <summary>
            Determines whether the row has a parent row or if it is the top-level row.
            </summary>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasChildRows"/>, <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasNextSibling"/>, and <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasPrevSibling"/> properties can be invoked to determine if a row has at least one child row, a sibling row below it, and a sibling row above it, respectively.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.NextVisible">
            <summary>
            Returns the next visible sibling row in the band.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to the next visible sibling row of a row. If the next sibling row does not exist or is not visible, this property returns Null.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.NextRow">
            <summary>
            Returns the next sibling row in the band.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to the next sibling row of a row. If the next sibling row does not exist, this property returns Nothing.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.PrevRow">
            <summary>
            Returns the previous sibling row in the band.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to the previous sibling row of a row. If the previous sibling row does not exist, this property returns Nothing.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.PrevVisible">
            <summary>
            Returns the previous visible sibling row in the band.
            </summary>
            <remarks>
            <p class="body">This property returns a reference to the previous visible sibling row of a row. If the previous sibling row does not exist or is not visible, this property returns Null.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Index">
            <summary>
            Returns the index of the row object in the UltraGridRows collection
            </summary>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.BandIndex">
            <summary>
            Returns the index of the row object inside the ban it belongs to. The property equals Index for the band 0 
            and differs for bands >0. For example if first row has 3 children, the first child row of the second row will
            have BandIndex=4.
            </summary>
            <remarks>
            Useful for accessing the column templates off Column.CellItems since they are stored in an single array regardless 
            of the band index.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasCells">
            <summary>
            Determines whether the row contains any cells.
            </summary>
            <remarks>
            <p class="body">Typically, this property will return True, unless the row is a GroupBy row.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasStyle">
            <summary>
            Determines if a style has been applied to the row at the row level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for the row has been specifically set at the row level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property.) If False, the row selector style will be inherited.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasRowSelectorStyle">
            <summary>
            Determines if a style has been applied to the row selectors at the row level.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for the row selectors has been specifically set at the row level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.RowSelectorStyle"/> property.) If False, the row selector style will be inherited.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.ImageDirectory">
            <summary>
            Returns the ImageDirectory path.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.ImageDirectoryResolved">
            <summary>
            Returns the final resolved ImageDirectory path that should be used for an image.
            </summary>
            <remarks>This path returned here should already have resolved "~/", and taken any values from config files if present.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the row has attributes.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the row node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the row node.
            </summary>
            <remarks>
            The row has no node value. The property is always Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the row's node has children.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.HasMergedCells">
            <summary>
            Indicates if the row has merged cells
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#WebAgent">
            <summary>
            Reference to the web agent
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.CurrentFilterScope">
            <summary>
            Returns the ColumnFilterCollection that is effecting the Row
            </summary>
            <remarks>
            If the RowFilterMode is Band then this will get the value off the Band
            If the RowFilterMode is SiblingRowsOnly then this will point to that collection
            If the Row is disconnected or Filtering is off, Null will return
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByRow.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByRow.#ctor(System.Boolean)">
            <summary>
            Constructor for the GroupByRow object that takes into account whether the object should be added into viewstate
            </summary>
            <remarks>This is the preferred constructor for the GroupByRow object.  If the object should persist over postbacks then it should be included into ViewState</remarks>
            <param name="bTrack">True if the object should be placed into viewstate.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByRow.GetLocalXPathName">
            <summary>
            Provides local name for the xpath node
            </summary>
            <returns>
            Name of the xpath node
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByRow.GenerateSpecificAttributes">
            <summary>
            Generates specific attributes for the object
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.GroupByRow.preregStyles">
            <summary>
            Keeps styles to register if a style is being register before style repository is created
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByRow.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#InitializeStyles">
            <summary>
            Registers all styles with the style repository.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.GroupByRow.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole,System.Boolean)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance. The boolean parameter will determine if the
            parents' class names need to be inserted.
            </summary>
            <param name="role">Defines the role of the style to return.</param>
            <param name="withParents">Determines if the parents' class names need to be inserted.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByRow.Column">
            <summary>
            Returns a reference to or sets the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object that specifies the associated column in a GroupBy operation.
            </summary>
            <remarks>
            <p class="body">This property indicates the associated column in a GroupBy operation.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByRow.Value">
            <summary>
            Returns or sets the cell value that is common to all of the rows being grouped in a GroupBy operation.
            </summary>
            <remarks>
            <p class="body">This property indicates the cell value that is common to the rows in the group.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByRow.Text">
            <summary>
            Returns or sets the group by row description. If this property is null then default text, based on GroupByRowDescriptionMask, is used.
            </summary>
            <remarks>
            <p class="body">This property indicates the cell value that is common to the rows in the group.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByRow.Image">
            <summary>
            Gets the image that will appear on the GroupByRow
            </summary>
            <remarks class="body">This image will appear on the GroupByRow object.  This property is settable at runtime.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.GroupByRow.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#WebAgent">
            <summary>
            Reference to the web agent
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.HeadersCollection">
            <summary>
            Collection that contains objects of type HeaderBase. Used for storing the representing the header layout of a band.
            </summary>
            <remarks>
            Both ColumnHeader and ColumnFooter objects are inherited from HeaderBase.
            Initially gets filled with flat-vew header layout.
            Adding into the collection a detached HeaderBase object means creating a general information purpose header that is not related to any column.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.HeadersCollection"/> class.
            </summary>
            <remarks>
            Default constructor
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.Add(Infragistics.WebUI.UltraWebGrid.HeaderBase,System.Boolean)">
            <summary>
            Adds a <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object into the collection.
            </summary>
            <remarks>
            Can be directed to check if the item already exists in the collection and prevent from having duplicate entrees.
            </remarks>
            <param name="item">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object to add.
            </param>
            <param name="checkExisted">
            Shows to check existance of the object in the collection. If the parameter is true and the 
            object exists it is not added for the second time. If the parameter is false the object can be added 
            into the collection inspite of its presence there.
            </param>
            <returns>
            Index of newly added item inside the collection. -1 if the operation failed.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.Add(Infragistics.WebUI.UltraWebGrid.HeaderBase)">
            <summary>
            Adds a <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object into the collection.
            </summary>
            <remarks>
            The method does not allow to add more than one instance into the collection. 
            An attempt to add more than one instance will fail.
            </remarks>
            <param name="item">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object to add.
            </param>
            <returns>
            Index of newly added item inside the collection. -1 if the operation failed.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.HeaderBase)">
            <summary>
            Inserts a <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object into the collection.
            </summary>
            <remarks>
            The method inserts a new object into the collection at a specified index.
            </remarks>
            <param name="index">
            The index to insert the object at. Existing objects are being pushed to the greater indexes.
            </param>
            <param name="item">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object to insert.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.Remove(Infragistics.WebUI.UltraWebGrid.HeaderBase)">
            <summary>
            Removes the first occurence of the <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object from the collection.
            </summary>
            <remarks>
            The method removes the specified object from the collection.
            </remarks>
            <param name="item">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object to remove.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object from the collection at the provided index.
            </summary>
            <remarks>
            The method removes the specified object from the collection.
            </remarks>
            <param name="index">
            The index inside the collection to remove at.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
            <remarks>
            Use the method to clear the headers collection.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.CopyTo(Infragistics.WebUI.UltraWebGrid.HeaderBase[],System.Int32)">
            <summary>
            Copies a range of elements from the collection into one-dimensional array of the <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> objects, starting from the provided index.
            </summary>
            <remarks>
            The method copies from the collection into an array of the objects.
            </remarks>
            <param name="items">
            The array to copy into.
            </param>
            <param name="index">
            The index to start copying from.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.Contains(Infragistics.WebUI.UltraWebGrid.HeaderBase)">
            <summary>
            Checks if an item is present in the collection.
            </summary>
            <remarks>
            The method checks if the <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object already exists in the collection.
            </remarks>
            <param name="item">
            The object to check its existance in the collection.
            </param>
            <returns>
            True if the object exists in the collection. False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.IndexOf(Infragistics.WebUI.UltraWebGrid.HeaderBase)">
            <summary>
            Searches for the specified <see cref="T:Infragistics.WebUI.UltraWebGrid.HeaderBase"/> object 
            and returns zero-based index of the first occurence within the collection.
            </summary>
            <remarks>
            The method can be also used to check the presence of the object inside the collection.
            </remarks>
            <param name="item">
            The object to get its index within the collection.
            </param>
            <returns>
            The index of the object within the collection. -1 if no occurence has met.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.IsDefault">
            <summary>
            Determines if the layout collection was modified in any way.
            </summary>
            <returns>
            <b>true</b> if the collection corresponds to the original one. 
            <b>false</b> if the collection is modified and a special layout renderer needs to be used.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.Reset">
            <summary>
            Returns the collection into its initial flat-view layout.
            </summary>
            <remarks>
            The method can be invoked to reset the layout's view into default flat view. 
            The method will not have effect if the layout is built up with only custom items 
            and none of them is attached to a column.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.GetHeight">
            <summary>
            Defines vertical capacity of the header layout.
            </summary>
            <returns>
            Number of rows the layout occupies in the table.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.CalculateRenderMatrix">
            <summary>
            Calculates render matrix for easy table rendering. The matrix
            consists of -1 at first, then occupied cells get number of the
            layout item that fills that spaces. Whatever remains as -1 becomes
            a "hole" in the header layout table rendered as a cell with no data 
            in it.
            </summary>
            <returns>
            Two dimensional array of integers representing which layout item occupies what
            cell. -1 signify empty space.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.Render(Infragistics.WebUI.UltraWebGrid.GridRendererBase)">
            <summary>
            Renders the layout into the renderer.
            </summary>
            <param name="r">
            The rendere to render the layout into.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.Render(System.Text.StringBuilder,Infragistics.WebUI.UltraWebGrid.GridRendererBase,System.String)">
            <summary>
            Renders the layout into the StringBuilder.
            </summary>
            <param name="res">
            The StringBuilder to render the layout into.
            </param>
            <param name="r">
            The renderer to retrieve context rendering options.
            </param>
            <param name="indent">
            The indentation for the rendering. If an empty string not indentation is rendered out.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.RenderMatrix(System.Text.StringBuilder,Infragistics.WebUI.UltraWebGrid.GridRendererBase,System.Int32[][],System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.String,System.Boolean)">
            <summary>
            Rendering the layout according to its matrix
            </summary>
            <param name="res">
            Output stringbuilder.
            </param>
            <param name="r">
            The renderer of the layout
            </param>
            <param name="rm">
            Render matrix. Filled with header indexes to render
            </param>
            <param name="sx">
            Starting horizontal position (for recursive calls)
            </param>
            <param name="sy">
            Starting vertical position (for recursive calls)
            </param>
            <param name="w">
            Width
            </param>
            <param name="h">
            Height
            </param>
            <param name="isFixed">
            Rendering fixed part
            </param>
            <param name="fcCount">
            Number of fixed columns
            </param>
            <param name="indent">
            Indentation
            </param>
            <param name="topLevel">
            Not recursive call?
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.HeadersCollection.CopyFrom(Infragistics.WebUI.UltraWebGrid.HeadersCollection)">
            <summary>
            Copies the passed in object into the current one.
            </summary>
            <param name="source">
            The object to copy properties after.
            </param>
            <returns>
            The object where it was copied into, that is the current object.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeadersCollection.Band">
            <summary>
            Provides access to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> 
            object that contains this layout collection.
            </summary>
            <remarks>
            This collection uses the <b>Band</b> to connect to the columns collection it represents.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.HeadersCollection.Item(System.Int32)">
            <summary>
            Property indexer for the collection. Uses numeric index.
            </summary>
            <remarks>
            Allows access to the layout items via an integer index.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ImageUrls">
            <summary>
            This class provides a common location for image file names and image path information.  By default, all images are referenced with respect to the ImageDirectory property.
            If an image property value starts with "/" or "./" or "../" then the ImageDirectory property is not added to it.
            If the image path is relative to the project directory, start the name with "./"
            "\ig_Images" is the default image directory where the basic grid related gif files are installed. The ig_Images directory is located in the "Program Files/Common Files/Infragistics/Web" sub directory structure and is added to IIS as a virtual directory when the product is installed.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrls.#ctor">
            <summary>
            Class used to track images used by the WebGrid.
            </summary>
            <remarks>This class is not intended for public use.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrls.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.ImageUrls"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrls.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ImageUrls"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the ImageUrls class to their default values.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrls.Clone">
            <summary>
            Clone the ImageUrls object
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrls.CopyFrom(Infragistics.WebUI.UltraWebGrid.ImageUrls)">
            <summary>
            Copy the ImageUrls object
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.ImageDirectory">
            <summary>
            The path of the directory where the images used by the control are stored.
            </summary>
            <remarks>
            This is the path to the directory on the server that contains the images used to construct the user interface of the UltraWebGrid.
            At product installation time, the ig_images directory is mapped in IIS to the \program files\common files\Infragistics\Web directory path so that images can be picked up automatically for projects on the installation machine.  For production deployment, a different directory may need to be specified for this property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.CollapseImage">
            <summary>
            The name of the image used as the "collapse rows" icon.
            </summary>
            <remarks>
            The image specified by this property is displayed beside any row that has 
            expanded child rows capable of being collapsed. The usual appearance fo this icon is a small minus sign.<br/>
            The image can be overriden for indicidual bands using <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CollapseImage"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.FilterAppliedImage">
            <summary>
            The name of the image used as the "filer applied" icon.
            </summary>
            <remarks>
            The image displayed in the header object which shows that row filtering can be done on the column.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.FilterImage">
            <summary>
            The name of the image used as the "filter" icon.
            </summary>
            <remarks>
            The image displayed in the header object which shows that row filtering can be done on the column.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.ExpandImage">
            <summary>
            The name of the image used as the "expand rows" icon.
            </summary>
            <remarks>
            The image specified by this property is displayed beside any row that has child rows capable of being expanded. The usual appearance fo this icon is a small plus sign.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.CurrentRowImage">
            <summary>
            The name of the active row image.
            </summary>
            <remarks>
            The image specified by this property is displayed beside whatever row 
            is currently active in the grid. The usual appearance of this icon is a small triangle.<br/>
            The property can be overriden for individual bands using the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CurrentRowImage"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.CurrentEditRowImage">
            <summary>
            The name of the active editable row image.
            </summary>
            <remarks>
            The image specified by this property is displayed beside whatever row 
            is currently active in the grid that has template for editing the row. 
            The usual appearance of this icon is a small triangle with a pen.<br/>
            The property can be overriden for individual bands using the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CurrentEditRowImage"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.NewRowImage">
            <summary>
            The name of the new row image.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.GroupByImage">
            <summary>
            The name of the group by image. (Used in down-level browser that do not support drag and drop).
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.UnGroupByImage">
            <summary>
            The name of the ungroup image.  (Used in down-level browser that do not support drag and drop).
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.GroupDownArrow">
            <summary>
            The name of the down arrow image.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.GroupUpArrow">
            <summary>
            The name of the up arrow image.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.FilterEquals">
            <summary>
            The name of the filter equals image.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.SortAscending">
            <summary>
            The name of the ascending sort image.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.SortDescending">
            <summary>
            The name of the descending sort image.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.BlankImage">
            <summary>
            The name of the blank image.  (Used as a spacer inside of the RowSelector area of the grid).
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.RowLabelBlankImage">
            <summary>
            The name of the image for the row selectors.  (Used as a spacer inside of the RowSelector area of the grid).
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.GridCornerImage">
            <summary>
            The name of the image that will appear in the left upper corner of the grid.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.FixedHeaderOffImage">
            <summary>
            Gets or sets the image that's used to draw the fixed header indicator when the header is not fixed.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.FixedHeaderOnImage">
            <summary>
            Gets or sets the image that's used to draw the fixed header indicator when the header is fixed.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx">
            <summary>
            This class provides a common location for image file names and image path information.  By default, all images are referenced with respect to the ImageDirectory property.
            If an image property value starts with "/" or "./" or "../" then the ImageDirectory property is not added to it.
            If the image path is relative to the project directory, start the name with "./"
            "\ig_Images" is the default image directory where the basic grid related gif files are installed. The ig_Images directory is located in the "Program Files/Common Files/Infragistics/Web" sub directory structure and is added to IIS as a virtual directory when the product is installed.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.#ctor">
            <summary>
            Class used to track images used by the WebGrid.
            </summary>
            <remarks>This class is not intended for public use.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeCollapseImage">
            <summary>
            Indicates whether <strong>CollapseImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterAppliedImage">
            <summary>
            Indicates whether <strong>FilterAppliedImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterLikeImage">
            <summary>
            Indicates whether <strong>FilterLikeImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterNotEqualsImage">
            <summary>
            Indicates whether <strong>FilterNotEqualsImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterEqualsImage">
            <summary>
            Indicates whether <strong>FilterEqualsImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterNotLikeImage">
            <summary>
            Indicates whether <strong>FilterNotLikeImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterGreaterThanImage">
            <summary>
            Indicates whether <strong>FilterGreaterThanImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterGreaterThanEqualsImage">
            <summary>
            Indicates whether <strong>FilterGreaterThanEqualsImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterLessThanImage">
            <summary>
            Indicates whether <strong>FilterLessThanImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterLessThanEqualsImage">
            <summary>
            Indicates whether <strong>FilterLessThanEqualsImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterContainsImage">
            <summary>
            Indicates whether <strong>FilterContainsImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterDoesNotContainImage">
            <summary>
            Indicates whether <strong>FilterDoesNotContainImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterStartsWithImage">
            <summary>
            Indicates whether <strong>FilterStartsWithImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterDoesNotStartWithImage">
            <summary>
            Indicates whether <strong>FilterDoesNotStartWithImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterEndsWithImage">
            <summary>
            Indicates whether <strong>FilterEndsWithImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterDoesNotEndWithImage">
            <summary>
            Indicates whether <strong>FilterDoesNotEndWithImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFilterImage">
            <summary>
            Indicates whether <strong>FilterImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeExpandImage">
            <summary>
            Indicates whether <strong>ExpandImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeCurrentRowImage">
            <summary>
            Indicates whether <strong>CurrentRowImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeCurrentEditRowImage">
            <summary>
            Indicates whether <strong>CurrentEditRowImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeNewRowImage">
            <summary>
            Indicates whether <strong>NewRowImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeGroupByImage">
            <summary>
            Indicates whether <strong>GroupByImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeUnGroupByImage">
            <summary>
            Indicates whether <strong>UnGroupByImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeGroupDownArrowImage">
            <summary>
            Indicates whether <strong>GroupDownArrowImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeGroupUpArrowImage">
            <summary>
            Indicates whether <strong>GroupUpArrowImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeSortAscendingImage">
            <summary>
            Indicates whether <strong>SortAscendingImage</strong> has changed and
            needs to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeSortDescendingImage">
            <summary>
            Indicates whether <strong>SortDescendingImage</strong> has changed and
            needs to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeBlankImage">
            <summary>
            Indicates whether <strong>BlankImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeRowLabelBlankImage">
            <summary>
            Indicates whether <strong>RowLabelBlankImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeGridCornerImage">
            <summary>
            Indicates whether <strong>GridCornerImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFixedHeaderOffImage">
            <summary>
            Indicates whether <strong>FixedHeaderOffImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerializeFixedHeaderOnImage">
            <summary>
            Indicates whether <strong>FixedHeaderOnImage</strong> has changed and needs
            to be serialized into the ASP.NET page by Visual Studio .NET.
            </summary>
            <returns>
            Returns true if serialization is required.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.Reset">
            <summary>
            Resets all properties of the <strong>ImageUrlsEx</strong> class
            to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of this
            <see cref="T:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx">ImageUrlsEx</see> 
            object to their default values.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ShouldSerialize">
            <summary>
            Indicates whether any images have changed from their default values.
            </summary>
            <returns>True if the <strong>ImageUrlsEx</strong> object should be
            serialized, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.Clone">
            <summary>
            Clone this <strong>ImageUrlsEx</strong> object.
            </summary>
            <returns>Another <strong>ImageUrlsEx</strong> with identical values
            to this one. The returned object reference is always different from
            this object.</returns>
            <remarks>
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.CopyFrom(Infragistics.WebUI.UltraWebGrid.ImageUrlsEx)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.CopyFrom(Infragistics.WebUI.UltraWebGrid.ImageUrlsEx)">
            <summary>
            Copy the <strong>ImageUrlsEx</strong> object.
            </summary>
            <param name="passin">Another <strong>ImageUrlsEx</strong> object
            you want to copied the values of into this object.</param>
            <returns>A reference to this object having all of the values of
            <em>passin</em>. These are two different object references, unless
            <em>passin</em> was this object reference originally.</returns>
            <remarks>
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.Clone"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ImageDirectory">
            <summary>
            The path of the directory where the images used by the control are stored.
            </summary>
            <remarks>
            This is the path to the directory on the server that contains the images used to construct the user interface of the UltraWebGrid.
            At product installation time, the ig_images directory is mapped in IIS to the \program files\common files\Infragistics\Web directory path so that images can be picked up automatically for projects on the installation machine.  For production deployment, a different directory may need to be specified for this property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.CollapseImage">
            <summary>
            The name of the image used as the "collapse rows" icon.
            </summary>
            <remarks>
            The image specified by this property is displayed beside any row that has 
            expanded child rows capable of being collapsed. The usual appearance fo this icon is a small minus sign.<br/>
            The image can be overriden for individual bands using <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CollapseImage"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterAppliedImage">
            <summary>
            The name of the image used as the "filer applied" icon.
            </summary>
            <remarks>
            The image displayed in the header object which shows that row filtering can be done on the column.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterLikeImage">
            <summary>
            The name of the image used as the like icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is Like
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterNotEqualsImage">
            <summary>
            The name of the image used as the NotEquals icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is NotEquals
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterEqualsImage">
            <summary>
            The name of the image used as the equals icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is Equals
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterNotLikeImage">
            <summary>
            The name of the image used as the NotLike icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is NotLike
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterGreaterThanImage">
            <summary>
            The name of the image used as the GreaterThan icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is GreaterThan
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterGreaterThanEqualsImage">
            <summary>
            The name of the image used as the GreaterThanEquals icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is GreaterThanEquals
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterLessThanImage">
            <summary>
            The name of the image used as the LessThan icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is LessThan
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterLessThanEqualsImage">
            <summary>
            The name of the image used as the LessThanEquals icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is LessThanEquals
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterContainsImage">
            <summary>
            The name of the image used as the Contains icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is Contains
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterDoesNotContainImage">
            <summary>
            The name of the image used as the DoesNotContain icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is DoesNotContain
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterStartsWithImage">
            <summary>
            The name of the image used as the StartsWith icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is StartsWith
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterDoesNotStartWithImage">
            <summary>
            The name of the image used as the DoesNotStartWith icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is DoesNotStartWith
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterEndsWithImage">
            <summary>
            The name of the image used as the EndsWith icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is EndsWith
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterDoesNotEndWithImage">
            <summary>
            The name of the image used as the DoesNotEndWith icon.
            </summary>
            <remarks>
            The image that will be displayed on the button inside of the filter row to show that the filter being used
            is DoesNotEndWith
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FilterImage">
            <summary>
            The name of the image used as the filter icon.
            </summary>
            <remarks>
            The image displayed in the header object which shows that row filtering can be done on the column.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ExpandImage">
            <summary>
            The name of the image used as the "expand rows" icon.
            </summary>
            <remarks>
            The image specified by this property is displayed beside any row that has child rows capable of being expanded. The usual appearance fo this icon is a small plus sign.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.CurrentRowImage">
            <summary>
            The name of the active row image.
            </summary>
            <remarks>
            The image specified by this property is displayed beside whatever row 
            is currently active in the grid. The usual appearance of this icon is a small triangle.<br/>
            The property can be overriden for individual bands using the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CurrentRowImage"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.CurrentEditRowImage">
            <summary>
            The name of the active editable row image.
            </summary>
            <remarks>
            The image specified by this property is displayed beside whatever row 
            is currently active in the grid that has template for editing the row. 
            The usual appearance of this icon is a small triangle with a pen.<br/>
            The property can be overriden for individual bands using the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.CurrentEditRowImage"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.NewRowImage">
            <summary>
            The name of the new row image.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.GroupByImage">
            <summary>
            The name of the group by image. (Used in down-level browser that do not support drag and drop).
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.UnGroupByImage">
            <summary>
            The name of the ungroup image.  (Used in down-level browser that do not support drag and drop).
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.GroupDownArrowImage">
            <summary>
            The name of the down arrow image.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.GroupUpArrowImage">
            <summary>
            The name of the up arrow image.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.SortAscendingImage">
            <summary>
            The name of the ascending sort image.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.SortDescendingImage">
            <summary>
            The name of the descending sort image.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.BlankImage">
            <summary>
            The name of the blank image.  (Used as a spacer inside of the RowSelector area of the grid).
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.RowLabelBlankImage">
            <summary>
            The name of the image for the row selectors.  (Used as a spacer inside of the RowSelector area of the grid).
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.GridCornerImage">
            <summary>
            The name of the image that will appear in the left upper corner of the grid.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FixedHeaderOffImage">
            <summary>
            Gets or sets the image that's used to draw the fixed header indicator when the header is not fixed.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.FixedHeaderOnImage">
            <summary>
            Gets or sets the image that's used to draw the fixed header indicator when the header is fixed.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ImageUrlsEx.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IResolveStyles">
            <summary>
            Style resolution interface.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IResolveStyles.Resolve(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Resolves the style of an UltraWebGrid cell.
            </summary>
            <param name="cell">The grid cell.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IResolveStyles.Resolve(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Resolves the style of an UltraWebGrid column.
            </summary>
            <param name="column">The grid column.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.IResolveStyles.Context">
            <summary>
            Contextual information about where the style resolution is being performed
            (for example, the header or footer of a column).
            </summary>
            <remarks>
            <p class="body">By default, all applicable styles should be resolved.  The
            <b>Context</b> property must be used, however, when a co-variant return value
            would be necessary.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ProcessRowParams">
            <summary>
            Parameter-passing record for Row exporting activities.
            </summary>
            <remarks>
            <p class="body">
            This class contains a set of flags governing export processing of the current <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow">Row</see>.
            </p>
            <p class="body">
            <seealso cref="T:Infragistics.WebUI.UltraWebGrid.IUltraGridExporter"/>
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ProcessRowParams.SkipDescendants">
            <summary>
            Specifies whether to skip the descendants of the current row.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ProcessRowParams.SkipSiblings">
            <summary>
            Specifies whether to skip sibling rows of the current row.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.ProcessRowParams.TerminateExport">
            <summary>
            Specifies whether to terminate the export process. Current row will not be processed.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IUltraGridExporter">
            <summary>
            Interface for exporting UltraWebGrid into alternative formats.
            </summary>
            <remarks>
            <p class="body">Implementation classes that facilitate the transformation
            of <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/> into alternative formats via any row-wise
            methodology should implement these methods:</p>
            <li>
            <ol>BeginExport</ol>
            <ol>ProcessRow</ol>
            <ol>EndExport</ol>
            </li>
            <p class="body">Please see the documentation for these interface methods for
            further details on the requirements and responsibilities of an implementation
            class.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IUltraGridExporter.BeginExport(Infragistics.WebUI.UltraWebGrid.UltraGridLayout,Infragistics.WebUI.UltraWebGrid.RowsCollection)">
            <summary>
            Starts the export process into an alternate format.
            </summary>
            <param name="exportLayout">Describes the desired layout destined for export.</param>
            <param name="rows">The rows which shall be exported.</param>
            <remarks>
            <p class="body">This method is called one time at the start of the export process to
            define the context for the export operations to follow.</p>
            <p class="body">Implementors need only make their "best-effort" to convert the desired
            <i>exportLayout</i> into the alternate format, as the destination format constrains those
            styles that can be exported from <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IUltraGridExporter.ProcessRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow,Infragistics.WebUI.UltraWebGrid.ProcessRowParams)">
            <summary>
            Exports the Row instance supplied.
            </summary>
            <param name="row">A row which will be exported into an alternate format.</param>
            <param name="processRowParams">Set of arguments governing the export.</param>
            <remarks>
            <p class="body">This method is called one time for each <i>row</i> supplied in
            the <i>rows</i> argument to <see cref="M:Infragistics.WebUI.UltraWebGrid.IUltraGridExporter.BeginExport(Infragistics.WebUI.UltraWebGrid.UltraGridLayout,Infragistics.WebUI.UltraWebGrid.RowsCollection)"/>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IUltraGridExporter.EndExport(System.Boolean)">
            <summary>
            Concludes the export processing.
            </summary>
            <param name="cancelled">Flag indicating whether the developer has aborted the export
            before all <i>rows</i> have been exported.</param>
            <remarks>
            <p class="body">This method is normally called when all of the <i>rows</i> defined
            in an earlier call to <see cref="M:Infragistics.WebUI.UltraWebGrid.IUltraGridExporter.BeginExport(Infragistics.WebUI.UltraWebGrid.UltraGridLayout,Infragistics.WebUI.UltraWebGrid.RowsCollection)"/> have been exported into the alternate
            format. In these circumstances, the <i>cancelled</i> parameter will always be False
            to indicate success.</p>
            <p class="body">An export operation may be cancelled prematurely by passing a True
            value in the <see cref="F:Infragistics.WebUI.UltraWebGrid.ProcessRowParams.TerminateExport">TerminateExport</see> of
            the <i>processRowParams</i> argument to <see cref="M:Infragistics.WebUI.UltraWebGrid.IUltraGridExporter.ProcessRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow,Infragistics.WebUI.UltraWebGrid.ProcessRowParams)"/>.  In this case,
            EndExport is called with a True value in its <i>cancelled</i> parameter.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">
            <summary>
            The UltraGridLayout is used to control the formatting and behavior of the grid. It also specifies the property settings that will be inherited by other objects in the grid.
            </summary>
            <remarks>
            <p class="body">UltraGridLayout is the central repository for properties affecting 
            the UltraWebGrid as a whole. Many of the properties of this class act as default 
            values for the grid, meaning that they will take effect unless overridden by an 
            object at a lower level of the object model.</p>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DisplayLayout"/> property of <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/> 
            is used to access the grid's <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> object. Within <b>UltraGridLayout</b> 
            there are also a number of collections and sub-objects that provide access to major 
            groups of functionality. The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Bands"/> collection and 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Rows"/> collection can be access here, as can the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Pager"/> object, <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AddNewBox"/> 
            object and others.</p>
            <p class="body">The properties of the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DisplayLayout"/> object can be set during the 
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeLayout"/> event. 
            This event is fired after the Bands and Columns collections have been populated but before Rows have been added within the <b>DataBind</b> method. Alternatively, you can set up the UltraGridLayout object during the <b>Load</b> event of the page.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.#ctor">
            <summary>
            The UltraGridLayout object determines the settings of various properties related 
            to the appearance and behavior of the object. The <b>UltraGridLayout</b> object 
            provides a simple way to maintain multiple layouts for the grid and apply them as 
            needed. 
            </summary>
            <remarks>
            You can also save grid layouts and restore them later.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ResetFrameStyle">
            <summary>
            Design time support for the reset option.
            </summary>
            <remarks>
            Resets the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> style off the layout.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ShouldSerializeFrameStyle">
            <summary>
            Design time support for the reset option.
            </summary>
            <returns>
            <b>true</b> if the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> object exists and should be serialized.
            </returns>
            <remarks>
            Determines if the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> style exists and any of its properties are set.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ResetImageUrls">
            <summary>
            Design time support for the reset option.
            </summary>
            <remarks>
            Resets the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ImageUrls"/> object off the layout.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ShouldSerializeImageUrls">
            <summary>
            Design time support for serialization.
            </summary>
            <returns>
            <b>true</b> if the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ImageUrls"/> object exists and should be serialized.
            </returns>
            <remarks>
            Determines if the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ImageUrls"/> object exists and any of its properties are set.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ResetImages">
            <summary>
            Design time support for the reset option.
            </summary>
            <remarks>
            Resets the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Images"/> object off the layout.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ShouldSerializeImages">
            <summary>
            Design time support for serialization.
            </summary>
            <returns>
            <b>true</b> if the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Images"/> object exists and should be serialized.
            </returns>
            <remarks>
            Determines if the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Images"/> object exists and any of its properties are set.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.setPager(Infragistics.WebUI.UltraWebGrid.Pager)">
            <summary>
            For internal use only.
            Sets new pager object.
            </summary>
            <param name="passInPager">Pager object to set.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadLayout(System.String)">
            <summary>
             <p class="body">Reads the Layout XML contained in the specified String object, either in its entirety, or only the style or behavior data contained in it.</p>
            </summary>
            <remarks>
            <p class="body">Use this method to load layout data for the control from an XML string previously created using the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SaveLayout(System.String)"/> method. Loading the layout changes the settings of the control's Layout object and modifies the appearance and behavior of the control accordingly. The user may not see the changes applied to the grid until a postback is performed.</p>
            <p class="body">This version of the LoadLayout method loads all information contained in the xml file and applies it to the DisplayLayout of the grid.</p>
            </remarks>
            <param name="xmlString">A string variable containing the XML that will be parsed and loaded into the grid. See the corresponding string version of SaveLayout for a method that saves the DisplayLayout object to and Xml string.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadLayout(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
             <p class="body">Reads the Layout XML contained in the specified String object, either in its entirety, or only the style or behavior data contained in it.</p>
            </summary>
            <remarks>
            <p class="body">Use this method to load layout data for the control from an XML string previously created using the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SaveLayout(System.String)"/> method. Loading the layout changes the settings of the control's Layout object and modifies the appearance and behavior of the control accordingly. The user may not see the changes applied to the grid until a postback is performed.</p>
            </remarks>
            <param name="xmlString">
            The string that contains XML formed layout to load.
            </param>
            <param name="bReadStyles">
            <p class="body">A Boolean value that determines whether the style 
            data contained in the XML should be read. Specify True to read 
            the style data. Style data includes colors, fonts borders, etc.</p>
            </param>
            <param name="bReadBehaviors">
            <p class="body">A Boolean value that determines whether the behavior 
            data contained in the XML should be read. Specify True to read the 
            behavior data. Behavior data includes whether to allow column sorting, 
            whether to allow column moving, cell click action, etc.</p>
            </param>
            <param name="bReadColumns">
            <p class="body">A Boolean value that determines whether the column 
            and band data contained in the XML should be read. Specify True to 
            read column and band data. </p>
            </param>
            <param name="bReadData">
            <p class="body">A Boolean value that determines whether row and cell 
            data contained in the XML should be read. Specify True to read the 
            row and cell data.</p>
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadLayout(System.Xml.XmlTextReader)">
            <summary>
            <p class="body">Reads the Layout XML contained in the specified XmlTextReader object, either in its entirety, or only the style or behavior data contained in it.</p>
            </summary>
            <remarks>
            <p class="body">Invoke this method to read the layout XML contained in an XmlTextReader object, specified by the <i>xmlReader</i> parameter. Loading the layout changes the settings of the control's Layout object and modifies the appearance and behavior of the control accordingly. The user may not see the changes applied to the grid until a postback is performed.</p>
            </remarks>
            <param name="xmlReader">
            <p class="body">An XmlTextReader object containing the layout data to be read. This version of the LoadLayout method loads all information contained in the xml file and applies it to the DisplayLayout of the grid.</p>
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadLayout(System.Xml.XmlTextReader,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            <p class="body">Reads the Layout XML contained in the specified XmlTextReader object, either in its entirety, or only the style or behavior data contained in it.</p>
            </summary>
            <remarks>
            <p class="body">Invoke this method to read the layout XML contained in an XmlTextReader object, specified by the <i>xmlReader</i> parameter. Loading the layout changes the settings of the control's Layout object and modifies the appearance and behavior of the control accordingly. The user may not see the changes applied to the grid until a postback is performed.</p>
            </remarks>
            <param name="xmlReader">
            <p class="body">An XmlTextReader object containing the layout data to be read.</p>
            </param>
            <param name="bReadStyles"><p class="body">A Boolean value that determines whether the style data contained in the XML should be read. Specify True to read the style data. Style data includes colors, fonts borders, etc.</p></param>
            <param name="bReadBehaviors"><p class="body">A Boolean value that determines whether the behavior data contained in the XML should be read. Specify True to read the behavior data. Behavior data includes whether to allow column sorting, whether to allow column moving, cell click action, etc.</p></param>
            <param name="bReadColumns"><p class="body">A Boolean value that determines whether the column and band data contained in the XML should be read. Specify True to read column and band data. </p></param>
            <param name="bReadData"><p class="body">A Boolean value that determines whether row and cell data contained in the XML should be read. Specify True to read the row and cell data.</p></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SaveLayout(System.String)">
            <summary>
            Writes the property settings contained in the UltraGridLayout object to an XML file.  The XML file can then be loaded again at a later time to restore the current appearance and behavior of the grid.
            </summary>
            <remarks>
            <p class="body">You can save the layout of the grid for use at a later time, either to restore the current state of the grid or to provide a selection of distinct states that the application or the user can apply as needed. This form of the SaveLayout method saves all information in the Layout object, including styles, behaviors, bands and columns, and rows and cells.</p>
            <p class="body">Use the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadLayout(System.String)"/> method to restore the grid's layout from a saved file.</p>
            </remarks>
            <param name="filename"><p class="body">The filename of the XML file to be created. This must be a path on the sever that is accessible to the web application.</p></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SaveLayout(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Writes the property settings contained in the UltraGridLayout object to an XML file.  The XML file can then be loaded again at a later time to restore the current appearance and behavior of the grid.
            </summary>
            <remarks>
            <p class="body">You can save the layout of the grid for use at a later time, either to restore the current state of the grid or to provide a selection of distinct states that the application or the user can apply as needed. When creating the XML file, you can choose whether it should contain all Layout data, only the style-related settings, or only the behavior-related settings.</p>
            <p class="body">Use the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadLayout(System.String)"/> method to restore the grid's layout from a saved file.</p>
            </remarks>
            <param name="filename"><p class="body">The filename of the XML file to be created. This must be a path on the sever that is accessible to the web application.</p></param>
            <param name="bWriteStyles"><p class="body">A Boolean value that determines whether the style data contained in the UltraGridLayout object should be written into the file. Specify True to write the style data. Style data includes colors, fonts borders, etc.</p></param>
            <param name="bWriteBehaviors"><p class="body">A Boolean value that determines whether the behavior data contained in the UltraGridLayout object should be written into the file. Specify True to write the behavior data. Behavior data includes whether to allow column sorting, whether to allow column moving, cell click action, etc.</p></param>
            <param name="bWriteColumns"><p class="body">A Boolean value that determines whether the band and column data contained in the UltraGridLayout object should be written into the file. Specify True to write the band and column data. </p></param>
            <param name="bWriteData"><p class="body">A Boolean value that determines whether the row and cell data contained in the UltraGridLayout object should be written into the file. Specify True to write the row and cell data. </p></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SaveLayout">
            <summary>
            Writes the property settings contained in the UltraGridLayout object to an XML string 
            and returns a reference to the string. The string returned can then be used again at 
            a later time to restore the current appearance and behavior of the grid
            </summary>
            <returns>
            String representation of XML formed layout of the grid.
            </returns>
            <remarks>
            <p class="body">
            You can save the layout of the grid for use at a later time, either to restore the 
            current state of the grid or to provide a selection of distinct states that the 
            application or the user can apply as needed. This version of the SaveLayout method 
            saves the information in the Layout object, including styles, behaviors, bands and 
            columns, and rows and cells.
            </p>
            <p class="body">
            Column templates will not be saved to the Layout.
            </p>
            <p class="body">
            Use the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadLayout(System.String)"/> method to restore the grid's layout from an XML 
            string.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SaveLayout(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Writes the property settings contained in the UltraGridLayout object to an XML string 
            and returns a reference to the string. The string returned can then be used again at a 
            later time to restore the current appearance and behavior of the grid
            </summary>
            <returns>
            String representation of XML formed layout of the grid.
            </returns>
            <remarks>
            <p class="body">
            You can save the layout of the grid for use at a later time, either to restore the 
            current state of the grid or to provide a selection of distinct states that the 
            application or the user can apply as needed. This version of the SaveLayout method 
            saves the information in the Layout object, including styles, behaviors, bands and 
            columns, and rows and cells.
            </p>
            <p class="body">
            Column templates will not be saved to the Layout.
            </p>
            <p class="body">
            Use the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadLayout(System.String)"/> method to restore the grid's layout from an XML 
            string.
            </p>
            </remarks>
            <param name="bWriteStyles">
            A Boolean value that determines whether the style data contained in the 
            UltraGridLayout object should be written into the string. Specify True to write the 
            style data. Style data includes colors, fonts borders, etc.
            </param>
            <param name="bWriteBehaviors">
            A Boolean value that determines whether the behavior data contained in the 
            UltraGridLayout object should be written into the string. Specify True to write the 
            behavior data. Behavior data includes whether to allow column sorting, whether to 
            allow column moving, cell click action, etc.
            </param>
            <param name="bWriteColumns">
            A Boolean value that determines whether the band and column data contained in the 
            UltraGridLayout object should be written into the string. Specify True to write the 
            band and column data.
            </param>
            <param name="bWriteData">
            A Boolean value that determines whether the row and cell data contained in the 
            UltraGridLayout object should be written into the string. Specify True to write the 
            row and cell data.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SaveLayout(System.Xml.XmlTextWriter)">
            <summary>
            Writes the property settings contained in the UltraGridLayout object to an XmlTextWriter object. The XML file that is created can then be loaded again at a later time to restore the current appearance and behavior of the grid.
            </summary>
            <remarks>
            <p class="body">
            You can save the layout of the grid for use at a later time, either to restore the 
            current state of the grid or to provide a selection of distinct states that the 
            application or the user can apply as needed. This version of the SaveLayout method 
            saves the information in the Layout object, including styles, behaviors, bands and 
            columns, and rows and cells.
            </p>
            <p class="body">
            Column templates will not be saved to the Layout.
            </p>
            <p class="body">
            Use the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadLayout(System.String)"/> method to restore the grid's layout from an XML 
            string.
            </p>
            </remarks>
            <param name="xmlWriter">The XmlTextWriter object that will be used to create the XML file.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SaveLayout(System.Xml.XmlTextWriter,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Writes the property settings contained in the UltraGridLayout object to an XmlTextWriter object. The XML file that is created can then be loaded again at a later time to restore the current appearance and behavior of the grid.
            </summary>
            <remarks>
            <p class="body">
            You can save the layout of the grid for use at a later time, either to restore the 
            current state of the grid or to provide a selection of distinct states that the 
            application or the user can apply as needed. This version of the SaveLayout method 
            saves the information in the Layout object, including styles, behaviors, bands and 
            columns, and rows and cells.
            </p>
            <p class="body">
            Column templates will not be saved to the Layout.
            </p>
            <p class="body">
            Use the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadLayout(System.String)"/> method to restore the grid's layout from an XML 
            string.
            </p>
            </remarks>
            <param name="xmlWriter">The XmlTextWriter object that will be used to create the XML file.</param>
            <param name="bWriteStyles"><p class="body">A Boolean value that determines whether the style data contained in the UltraGridLayout object should be written into the file. Specify True to write the style data. Style data includes colors, fonts borders, etc.</p></param>
            <param name="bWriteBehaviors"><p class="body">A Boolean value that determines whether the behavior data contained in the UltraGridLayout object should be written into the file. Specify True to write the behavior data. Behavior data includes whether to allow column sorting, whether to allow column moving, cell click action, etc.</p></param>
            <param name="bWriteColumns"><p class="body">A Boolean value that determines whether the band and column data contained in the UltraGridLayout object should be written into the string. Specify True to write the band and column data.</p></param>
            <param name="bWriteData"><p class="body">A Boolean value that determines whether the row and cell data contained in the UltraGridLayout object should be written into the string. Specify True to write the row and cell data. </p></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> object.
            </summary>
            <returns>
            The returned value is always an empty string.
            </returns>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the Layout class to their default values.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Clone">
            <summary>
            Clones the Layout object, returning a new, identical <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> object.
            </summary>
            <returns>
            New <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> object with property values identical to the current object.
            </returns>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CopyFrom(Infragistics.WebUI.UltraWebGrid.UltraGridLayout)">
            <summary>
            Copies the settings of the passed-in object to the current object. Any settings in the current object will be overwritten.
            </summary>
            <param name="passin">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> object to copy from.
            </param>
            <returns>
            The target object where the all property values were copied, that is the current object.
            </returns>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the layout.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The layout don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
            <remarks>
            The layout don't have any attributes. This method always returns -1.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The layout don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
            <remarks>
            The layout don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the layout. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the layout.
            </summary>
            <returns>
            The Layout is always the first sibling. Self is always returned.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            The bands collection is the next sibling.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Gets the previous sibling of the layout.
            </summary>
            <returns>
            Null is always returned.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the layout's parent node.
            </summary>
            <returns>
            UltraWebGrid object.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the layout.
            </summary>
            <returns>
            Null is always returned.
            </returns>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.preregStyles">
            <summary>
            Keeps styles to register if a style is being registered before style repository is created
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.preregRowStyles">
            <summary>
            Keeps styles to register if a style is being registered on the rows or cells before style repository is created
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#InitializeStyles">
            <summary>
            Registers all styles with the style repository.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance
            </summary>
            <remarks>The method works closely with the style repository.</remarks>
            <param name="role">Defines the role of the style to return.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#GetObjectRoleClassName(Infragistics.WebUI.UltraWebGrid.GridStyleRole,System.Boolean)">
            <summary>
            Composes class name for the object and role base on current optimization 
            option and the object's inheritance. The boolean parameter will determine if the
            parents' class names need to be inserted.
            </summary>
            <param name="role">Defines the role of the style to return.</param>
            <param name="withParents">Determines if the parents' class names need to be inserted.</param>
            <returns>Composed string of class names</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Rows">
            <summary>
            Returns a collection of the topmost level of rows in the grid. 
            </summary>
            <remarks>
            This collection will either contain all the rows in Band 0 or 
            the top level of GroupBy rows (if GroupBy rows are being used.)
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Version">
            <summary>
            Internal use to be able to determine the first time a grid is place on a form in the version.
            </summary>
            <remarks>
            Currently used at design time only.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectTypeCellDefault">
            <summary>
            Specifies the way cells can be selected on the client. This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            <p class="body">This property specifies how the user can select cells. Available settings include None, Single and Extended. Users can be prevented from selecting cells, may select one cell at a time, or select multiple cells in a rectangular region, depending on the setting of this property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectTypeRowDefault">
            <summary>
            Specifies the way rows can be selected on the client. This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            <p class="body">This property specifies how the user can select rows. Available settings include None, Single and Extended. Users can be prevented from selecting rows, may select one row at a time, or select multiple contiguous rows, depending on the setting of this property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectTypeColDefault">
            <summary>
            Specifies the way columns can be selected on the client. 
            This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            <p class="body">This property specifies how the user can select columns. 
            Available settings include <b>None</b>, <b>Single</b> and <b>Extended</b>. Users can be prevented from 
            selecting columns, may select one column at a time, or select multiple contiguous 
            columns, depending on the setting of this property.</p>
            <p class="body">In the case when the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowColumnMovingDefault"/> property is set to allow 
            column moving or the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ViewType"/> property is set to allow grouping by columns and columns 
            selection is allowed the selection will take precedence over other actions. To be able to move or 
            group by columns users can hold down the CTRL key while moving the columns' headers.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle">
            <summary>
            An <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that contains the style properties for the control's frame. 
            </summary>
            <remarks>
            <p class="body">Use this property to provide a custom style for the frame of the control. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            <p class="body">Some properties of this style are used as base properties for all other styles. They include: background color, font, foreground color, cursor, horizontal and vertical alignment, and word wrap.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.IndentationDefault">
            <summary>
            Determines the amount of indenting used for bands. This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            <p class="body">You can use the <b>IndentationDefault</b> property to specify how much indenting should be applied to bands 
            beyond the default indenting done by the control. The default value for this property is 22. The minimumn indentation value 
            is also determined by the width of the igtbl_blank.gif image.</p>
            <p class="body">Setting the property to zero is also supported. In this case the expansion indicators area is removed from view. 
            Setting it here will hide it for all bands. The feature is useful for removing last band's expansion area as it is not being used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.GroupByRowDescriptionMaskDefault">
            <summary>
            A string that determines what text is shown in GroupBy rows. This is the default value that may be overridden by 
            individual bands.
            </summary>
            <remarks>
            The <b>GroupByRowDescriptionMaskDefault</b> property can include special substitution strings that will be replaced with 
            information from the grid. For example, you can use them to specify child row count of a GroupBy row. By default, the 
            <tt>[caption]</tt>, <tt>[value]</tt>, and <tt>[count]</tt> substitution strings are set. The column header text gets 
            placed into the <tt>[caption]</tt> field, the common cell value gets placed into the <tt>[value]</tt> field, and the 
            number of rows sharing the common value is placed into the <tt>[count]</tt> field.<br/>
            Other avalable patterns are: [avg], [sum], [min], [max] - for the column it's grouped by.<br/>
            And [avg:ColumnKey], [sum:ColumnKey], [min:ColumnKey], [max:ColumnKey] - for any other column in the band, where ColumnKey
            is the key of the column you want to get the results for.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasImageUrls">
            <summary>
            Determines whether images were changed in the grid.
            </summary>
            <remarks>
            <p class="body">When this property is set to True, some images in the grid have been changed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ImageUrls">
            <summary>
            Object holder for images of the grid.
            </summary>
            <remarks>
            The object accumulates all images that can be set in the grid. Its properties are just reflections of the actual image properties.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasImages">
            <summary>
            Determines whether images were changed in the grid.
            </summary>
            <remarks>
            <p class="body">When this property is set to True, some images in the grid have been changed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Images">
            <summary>
            Object holder for images of the grid.
            </summary>
            <remarks>
            The object accumulates all images that can be set in the grid. Its properties are just reflections of the actual image properties.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.JavaScriptFileName">
            <summary>
            The base name and path for the JavaScript files that are used for client side behavior. 
            </summary>
            <remarks>
            The root name of the file, (ig_WebGrid) is used as the base for determining the other files that are contain related functionality. 
            If this root file name is changed, then all other file names must be changed as well.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.JavaScriptFileNameCommon">
            <summary>
            The relative path to the common javascript file.
            </summary>
            <remarks>
            The common javascript file is the javascript that is used through out all NetAdvantage controls on the client side.
            To control location of the grid's javascript files use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.JavaScriptFileName"/> property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ExpandableDefault">
            <summary>
            Returns or sets a value that determines if bands are expandable by default. This is the default value that may be overridden 
            by individual bands.
            </summary>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Expandable"/> property determines whether 
            the rows in a band can be expanded. If set to Expandable.No the row expansion (plus/minus) indicators will not be shown.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.MergeStyles">
            <summary>
            Indicates whether styles should be merged from parent to child.
            </summary>
            <remarks>
            <p class="body">This property determines whether the grid will attempt to resolve the styles applied to objects in a hierarchical fashion. If set to True, the style applied to an object will be mereged with the styles applied to the object's parent object to determine the appearance of the object. For example, the style for a Cell would be merged with styles for the Row and Band.</p>
            <p class="body">When this property is set to False, styles will not be merged and each object will be formatted individually, according to the settings of its own GridItemStyle object or objects, as returned by any of the object's properties that use the word "Style".</p>
            <br clear="ALL"/>
            <ol style='margin-top:0in' start="1" type="1">
            <br clear="ALL"/>
            <li class="body" style='margin-left:.5in;text-indent:-.25in'>Inherits only background, font, color, cursor, text-align, vertical-align and white-space.</li>
            <li class="body" style='margin-left:.5in;text-indent:-.25in'>Height is also inherited.</li>
            <li class="body" style='margin-left:.5in;text-indent:-.25in'>Inherits all except font, margin and padding.</li>
            <li class="body" style='margin-left:.5in;text-indent:-.25in'>Inherits only properties that were not inherited from another parent.</li>
            </ol>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Name">
            <summary>
            The name of the control.
            </summary>
            <remarks>
            The property is the actual name that is used to render the control's 
            ids down to the client. It is formed from the control's <b>ClientID</b> 
            by replacing all '_' (underscores) with 'x'.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowSortingDefault">
            <summary>
            Specifies whether the user can sort columns.  This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            This property determines whether the user can sort the data in the band based on the values present in a column.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowAlternateStyleDefault">
            <summary>
            The default style that will be appplied to alternate (even numbered) rows. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to alternate rows. You can use this style to provide a distinct appearance for odd and even rows, making it easier for the user to read the data in the grid and distinguish between data records.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellPaddingDefault">
            <summary>
            The amount of cell padding to use when rendering the grid. This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            Cell padding is the amount of white space between the borders of the cell and the cell's contents. To specify the amount of space separating cells from one another, use <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellSpacingDefault"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellSpacingDefault">
            <summary>
            The amount of cell spacing to use when rendering the grid. This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            Cell spacing is the amount of space separating cells from one another. To specify the amount of white space between the borders of the cell and the cell's contents, use <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellPaddingDefault"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasClientSideEvents">
            <summary>
            Indicates whether client-side events are active for the grid.
            </summary>
            <remarks>
            The property is <b>true</b> if no client side events are set and the object was never accessed.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ClientSideEvents">
            <summary>
            Object holder for client-side event names.
            </summary>
            <remarks>
            <p class="body">Client-side events are events that occur in the web-browser, such as mouse-related events. Because the events are local to the browser, they must be implemented in JavaScript. Client-side events do not require a new connection to the server or a refresh of the current page. The other type of events found in the UltraWebGrid are <i>server-side events.</i> These events require the browser to make a new connection with the server in response to some event that occurs at the control level on the server, such as the addition of a new row of data.</p>
            <p class="body">When you are implementing client-side events in your application, your JavaScript routines should use the names provided by the <b>ClientSideEvents</b> property.</p>
            In CLR2 builds of the control this property is ReadOnly in order to better support themeing.  If this property was being set, the code in
            question will now have to reset the existing layout object and set the changes to initial object.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Bands">
            <summary>
            A collection of Band objects. When used at the grid level, the collection includes all the Band objects in the control.
            </summary>
            <remarks>
            The Bands collection contains all of the Band objects in the grid. Each Band object represents a single level of a hierarchical data set.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Pager">
            <summary>
            Returns the <see cref="T:Infragistics.WebUI.UltraWebGrid.Pager"/> object assoicated with the grid.
            </summary>
            <remarks>
            <p class="body">If the browser being used to view the grid data supports the use of an embedded scrolling grid, all the grid data can be displayed on a single web page with no problem. However, if the browser does not support a scrolling grid (or if you choose not to use one) then multiple rows of grid data will be displayed on multiple web pages, with a fixed number of grid rows appearing on each page. In this situation, the <see cref="T:Infragistics.WebUI.UltraWebGrid.Pager"/> object handles the details of rendering those pages, and of handling user navigation of the data set.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.EditCellStyleDefault">
            <summary>
            Specifies the style applied to the cell when it is in edit mode. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property is used to specify the appearance of the cell that is in edit mode. (The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveCell"/> property indicates which cell is currently active; a cell that is being edited is always the active cell.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FooterStyleDefault">
            <summary>
            The default style that will be applied to column footers in the band. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all the column footers in the band. The style may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.GridLinesDefault">
            <summary>
            Specifies which cell borders should be shown in the band. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Use this property to quickly format the display of the lines separating the cells in the grid. You can choose to show horizontal lines, vertical lines, both or neither.</p>
            <p class="note"><b>Note</b> In order for the grid lines to appear at all, it is necessary to have the Border Style, Color and/or Width set in the RowStyleDefault property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HeaderStyleDefault">
            <summary>
            The default style that will be applied to headers. This is the default value that may be overridden by individual bands or columns.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all column headers. The style may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowsRange">
            <summary>
            The number of rows that are retrieved at a time when the XML rendering is in progress.
            </summary>
            <remarks>
            This property is responsible for the rows payload from server to client when the XML rendering is used. Applies to Band 0 only.
            The rows range equals to the number of rows that are brought from server to client per each HTTP XML request.
            Initial number of rows and number of requested rows during scrolling depends on this value.
            Default value is 50. Value of -1 means no restriction on the rows payload are applied.		
            <p>
            When using LoadOnDemand.Xml in conjunction with Paging, the RowsRange should be set to the same value as the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.PageSize"/>.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowSelectorStyleDefault">
            <summary>
            The default style that will be applied to row selectors. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all the row selectors. The style may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedHeaderStyleDefault">
            <summary>
            The default style that will be applied to selected headers. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all selected headers. The style may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowStyleDefault">
            <summary>
            The default style that will be applied to rows. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all the rows. The style may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.GroupByRowStyleDefault">
            <summary>
            The style used to format the GroupBy rows in the band. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Use this property to provide a default style for GroupBy rows. Common style attributes that can be adjusted include: forecolor, backcolor, font, and alignment. You can use different styles to provide a consistent look throughout your application, enhance the appearance of certain areas of the grid, or to call attention to important data.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedGroupByRowStyleDefault">
            <summary>
            The default style that will be applied to GroupBy rows that are selected. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all selected GroupBy rows. The style may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedRowStyleDefault">
            <summary>
            The default style that will be applied to rows that are selected. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all selected rows. The style may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveRow">
            <summary>
            Returns or sets the active row. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">Use the <b>ActiveRow</b> property to determine which row is currently active, or change which row is currently active. If you assign an UltraGridRow object to the <b>ActiveRow</b> property, the specified row will become active.</p>
            <p class="body">Only one row at a time may be the active row. The active row contains the active cell, which is the cell that will receive input focus when the Grid goes into edit mode. You can determine which cell is the active cell using the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveCell"/> property.</p>
            <p class="body">Note that changing the active row may have implications for the user, particularly if a cell is in edit mode. Changing the active row will also change the active cell. The <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveRowChange"/> event occurs when the active row is about to change. The <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveCellChange"/>event will also occur i response to a change inthe active cell.</p>
            <p class="body">If no row is active, this property will return null (Nothing). To deactivate the active row, set this property to null or Nothing.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActiveCell">
            <summary>
            Returns or sets the active cell. This property is not available at design-time.
            </summary>
            <remarks>
            <p class="body">Use the <b>ActiveCell</b> property to determine which cell is currently active, or change which cell is currently active. If you assign an UltraGridCell object to the <b>ActiveCell</b> property, the specified cell will become active. Only one cell at a a time may be the active cell; the active cell is the one which currently has the input focus. A cell that is being edited is wlways the active cell.</p>
            <p class="body">Note that changing the active cell may have implications for the user, particularly if the cell is in edit mode. Changing the active cell may also change the active row. The <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveCellChange"/> event occurs when the active cell is about to change. If the active row also changes, the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveRowChange"/>event will also occur.</p>
            <p class="body">If no cell is active, this property will return null (Nothing). To deactivate any active cell in the grid, set this property to null or Nothing.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowAddNewDefault">
            <summary>
            Determines whether the user is allowed to add a new row of data.  This is the default value for the grid and may be overridden by individual bands.
            </summary>
            <remarks>
            <p class="body">This property determines whether the user can add new rows to the data in the band or the grid. This property also controls the appearance of the buttons in the AddNew box. If <b>AllowAddNew</b> is set to AllowAddNew.No for a particular band, that band's button will be disabled in the AddNew box. This prevents the user from adding new data to the specified band.</p>		
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowDeleteDefault">
            <summary>
            Determines whether the user is allowed to delete rows. This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            This property determines whether the user can delete rows of data from the band or the grid. It does not control the deletion of data within individual cells (field-level deletion) only the removal of complete records from the data source (record-level deletion).
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowRowNumberingDefault">
            <summary>
            Determines whether the <b>UltraWebGrid</b> will render row numbers on the <b>RowSelectors</b>, 
            and if so, which numbering schema it will use.
            </summary>
            <remarks>
            Different types of row numbering can be applied to the grid. See the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowNumbering"/> enumeration for more information.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.EnableClientSideRenumbering">
            <summary>
            Gets or sets whether or not row renumbering will be done on the client side.
            </summary>
            <remarks>
            The property allows to increase performance on the client if set to <b>false</b>.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowUpdateDefault">
            <summary>
            Determines whether the user is allowed to update data. This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            This property determines whether to permit changes to the data displayed in the band or the grid. All data entry functionality is disabled when <b>AllowUpdate</b> is set to False. Cell contents cannot be edited. Users can still view data, select all or part of it and copy it to the clipboard. They can also re-arrange the layout of the grid by moving and resizing columns, groups, rows, etc. (provided these features are not also disabled using the appropriate properties.)
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowColSizingDefault">
            <summary>
            Determines whether the user is allowed to change the width of columns. This is the default value 
            that may be overridden by individual bands.
            </summary>
            <remarks>
            <p class="body">
            The <b>AllowColSizingDefault</b> property specifies how column resizing will be handled in the grid. 
            When <b>AllowColSizingDefault</b> is set to AllowSizing.Fixed, no resizing is allowed. When 
            <b>AllowColSizingDefault</b> is set to AllowSizing.Free, columns can be resized on the client. 
            Setting the <b>TableLayout</b> property to TableLayout.Fixed provides ability to resize columns 
            regardless of the data that is inside their cells. If the property is set to TableLayout.Auto, 
            columns can be resized only within the free space, that is not occupied by cells' data.
            </p>
            <p class="body">
            Column sizing is not supported for grids with <a href="WebGrid_Using_a_Multi_Column_Header.html">
            header layouts</a>. It is recommended that you set this property to
            <see cref="T:Infragistics.WebUI.UltraWebGrid.AllowSizing">AllowSizing.Fixed</see> if you are using header layouts. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowSizingDefault">
            <summary>
            Specifies whether and how the user can change the height of the rows. This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            <p class="body">The <b>RowSizing</b> property specifies whether the user can resize rows using the mouse in the band or the grid and, if they can, how that resizing is accomplished. The grid can also resize rows automatically, based on the amount of data present in the cells that make up the row. If one cell contains a large amount of text, the row can be resized to accommodate all the text, or a particular number of lines of text, provided the cell is capable of displaying multiple lines of text. The <b>RowSizing</b> property also determines whether rows are resized independently of one another, or whether their heights are synchronized.</p>
            <p class="body">When using one of the auto-sizing settings, the size of each row is determined by the number of lines of text required to display the contents of a cell. The cell in the row that displays the most lines of text determines the size of the entire row. The <b>CellMultiLine</b> property is used to specify whether the text in a cell will wrap to multiple lines.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ColWidthDefault">
            <summary>
            The default width of columns in the control, in Units.
            </summary>
            <remarks>
            <p class="body">This default value may be overridden at the band level or the column level. At the band level, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.DefaultColWidth"/> property controls the default width of columns added to the band. At the column level, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Width"/> property specifies the width of the individual column.</p>
            <p class="body">The default value for this property is 100 (pixels).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasRowAlternateStyleDefault">
            <summary>
            Determines if a style has been applied to alternate grid rows at the band level. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for alternate (even-numbered) grid rows has been set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowAlternateStyleDefault"/> property.) If False, the style of alternate rows will be inherited (or taken from the band or the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property of the UltraGridRow object.</p>
            </remarks>	
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasSelectedHeaderStyleDefault">
            <summary>
            Determines if a style for selected column headers has been applied at the band level. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for selected column headers has been set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedHeaderStyleDefault"/> property.) If False, the style of selected headers will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasRowSelectorStyleDefault">
            <summary>
            Determines if a style has been applied to the row selectors at the band level. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for the row selectors has been set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowSelectorStyleDefault"/> property.) If False, the row selector style will be inherited (or taken from the band or the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.RowSelectorStyle"/> property of the UltraGridRow object.</p>
            </remarks>	
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasEditCellStyleDefault">
            <summary>
            Determines if a style has been applied to the edit cell. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if the edit cell style has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.EditCellStyleDefault"/> property.) If False, the edit cell has no style of its own and its appearance will be inherited.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasFrameStyle">
            <summary>
            Determines if a style has been applied to the control's frame.
            </summary>
            <remarks>
            <p class="body">Returns True if the style of the control's frame has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> property. If False, the frame has no style of its own and it will use the default appearance.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasHeaderStyleDefault">
            <summary>
            Determines if a style has been applied to the band header. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if the default header style has been specifically set (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HeaderStyleDefault"/> property. If False, the band header has no style of its own and its appearance will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasFooterStyleDefault">
            <summary>
            Determines if a style has been applied to the column footers at the layout level. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for the column footers has been specifically set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FooterStyleDefault"/> property.) If False, the column footer style will be inherited (or taken from the band or the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterStyle"/> property of the UltraGridColumn object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasRowStyleDefault">
            <summary>
            Determines if a style has been applied to rows at the band level. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for rows has been set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowStyleDefault"/> property.) If False, the style of the band's rows will be inherited (or taken from the band or the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property of the UltraGridRow object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasRowExpAreaStyleDefault">
            <summary>
            Determines if a style has been applied to rows. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for rows has been set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowExpAreaStyleDefault"/> property.) If False, the style of the band's rows will be inherited (or taken from the band.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasSelectedRowStyleDefault">
            <summary>
            Determines if a style for selected rows has been applied at the band level. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for selected rows has been set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedRowStyleDefault"/> property.) If False, the style of selected rows will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasGroupByRowStyleDefault">
            <summary>
            Determines if a style has been applied to GroupBy rows at the layout level.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for GroupBy rows has been specifically set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.GroupByRowStyleDefault"/> property.) If False, the style of GroupBy rows will be inherited (or taken from the band or the overriding <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Style"/> property of the UltraGridRow object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasSelectedGroupByRowStyleDefault">
            <summary>
            Determines if a style for selected GroupBy rows has been applied at the band level. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for selected GroupBy rows has been set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedGroupByRowStyleDefault"/> property.) If False, the style of selected GroupBy rows will be inherited.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.NullTextDefault">
            <summary>
            Specifies how null values will be represented in the grid. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property spcifies a string value that will be displayed in a grid cell whenever a null value is received for that cell from the back end. The default setting is to use an empty string (""). However, you can specify any string you want, such as the words "null" or "empty".</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowHeightDefault">
            <summary>
            The default height that will be appplied to all rows. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default height that will be applied to all rows. The style may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.IndentationTypeDefault">
            <summary>
            <p class="body">Returns or sets an enumerated value that determines how data grid's rows are indented.</p>
            </summary>
            <remarks>
            <p class="body">Setting the property to NonIndented allows to have the child rows not to be indented from its parents.
            This property controls overall grid behavior. Individual bands can have different settings of the property to override.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.TableLayout">
            <summary>
            Specifies the type of CSS table layout in effect.
            </summary>
            <remarks>
            <p class="body">If this value is set to <b>Auto</b>, the heights and widths of rows and columns
            are interpreted by the browser as if they were recommendations. The browser may still make adjustments
            to the table layout, as needed, for displaying the maximum amount of information. Ordinarily, this is
            the default (see note about stationary margins and fixed columns below).</p>
            <p class="body">If this property value is set to <b>Fixed</b>, the browser will treat all row and column
            dimensions (height and width) as requirements, forcing them to their specified values (if any).</p> 
            <p class="body">The grid requires the table layout to be <b>Fixed</b> when the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.StationaryMargins"/>
            or <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.UseFixedHeaders"/> feature is used.</p>
            <p class="body">This option is only effective when rendering to up-level browsers.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Tag">
            <summary>
            A field for storing user-defined, object-related information.
            </summary>
            <remarks>
            Any additional information can be set to this property. It is maintained in the view state if possible.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ViewType">
            <summary>
            Specifies how the grid will display data.
            </summary>
            <remarks>
            <p class="body">This property specifies the type of view that will be used to display data in the grid. Available settins are Flat, Heirarchical, and Outlook GroupBy. If this property is set to Flat, non-hierarchical data will be displayed, and only Band 0 of the grid will be used. Even if multiple relations are present in the datasource, the grid will display only the first band of data. Hierarchical is the standard multi-band view of grid data, with rows expanding and collapsing to reveal records from related tables that correspond to the visible records in the top-level band. Outlook GroupBy uses the grouping metaphor found in Microsoft Outlook to display records grouped by criteria under common headings that can be expanded or collasped.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowSelectorsDefault">
            <summary>
            Specifies whether row selectors will be displayed. This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            <p class="body">This property specifies the default visibility for row selectors. This setting may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellClickActionDefault">
            <summary>
            Specifies what action will occur when a cell is clicked. This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            <p class="body">This property specifies what will occur when the user navigates through the grid by clicking on cells in the band or the grid. You can choose whether cells that are clicked will put the cell into edit mode or select the cell or its row. Depending on your application, you may want the user to edit any cell just by clicking on it, or you may want to require a separate action to trigger cell editing, such as double-clicking or a keystroke combination. Similarly, you can choose whether cells should be individually selectable, or if selecting the row is a sufficient response to clicking on a cell.</p>
            <p class="body">Note that how selection behaves on the client side depends heavily on the capabilities fo the browser. In downlevel browsers, the grid will be rendered using standard HTML, and HTML selection rules will apply.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Grid">
            <summary>
            Returns a reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/> object that contains the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout">Layout</see>.
            </summary>
            <remarks>
            This is the back reference to the grid that contains the layout.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ColFootersVisibleDefault">
            <summary>
            Determines whether to show column footers.  This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            <p class="body">Column footers can be enabled for a band, providing a convenient way 
            to display column-related information. For example, you can display the total 
            of a column of figure, or the number of items checked in a checkbox column.</p>
            <p class="body">When you enable column footers for a band, the footers will appear, 
            but you must still specify what information they will contain. You can do this 
            through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterText"/> property and/or <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FooterTotal"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ColHeadersVisibleDefault">
            <summary>
            Determines whether to show column headers.  This is the default value that may be overridden by 
            individual bands.
            </summary>
            <remarks>
            <p class="body">
            Column headers can be enabled for a band, providing labeling and additional functionality for columns. 
            A column header typically contains the formatted name of the field to which the column is bound. 
            Column headers are also used to manipulate columns in various activities, such as column moving and 
            when implementing GroupBy mode.
            </p>
            <p class="body">
            Column headers may be formatted through the <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Style"/> and 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.HeaderBase.Caption"/> properties of the UltraGridColumn object.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedRows">
            <summary>
            Returns a collection of the currently selected rows. 
            </summary>
            <remarks>
            Not available at design-time.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedCells">
            <summary>
            Returns a collection of the currently selected cells.
            </summary>
            <remarks>
            Not available at design-time.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectedColumns">
            <summary>
            Returns a collection of the currently selected columns. 
            </summary>
            <remarks>
            Not available at design-time.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.GroupByBox">
            <summary>
            Returns a reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByBox"/> object.
            </summary>
            <remarks>
            This property is read-only at design-time and run-time.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.EnableInternalRowsManagement">
            <summary>
            Controls whether all rows are stored in viewstate, or only the rows that apply to the current page.
            </summary>
            <remarks>
            <p class="body">
            If the property is set to true, all Rows from the data source are stored in ViewState and the application
            doesn't need to respond to page changes or column sorting events. If the property is set to false, the 
            application must handle the PageIndexChange, SortColumn, GroupBy and UnGroupBy events by invoking the 
            <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DataBind"/> method.
            </p>
            <p class="body">
            If paging is not turned on, this property has no effect. It also won't affect grids that are bound
            during the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeDataSource"/> event handler or using 
            <see cref="!:UltraWebGrid.DataSourceID"/> property even when paging is enabled because in these cases
            the grid will not store any of the row information in ViewState. 
            </p>
            <p class="note">
            <b>Note</b> Having this property set to true will increase the size of the ViewState considerably 
            depending upon the total number of rows in the data source versus the number of rows in a page. It 
            is only recommended for very small amounts of data.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowColumnMovingDefault">
             <summary>
             Enables or disables column moving on either server or client side.
             </summary>
             <remarks>
             Use this property to specify how the control will handle column moving. If set to None, column moving is disallowed and 
             all columns are stationary. If set to OnServer, all column moving is handled on the server and the control will perform 
             a postback whenever the user moves a column to retrieve the new layout. However, the size of the viewstate will be increased 
             to support column moving.
             The OnClient setting is available only when the Browser property of the grid is set to Xml. In this case the client side 
             render engine transforms the Xml data that is already on the client to match the columns order desired by the user.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HeaderClickActionDefault">
            <summary>
            Specifies how a column header should react to being clicked. This is the 
            default value that may be overridden by individual bands or columns.
            </summary>
            <remarks>
            <p class="body">This property specifies a default header click action that 
            will be applied to all column headers. The header click action may be overridden 
            by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            <p class="body">If the property is set to <b>Select</b> the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SelectTypeColDefault"/> property 
            should be also set to allow columns selections.</p>
            <p class="body">In the case when the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowColumnMovingDefault"/> property is set to allow 
            column moving or the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ViewType"/> property is set to allow grouping by columns and columns 
            selection is allowed the selection will take precedence over other actions. To be able to move or 
            group by columns users can hold down the CTRL key while moving the columns' headers.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AddNewBox">
            <summary>
            Returns a reference to the AddNewBox object. This property is read-only at design-time and run-time.
            </summary>
            <remarks>
            <p class="body">The AddNewBox object represents the AddNew Box interface for entering new data rows into the grid.</p>
            <p class="body">The conventional approach for adding data to a grid has been to place an empty row at the bottom of the grid. New data is entered into this row and appended to the data source, then the row reserved for new data entry is cleared and moved down to appear below the newly added row. However, when working with a hierarchical recordset, this metaphor is no longer effective. Multiple bands of data are represented as distinct groups of rows, and which group of rows receives the new data is significant. Simply adding new data to the last row in a band will not position the new record correctly with respect to the band's parent recordset.</p>
            <p class="body">To effectively add new data to a hierarchical recordset, the UltraGrid implements an interface called the "AddNew Box." The AddNew Box displays one or more buttons that are used to trigger the addition of new data. The number of buttons corresponds to the number of hierarchical bands displayed. Each band has its own AddNew button, and connecting lines link the buttons, illustrating a hierarchical relationship that mirrors that of the data.</p>
            <p class="body">To use the AddNew Box, you first set focus to a row or cell in the band to which you want to add data. You should determine where in the hierarchy you want the record to appear, then select a record that corresponds to that location. You then click the AddNew button for the band you want to contain the new data, and an empty data entry row appears in the band a the point you selected. For example, if you have a Customers/Orders hierarchy and you wanted to add data for a new order, you would first locate the customer to whom the order belonged, select that customer's record (or one of that customer's existing order records) and click the AddNew button for the Orders band. A blank row would appear below any existing orders that were displayed for the customer.</p>
            <p class="body">The AddNewBox object contains properties that control the various attributes of the AddNew Box interface. For example, you can use the <b>Hidden</b> property of the AddNewBox object to selectively display or hide the interface, thus enabling or disabling the user's ability to add new data. You can also use this object to control the appearance of the AddNew buttons, and specify other formatting features. You can also chose between the standard and compact display styles for the AddNew Box. The compact style preserves screen space by compressing the display of the AddNew buttons and eliminating the display of a hierarchical structure.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActivationObject">
            <summary>
            Returns a reference to the ActivationObject object. This property is read-only at design-time and run-time.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.UltraWebGrid.ActivationObject"/> object determines the formatting that will be applied to activated items in the grid, and also whether or not activation will be permitted.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasAddNewBox">
            <summary>
            Indicates whether the control has an AddNew Box object.
            </summary>
            <remarks>
            <p class="body">You can use this property to determine whether the control has an AddNew Box. The AddNew Box is used to add new records to a hierarchical data set. If the grid is only displaying a single-level (flat) dataset, the AddNew Box is not necessary.</p>
            <p class="body">If the control is using an Add New box, you can access its properties using the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AddNewBox"/> property.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasAddNewRow">
            <summary>
            Indicates whether the control has an AddNewRow object.
            </summary>
            <remarks>
            <p class="body">You can use this property to determine whether the control has an AddNew Row.</p>
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasActivationObject">
            <summary>
            Specifies whether the control has an ActivationObject object.
            </summary>
            <remarks>
            <p class="body">Use this property to determine whether there is an ActivationObject object for the control. The ActivationObject object will be present if the grid allows selection and/or editing of the displayed data. To access the settings of the ActivationObject object, use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ActivationObject"/> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CompactRendering">
            <summary>
            Specifies how the HTML code for the control will be generated.
            </summary>
            <remarks>
            <p class="body">This property specifies the way HTML code is generated. By default this property is true which means that HTML will be generated with no extra white space; tab characters and line breaks will be omitted. This reduces the size of the resulting HTML page, and the number of bytes that must travel to the browser, howwever it makes the code difficult to read. For debugging purposes this property can be set to false and all generated code will be presented in human-readable form.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.DefaultCentury">
            <summary>
            Default century that is used for two digit years. Default value is 1900.
            </summary>
            <remarks>
            <p class="body">If user input is setup to accept two digit years this value will be added to the entered year. The property accepts only 100 even values.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.StationaryMargins">
            <summary>
            Specifies which parts of the grid will remain stationary when scrolling occurs.
            </summary>
            <remarks>
            <p class="body">This property specifies which part of the grid is stationary. Headers and footers may be made stationary, allowing them to remain in view while data rows are scrolled up or down. This property provides a choice of stationary headers, stationary footers or both stationary headers and footers. By default there will be no stationary parts in the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ReadOnly">
            <summary>
            Determines whether the grid will be in read-only mode.
            </summary>
            <remarks>
            <p class="body">This property sets the grid to the read-only mode. There are several implications of making this selection. 
            Most importantly, is that the grid's data cannot be edited by the end user, and new data cannot be added into (or removed
            from) the grid. Read-only mode reduces overhead and download time for the web page containing the grid, by dispensing with
            the JavaScript required for data insert, update and deletion support.</p>
            <p class="body">There are three levels of read-only functionality supported, described here in order of most to least
            restrictive.</p>
            <p class="body">The most constrained level offers only rudimentary client-side functionality, with the least overhead.
            Data is simply presented on the end user's browser with the end user having no capability to alter their view of that
            data. This is referred to as <see cref="T:Infragistics.WebUI.UltraWebGrid.ReadOnly">LevelZero</see>.</p>
            <p class="body">An intermediate level provides end users with some ability to manipultate the viewed data. This
            includes expansion and collapse of rows, and the resizing of columns.  These features incur greater overhead
            for the page, although the quantity and demands of the JavaScript remains much lower than what is required
            for full interactivity. This is referred to as <see cref="T:Infragistics.WebUI.UltraWebGrid.ReadOnly">LevelOne</see>.</p>
            <p class="body">The most accomodative read-only mode allows stationary header and footer capabilities, in addition
            to everything afforded to the end user in the prior level. This is referred to as <see cref="T:Infragistics.WebUI.UltraWebGrid.ReadOnly">LevelTwo</see>.</p>
            <p class="body">Developers may set this property to <b>NotSet</b> to allow their end users to experience the full
            and unlimited interactivity of the UltraWebGrid.  This is the default state (<i>i.e.,</i> read-only mode is initially
            turned off).  When a data application does not require editing capability, and performance or down-level compatibility must
            be maximized, setting the grid into read-only mode is advisable.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.BorderCollapseDefault">
            <summary>
            Sets or returns a value that specifies whether the grid borders should collapse or not.
            </summary>
            <remarks>
            <p class="body">By collapsing the borders, the grid maintains a uniform border width, even when the borders of two objects appear beside one another. This is the default value for the grid that will be inherited by other objects who do not have their <b>BorderCollapse</b> property set to an explicit value. If UseFixedHeaders is set to True only Separate mode is supported.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowExpAreaStyleDefault">
            <summary>
            The default style that will be applied to rows expansion area. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all the rows expasion areas, the ones behind plus or minus sign. The style may be overridden by the band object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AutoGenerateColumns">
            <summary>
            Specifies whether the grid should generate any columns automatically when data binding occurs.
            </summary>
            <remarks>
            <p class="body">
            At design-time set this property to true and all of the bound columns
            will be generated. At run-time, if this property is true and there
            are no columns that were automatically generated (all the
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.IsBound"/>
            properties are false) then all of the columns from the data source will
            be added to the existing columns in the grid.
            </p>
            <p class="body">
            You can add your own columns to the grid in addition to the columns
            generated by the control. By default, any columns you add appear
            to the left of the columns generated automatically.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.LoadOnDemand">
            <summary>
            Returns or sets an enumerated value that determines how data is loaded into the grid at runtime.
            </summary>
            <remarks>
            <p class="body">
            LoadOnDemand is used to improve the performance of large grids by reducing the amount of data to
            be rendered to the client. It works by only rendering rows have been expanded by the user. 
            </p>
            <p class="body">
            The grid supports three different LoadOnDemand modes. The automatic and manual modes postback to 
            the server to load child rows when the user expands a row in the grid. XML mode uses ajax to 
            fetch rows without a postback as the user scrolls the grid or expands rows. 
            </p>
            <p class="body">
            LoadOnDemand is only used for fetching new rows. Once a row has been expanded, it can be expanded 
            and collapsed without needing to go back to the server. 
            </p>
            <p class="body">
            <b>Automatic LoadOnDemand</b><br/>
            When you use <a href="WebGrid_Using_the_Automatic_Load_On_Demand_Feature.html">automatic mode</a>,
            the grid will display the first band of rows on initial page load. The grid will then post back 
            to the server to automatically generate child rows from your data source as the user navigates 
            the grid.
            </p>
            <p class="body">
            Automatic mode requires that UltraWebGrid is bound to hierarchical data object that includes at 
            least one parent child relationship. If the parent child relationship isn't part of the object 
            itself you will need to use Manual LoadOnDemand to populate the children. 
            </p>
            <p class="body">
            The grid will need to be able to access your entire data set each time a row is expanded so it 
            can load the child rows. If you bind the grid to a Microsoft DataSource object like a 
            SqlDataSource or ObjectDataSource using the grid's <see cref="!:UltraWebGrid.DataSourceID"/> 
            property, the grid will be able to automatically load the right rows. If you are binding at 
            runtime it is recommended you handle the <see cref="!:InitializeDataSource"/> event to load the 
            entire data source into your grid so the grid can request the data when it needs to. 
            </p>
            <p class="body">
            The performance cost of loading the entire data source object into memory can be a problem for 
            very large data sources or in situations where performance is very important. In these cases it is 
            recommended that you use Manual mode instead. 
            </p>
            <p class="body">
            The <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DemandLoad"/> event will not be fired at all for Automatic mode. 
            It is only fired for manual mode. 
            </p>
            <p class="body">
            The most common problem with Automatic mode is with getting the grid set up to display hierarchy. 
            If you have problems getting Automatic LoadOnDemand to work make sure that your grid can load 
            the hierarchy with LoadOnDemand turned off. The most important thing is to make sure the grid's 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ViewType"/> property is set to Hierarchical or OutlookGroupBy.
            </p>
            <p class="body">
            <b>Manual LoadOnDemand</b><br/>
            Manual mode gives you more control over how the rows are loaded into the grid. Instead of the 
            new rows being automatically generated from the data source object, you handle the 
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DemandLoad"/> event and manually add the child rows to the parent. 
            </p>
            <p class="body">
            This is useful for very large data sources where loading the whole data source into memory 
            during each postback will cause performance problems. 
            </p>
            <p class="body">
            When using manual mode, it is necessary to set up <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> objects created 
            for each level of Rows that may be expanded using plus (+) images.  If there is no band object 
            for rows that may be expanded, the WebGrid will not display a plus sign next to rows in the 
            parent Band. It is also necessary to set the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.ShowExpand"/> property of 
            the rows that should display an expansion indicator. 
            </p>
            <p class="body">
            See the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DemandLoad"/> event for a code example. 
            </p>
            <p class="body">
            <b>Xml LoadOnDemand</b> <br/>
            Using <a href="WebGrid_Using_XML_Load_On_Demand.html">Xml LoadOnDemand</a> mode enables the 
            grid's ajax functionality. 
            </p>
            <p class="body">
            It can be used in hierarchical grids to load child rows as the user navigates the grid, in the 
            same way that the other LoadOnDemand modes work. When the page is initially loaded only the first
            band of rows will be sent to the browser and child rows will be downloaded from the server as the
            user navigates. The difference is that it will use the browser's ajax functionality to load the 
            new rows into the grid without doing a postback. 
            </p>
            <p class="body">
            Xml mode works the same way as Automatic mode in that all data must be provided to the grid on 
            each postback and ajax request. There is no manual mode for loading rows into the grid as the 
            user navigates. 
            </p>
            <p class="body">
            When you enable Xml LoadOnDemand mode you will also need to enable the grid's xml rendering 
            mode by setting the grid's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Browser"/> property to 
            <see cref="T:Infragistics.WebUI.UltraWebGrid.BrowserLevel">Xml</see>. This is required to reduce the amount of information sent 
            between the server and the browser.
            </p>
            <p class="note">
            <b>Note:</b> The most common problem when using Xml mode is an error message saying that "When using 
            LoadOnDemand=Xml it is required to have the InitializeDataSource event handled". This will only 
            happen if you are binding to data at runtime. It is not a problem if you are using Microsoft 
            DataSource objects. If you see the message, you will need to set up a handler for the 
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeDataSource"/> event in code and move all the grid's binding 
            logic to this handler. 
            </p>
            <p class="note">
            <b>Note:</b> We don't recommend enabling Xml LoadOnDemand if the grid is inside a partial postback 
            control like the WARP or UpdatePanel. In those cases it is better to let the partial postback control 
            handle the ajax functionality because the grid can act erratically if a partial postback happens in 
            the middle of the grid's ajax request. 
            </p>
            <p class="body">
            Unlike the other LoadOnDemand modes, Xml mode affects more than loading child rows into 
            hierarchical grids. Enabling it automatically ajax enables a lot of the grid's other features 
            that require a postback to fetch more rows or to do processing on the server. Ajax functionality 
            is an all or nothing option in the grid. It's not possible to enable it for some scenarios and 
            disable it for other ones. 
            </p>
            <p class="body">
            Scrolling - When xml mode is turned on, only the rows that will be visible on initial page load 
            will be loaded and extra rows will be loaded as the user scrolls the grid. This can be useful to 
            improve the load speed of large grids. The number of rows that are initially displayed is set by 
            the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowsRange"/> property. The way the scrollbar is displayed and the 
            way the rows are loaded can be customized using the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.XmlLoadOnDemandType"/> property.
            </p>
            <p class="body">
            Sorting - the grid will enable ajax sorting mode if 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowSortingDefault"/> is set to 
            <see cref="T:Infragistics.WebUI.UltraWebGrid.AllowSorting">OnClient</see>. It will do an ajax request to sort the rows on the 
            server rather than using javascript to sort in the browser. This can be useful if paging is 
            turned on because the grid will be able to sort all of the rows in the data source rather than 
            just the ones displayed on the current page. It can also be faster than sorting a large data 
            source using javascript. 
            </p>
            <p class="body">
            Paging - When xml mode is turned on the grid will automatically use an ajax request when the 
            user selects another page. When paging is turned on, the scroll on demand feature will be 
            disabled. 
            </p>
            <p class="body">
            Filtering - When <see cref="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.AllowRowFiltering"/> is set to 
            <see cref="T:Infragistics.WebUI.UltraWebGrid.RowFiltering">OnClient</see>, the grid will use an ajax request to load the items 
            into the filter dropdown if you are using the <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterUIType">HeaderIcons</see> 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterUIType">FilterUIType</see>. The grid will also do the filtering 
            on the server using an ajax request. This can be useful if paging is enabled because it will 
            filter on the entire data source rather than just the current page. It can also be faster than 
            doing the filtering in the browser. 
            </p>
            <p class="body">
            Updates - Changes to grid data like new rows, updated rows and deleted rows will be sent to the 
            server without doing a postback. If the grid's data source is a Microsoft DataSource object, 
            the changes will automatically be saved using the DataSource's add/update/delete functionality. 
            If the grid is being bound at runtime, the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRow"/>, 
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRow"/> and <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DeleteRow"/> events will need 
            to be handled to trigger the ajax callback. 
            </p>
            <p class="note">
            <b>Note:</b> The most important thing to do when using either type of ajax updates is to set 
            the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.DataKeyField"/> property of the bands in your grid. It is important 
            to give each row a unique key so the grid can locate the rows because they may not be in the 
            original order after sorting or filtering has been applied. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.IsDocumentExporting">
            <summary>
            For internal use only.
            </summary>
            <remarks>
            <p class="body">
            This is set to true during exporting so the grid can be slightly differently configured
            during export. 
            </p>
            <p class="body">
            Specifically it's used to tell the grid that OptCssClassNames should always be off
            if the grid is exporting.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.XmlLoadOnDemandType">
            <summary>
            Returns or sets how the Webgrid will deliver it's payload when using XmlLoadOnDemand.
            </summary>
            <remarks>
            The XmlLoadOnDemandType is used to control how the row payload will be delivered.  Depending on this value the
            rows will be retrieved when the row scroller reaches the bottom of the scroll area, the rows will be retrieved on a timer, or the rows will be virtually paged.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ScrollBar">
            <summary>
            Specifies how the scroll bar will be shown.
            </summary>
            <remarks>
            <p class="body">You can choose how to display the scrollbar in the control. The default setting is to display the scrollbar automatically when it is needed. You can also choose to always display the scrollbar or to never display the scrollbar. (If the scrollbar is not displayed, the user must use the data navigation features of the grid to scroll to data that is not currently visible.)</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ScrollBarView">
            <summary>
            Customizes the scroll bar view.
            </summary>
            <remarks>
            <p class="body">You can choose the view the scroll bar appear in the grid. The default setting is to display both horizontal and vertical scroll bars.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.NoDataMessage">
            <summary>
            A string value that specifies the message that should be displayed when the grid contains no data. A column structure is considered data, so that if you have columns defined but no rows, then you will see the columns, but if you have no columns and no rows that is considered no data.
            </summary>
            <remarks>
            <p class="body">The default message is "No Data To Display".</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasStrings">
            <summary>
            Determines whether strings were changed in the grid.
            </summary>
            <remarks>
            <p class="body">When this property is set to True, some strings in the grid have been changed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Strings">
            <summary>
            Object holder for strings of the grid.
            </summary>
            <remarks>
            The property accumulates all strings that can be set 
            through out the grid. The strings that are set through 
            this object are reflections of the actual string properties.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Section508Compliant">
            <summary>
            Enables accessibility support.
            </summary>
            <remarks>
            Additional tags and accessibility options are rendered within the grid that required by the <a href="http://www.section508.gov/">section 508</a>.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.TabDirection">
            <summary>
            Defines the way the tab key moves from cell to cell: left to right (default), right to left, top to bottom or bottom to top.
            </summary>
            <remarks>
            Changing the property changes the order of cells user can navigate through using the tab key on the client.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.StateChanges">
            <summary>
            Collection of changes to receive from the client.
            </summary>
            <remarks>
            <b>The property is not for public use.</b> The collection is used to 
            receive the changes from the client. The changes are being loaded as 
            presets from the preset-like format that is formed on the client and 
            sent back to the server.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ScrollTop">
            <summary>
            Initial vertical scroll value for the grid on the client.
            </summary>
            <remarks>
            The property is used to store previous scroll top position between post backs.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ScrollLeft">
            <summary>
            Initial horizontal scroll value for the grid on the client.
            </summary>
            <remarks>
            The property is used to store previous scroll left position between post backs.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.UseFixedHeaders">
            <summary>
            Enables the fixed-headers feature. 
            </summary>
            <remarks>
            <p class="body">
            The fixed headers feature can be used to lock certain columns on the left side of the grid so they 
            will remain on screen while the rest of the grid scrolls horizontally. This is similar to the freeze 
            pane feature in Microsoft Excel. 
            </p>
            <p class="body">
            Set the <see cref="P:Infragistics.WebUI.UltraWebGrid.ColumnHeader.Fixed"/> property of a column to true to make it appear fixed in the 
            browser. Use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedHeaderIndicatorDefault"/> property to show a button on each column 
            that the user can click to choose which columns will be fixed. The <see cref="T:Infragistics.WebUI.UltraWebGrid.FixedHeaderIndicator"/> 
            can also be enabled only for particular columns.  
            </p>
            <p class="body">
            Fixed columns can be automatically styled differently from the other columns in the grid by setting 
            the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedHeaderStyleDefault"/>, <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedFooterStyleDefault"/> and 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedCellStyleDefault"/> style properties. 
            </p>
            <p class="body">
            When you enable fixed headers, the grid no longer renders a simple table structure so the browser 
            can't adjust the table dimensions when different cells have different heights or widths. This means 
            you are responsible for creating the grid in a way that the cells line up.
            </p>
            <p class="body">
            The most common problems with this are:
            </p>
            <list>
            <item>Setting inconsistent <see cref="!:GridItemStyle.Padding"/> or <see cref="!:GridItemStyle.Border"/> styles for the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowStyleDefault">cell</see> and <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HeaderStyleDefault">header</see> styles.</item>
            <item>Creating rows that don't have a <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowHeightDefault">default height</see> set.</item>
            <item> Enabling <see cref="P:Infragistics.WebUI.UltraWebGrid.GridItemStyle.Wrap"/> on cells so the cell's content is no longer a consistent height.</item>
            </list>
            <p class="body">
            There are also some limitations to the grid's behavior when fixed headers are enabled.
            </p>
            <list type="bullet">
            <item><see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.TableLayout"/> must be set to Fixed.</item>
            <item>The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle">grid</see>, <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowHeightDefault">rows</see> and <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ColWidthDefault">columns</see> must be given explicit dimensions. Percentage widths are not supported.</item>
            <item><see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.BorderCollapseDefault"/> must be set to Separate.</item>
            <item>Cross column <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridCell.ColSpan">cell merging</see> is not supported.</item>
            </list>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedHeaderIndicatorDefault">
            <summary>
            Specifies whether the user is allowed to fix/unfix the header on the client.
            </summary>
            <remarks>
            <p class="body">Setting the property to the Button value will enable the user's ability to fix or unfix the header dynamically on the client.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedCellStyleDefault">
            <summary>
            The default style that will be applied to cells in the fixed column of the grid. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all cells in the fixed columns in the grid. The style may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedHeaderStyleDefault">
            <summary>
            The default style that will be applied to headers in the fixed column of the grid. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all headers in the fixed columns in the grid. The style may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedFooterStyleDefault">
            <summary>
            The default style that will be applied to footers in the fixed column of the grid. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to all footers in the fixed columns in the grid. The style may be overridden by the band or by the individual <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasFixedCellStyleDefault">
            <summary>
            Determines if a style has been applied to the fixed cells at the layout level. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for the fixed cells has been specifically set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedCellStyleDefault"/> property.) The style can be overriden on the band or column levels.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasFixedHeaderStyleDefault">
            <summary>
            Determines if a style has been applied to the fixed headers at the layout level. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for the fixed headers has been specifically set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedHeaderStyleDefault"/> property.) The style can be overriden on the band or column levels.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasFixedFooterStyleDefault">
            <summary>
            Determines if a style has been applied to the fixed footers at the layout level. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for the fixed footers has been specifically set at the layout level (through the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedFooterStyleDefault"/> property.) The style can be overriden on the band or column levels.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FixedColumnScrollType">
            <summary>
            Specifies the way the grid is scrolled horizontally when it's in the fixed headers mode. 
            </summary>
            <remarks>
            <p class="body">Default value is Pixel. That means that the grid is scrolled in a traditional 
            way where the scrolling unit is one pixel. When it set to Column the scrolling unit becomes one column, that means that 
            the user can scroll only one column at a time. Setting it to Column helps to improve the scrolling 
            performance when there are many rows in the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.GroupByColumnsHiddenDefault">
            <summary>
            Specifies whether the grid's columns will be hidden when grouped by.
            </summary>
            <remarks>
            <p class="body">Default value is <b>Yes</b>. That means that the columns 
            will be hidden when they ar grouped by. Setting the property to <b>No</b> allows 
            having the columns remaining in place even if they are grouped by. The property can be
            overriden on the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> level by setting the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GroupByColumnsHidden"/> property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.StationaryMarginsOutlookGroupBy">
            <summary>
            Defines whether the stationary margins are respected while a column is grouped by off the band 0.
            </summary>
            <remarks>
            <p class="body">A column off the band 0 has to be grouped by to make the 
            feature noticeable. When the property is set to <b>true</b> the header 
            and/or footer of each grouped row's row island is eliminated and a single 
            header and/or footer is rendered outside of the group by rows according to 
            the setting of the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.StationaryMargins"/> property - header and/or 
            footer are stationary.<br/>
            So the feature is dependable on the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.StationaryMargins"/> property. 
            If <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.StationaryMargins"/>.No is set - no changes to the grid are 
            made regardless of what this property value is.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AddNewRowDefault">
            <summary>
            Default object for the grid that defines the appearance of the add new row.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FilterOptionsDefault">
            <summary>
            Gets the FilterOption object for the Layout object
            </summary>
            <remarks>
            The FilterOption object contains information that will affect the behavior of the Filter dropdown 
            when RowFiltering is used.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowRowFilteringResolved">
            <summary>
            returns whether or not the band object will allow for rowfiltering based on the parent object's settings		
            </summary>
            <remarks>not for public use.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowFilterModeResolved">
            <summary>
            returns what filter mode should be applied according to the DisplayLayout
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FilterComparisonTypeResolved">
            <summary>
            Determines what the FilterComparisonType should be based on current settings and any parent settings which may alter it.
            </summary>
            <remarks>
            Not for public use
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FilterUITypeResolved">
            <summary>
            Determines what the FilterUIType should be based on the current setting and 
            any parent settings which may alter it.
            </summary>
            <remarks>
            Not for public use
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FilterRowViewResolved">
            <summary>
            Determines what the FilterRowView should be based on the current setting and any parent settings
            which may alter it.
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FilterEvaluationTriggerResolved">
            <summary>
            Determines when the filter will be evaluated on the client when using the FilterRow feature
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.EnableProgressIndicator">
            <summary>
            Enables the grid to show an indicator during its XmlHTTP requests.
            </summary>
            <remarks>
            By default, the progress indicator displays an image (ig_progressIndicator.gif) that is located in the grid's image directory.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FormulaErrorStyleDefault">
            <summary>
            The default <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle">GridItemStyle</see> object that contains the style properties applied to calculated cells containing UltraCalc formula errors.
            </summary>
            <remarks>
            <p class="body">The <b>FormulaErrorStyleDefault</b> property is used to specify the default visual formatting of cells and column footers whose calculated formula resulted in an error.</p> 
            <p class="body">These default style properties can be overriden at the band, column and column footer levels by explicitly setting properties on their <b>FormulaErrorStyle</b> objects.</p>
            <p class="body">This property has no effect on the grid if UltraCalc formulas are not used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HasFormulaErrorStyleDefault">
            <summary>
            Determines if a default style has been applied to the cells for use when their UltraCalc formula results in an error.
            </summary>
            <remarks>
            <p class="body">Returns True if a style for cells in this UltraWebGrid layout has been specified in the event their calculated formula values result in error.</p>
            <p class="body">These default styles can be subsequently overriden at the band, column and column footer levels. Where a calculation error results and is being
            rendered and there is no overriding <b>FormulaErrorStyle</b> in effect, the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FormulaErrorStyleDefault"/>, if any, is applied.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FormulaErrorStyleDefaultResolved">
            <summary>
            A <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle">GridItemStyle</see> object that
            contains the default style properties for cells resulting in an UltraCalc formula error.
            </summary>
            <remarks>
            <p class="body">The default appearance of the cells within the grid (both in columns and column footers) evaluating to
            an error when their values are calculated by UltraCalc is controlled by the <b>GridItemStyle</b> object specified in the
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FormulaErrorStyleDefault"/> property of this <b>UltraGridLayout</b> object.</p>
            <p class="body">Developers can use the <b>FormulaErrorStyleDefaultResolved</b> property to determine the base
            formatting attributes that are going to be inherited for the rendering of a calculable grid object resulting
            in error. This property returns a <b>GridItemStyle</b> object with all of its attributes set to default values
            established for the UltraWebGrid element as a whole.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the layout has attributes.
            </summary>
            <remarks>
            The layout has no attributes. The property is always false.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the layout node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the layout node.
            </summary>
            <remarks>
            The layout has no node value. The property is always Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the layout has children.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellTitleModeDefault">
            <summary>
            Default behavior for generating the HTML Title attribute of cells in the grid.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.CellTitleModeResolved">
            <summary>
            Determines what the CellTitleMode should be based on current settings
            </summary>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.HeaderTitleModeDefault">
            <summary>
            Default behavior for generating the HTML Title attribute of column headers.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.OptimizeCSSClassNamesOutput">
            <summary>
            Enables CSS class names optimization during rendering. 
            </summary>
            <remarks>
            If <b>True</b> the class names are rendered compacted. <b>False</b> forces 
            optimization to be off. This is useful when for example cells 
            have embedded HTML content and the optimization influences its elements.
            <b>NotSet</b> means that the grid will apply optimization automatically basing 
            on current settings.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.OptimizeCSSClassNamesOutputResolved">
            <summary>
            Returns resolved value of current CSS class names optimization mode.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.RowAlternateStylingDefault">
            <summary>
            Indicates if the grid will output alternate row styles. 
            </summary>
            <remarks>
            If <b>True</b> the grid will apply the RowAlternateStyleDefault and/or RowAlternateStyle 
            off the band objects to its resulting HTML. The property allows turning on or off of the 
            alternate styling even for the app styled applications. Can be overriden on the band level.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.Infragistics#WebUI#UltraWebGrid#IParticipateInAppStyling#WebAgent">
            <summary>
            Reference to the web agent
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SortingAlgorithmDefault">
            <summary>
            Defines a sorting algorithm that should be used when a column in the grid is sorted on.
            The property can be overriden by the delegate method of a custom sorting algorithm: <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SortImplementation"/>, 
            and by the band level's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortingAlgorithm"/>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SortImplementation">
            <summary>
            A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.SortRowsCollection"/> delegate 
            method that performs custom sorting algorithm. 
            If set the method takes precedence over the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SortingAlgorithmDefault"/> property setting 
            and is called to perform the actual sorting for the rows collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SortCaseSensitiveDefault">
            <summary>
            Specifies whether to respect or ignore the capitalisation of the values in the cells when sorting.
            </summary>
            <remarks>
            <p class="body">
            Set the property to True to sort in a case sensitive way. Set it to False to ignore case 
            when doing a sort. The default value is True.  This can be useful when doing a 
            <a href="WebGrid_Multiple_Column_Sorting.html"> multiple column sort</a>. 
            </p>
            <p class="body">
            This property also affects grouping. When the property is set to False, cell values
            which are the same except for letter case will be added to the same group. When this happens
            the GroupByRow text will be the text of the first item that is matched.
            </p>
            <p class="body">
            The property will only be applied for columns that have a string <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.DataType">
            DataType</see>. Other column data types like numeric or boolean will always be sorted by value.
            </p>
            <p class="body">
            The SortCaseSensitive property will be applied to sorting on the server as well as sorting on 
            the client. Setting this property will automatically make either type of sorting case sensitive 
            or case insensitive.
            </p>
            <p class="body">
            You can find out the value of the property in javascript by looking at the SortCaseSensitive 
            property of the clientside <a href="WebGrid_Column_Object_CSOM.html">Column</a> object.
            </p>
            <p class="body">
            For columns with a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> or 
            <see cref="!:Infragistics.WebUI.WebCombo.WebCombo"/> editor, case insensitive sorting and grouping
            will be applied to the text of the column rather than the value when this property is set to False.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SortCaseSensitiveResolved">
            <summary>
            Returns whether or not the Band should be sorted case sensitively or not. 
            Uses parent's settings if band property hasn't been set.
            </summary>
            <remarks>Not for public use.</remarks>	
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.Pager">
            <summary>
            The Pager class is responsible for controlling the paging behavior and appearance within the UltraWebGrid.
            </summary>
            <remarks>
            There are three types of paging supported: 1. Built-in paging, Standard paging, and Custom paging.<BR/>
            Built-in paging is completely automatic and does not require any coding to implement. Built-in paging is automatically enabled when the DisplayLayout.EnableInternalRowsManagement property is set to true.  With this style of 
            paging, however, there is a large ViewState requirement, as all pages of the query must be available to the grid without the need for a call to DataBind().<BR/>
            Standard paging simply requires that the application responds to the PageIndexChanged event to set the new page number and call DataBind().  UltraWebGrid indexes into the DataSource and finds the correct starting point and loads the grid with the PageSize number of rows.
            With Custom paging, it is the application's responsibility to provide a DataSource that has the exact set of rows to be displayed. UltraWebGrid will start at the beginning of the DataSource and load the PageSize number of rows. In this scenario, the DataSource query has to be adjusted to return the correct set of rows, based upon the PageIndex or some other criteria. 
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.#ctor">
            <summary>
            Constructor for the Pager object.
            </summary>
            <remarks>Called automatically by the WebGrid to instatiate the object.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.ToString">
            <summary>
            Returns a string representation of a <see cref="T:Infragistics.WebUI.UltraWebGrid.Pager"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
            <returns>The string representation of the Pager object.  In this case the return value will be the string.Empty value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.Pager"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the Pager class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the Pager will return False until set again.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.CopyFrom(Infragistics.WebUI.UltraWebGrid.Pager)">
            <summary>
            Duplicates the properties of the specified <see cref="T:Infragistics.WebUI.UltraWebGrid.Pager"/> into the instance of the Pager class from which this method is invoked.
            </summary>
            <remarks>
            <p class="body">Use the CopyFrom method to duplicate the properties of the specified Pager object into the instance of the Pager class from which this method is invoked.</p>
            <p class="body">All properties in the current instance of the Pager class will be replaced by their corresponding properties in the Pager object specified by the <i>passin</i> parameter.</p>
            </remarks>
            <param name="passin">
            <p class="body">A Pager object that represents the Pager class to copy.</p>
            </param>
            <returns>A Pager object which replicates the input object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.Clone">
            <summary>
            Creates a new Pager object with all of the property settings of the current object. The new object is functionally identical to the current one.
            </summary>
            <returns>The new Pager object, which is a clone of the current object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.CopyFromSerializable(Infragistics.WebUI.UltraWebGrid.Pager)">
            <summary>
            Copies the property settings of the passed-in Pager object to the current Pager object. Any existing settings in the current object are replaced. This method is serializable.
            </summary>
            <param name="passin">A Pager object whose property settings you want to copy to the current object.</param>
            <returns>The current Pager object with the new property settings.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.RenderPagerLabels(Infragistics.WebUI.UltraWebGrid.RenderDHTMLGrid)">
            <summary>
            Used to generate the pager strings 
            </summary>
            <returns>This method takes the actual rendering of the lables of the pager outside of the pager so that 
            we can use it in XML mode
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.RenderPager(Infragistics.WebUI.UltraWebGrid.RenderDHTMLGrid,Infragistics.WebUI.UltraWebGrid.UltraGridLayout,System.Boolean)">
            <summary>
            Render the Pager section of the control.
            </summary>
            <param name="render"></param>
            <param name="lo"></param>
            <param name="renderTop"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.SaveViewState">
            <summary>
            Creates a object array serializing the ViewState of this object
            </summary>
            <returns>An object array of items that need to be added to the ViewState</returns>
            <remarks>Called automatically, not generally for public use.</remarks>
            <returns>An object array with the items that need to be persisted into viewstate.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.LoadViewState(System.Object)">
            <summary>
            Loads the ViewState for this object.
            </summary>
            <remarks>Called automatically, not generally for public use.</remarks>
            <param name="savedState">The ViewState that was persisted to the page.  This is used to reinflate the control back to the status at render time.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.TrackViewState">
            <summary>
            Tracks the ViewState for this object.  
            </summary>
            <remarks>Called automatically, not generally for public use.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.CreateBackup">
            <summary>
            Persists the current state of the control.
            </summary>
            <remarks>
            Called internally by the control to persist the current state of the control.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.Commit">
            <summary>
            Finalizes all changes to the control
            </summary>
            <remarks>
            Called internally by the control to finalize changes to the control.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Pager.Rollback">
            <summary>
            Returns control back to last commit point.
            </summary>
            <remarks>Called automatically by the control to undo changes back to the last commital point.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.Style">
            <summary>
            Returns a reference to or sets a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that determines how the <see cref="T:Infragistics.WebUI.UltraWebGrid.Pager"/> links are rendered on the client.
            </summary>
            <remarks>
            <p class="body">Individual style attributes can be applied by setting the GridItemStyle object's corresponding properties. For example, a style's background color can be changed by setting its <b>BackColor</b> property.</p>
            <p class="body">A comprehensive pre-defined style can be applied by setting the GridItemStyle object's <b>CssClass</b> property to the name of the style.</p>
            <p class="body">This property has been deprecated for CLR2. Use PagerStyle to set the style instead. </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.PagerStyle">
            <summary>
            Returns a reference to or sets a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that determines how the <see cref="T:Infragistics.WebUI.UltraWebGrid.Pager"/> links are rendered on the client.
            </summary>
            <remarks>
            <p class="body">Individual style attributes can be applied by setting the GridItemStyle object's corresponding properties. For example, a style's background color can be changed by setting its <b>BackColor</b> property.</p>
            <p class="body">A comprehensive pre-defined style can be applied by setting the GridItemStyle object's <b>CssClass</b> property to the name of the style.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.ComboStyle">
            <summary>
            Returns a reference to or sets a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that determines the style of the SELECT element when the <see cref="T:Infragistics.WebUI.UltraWebGrid.PagerStyleMode"/> equals <b>ComboBox</b>.
            </summary>
            <remarks>
            <p class="body">Individual style attributes can be applied by setting the GridItemStyle object's corresponding properties. For example, a style's background color can be changed by setting its <b>BackColor</b> property.</p>
            <p class="body">A comprehensive pre-defined style can be applied by setting the GridItemStyle object's <b>CssClass</b> property to the name of the style.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.HasComboStyle">
            <summary>
            Returns a Boolean value that determines whether the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.ComboStyle"/> property is currently set to a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object.
            </summary>
            <remarks>
            <p class="body">This property returns True if the ComboStyle property is currently set; otherwise, it returns False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.PageSize">
            <summary>
            Returns or sets a value that specifies the number of records per data page that are displayed when paging is enabled.
            </summary>
            <remarks>
            <p class="body">The default value this property is 8.</p>
            <p class="body">The value of this property determines the default value of the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.PageCount"/> property.</p>
            <p class="body">Paging can be enabled by setting the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.AllowPaging"/> property to True.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.HasStyle">
            <summary>
            Returns a Boolean value that determines whether the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.Style"/> property is currently set to a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object.
            </summary>
            <remarks>
            <p class="body">This property returns True if the Style property is currently set; otherwise, it returns False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.CurrentPageIndex">
            <summary>
            Returns or sets a value that specifies the current data page displayed by the grid.
            </summary>
            <remarks>
            <p class="body">When paging is enabled, this property specifies the page of data currently being displayed.</p>
            <p class="body">When paging is not enabled for the grid, this property always returns, and can only be set to, 1.</p>
            <p class="body">Paging can be enabled by setting the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.AllowPaging"/> property to True.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.PageCount">
            <summary>
            Returns or sets a value that specifies the total number of data pages that exist when paging is enabled. Setting of the value makes sense only if you use custom paging. In the regular mode the property is set automatically.
            </summary>
            <remarks>
            <p class="body">The default value this property the total number of records divided by the value of the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.PageSize"/> property, rounded to the nearest integer.</p>
            <p class="body">When paging is not enabled for the grid, this property always returns 1.</p>
            <p class="body">Paging can be enabled by setting the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.AllowPaging"/> property to True.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.AllowCustomPaging">
            <summary>
            Returns or sets a Boolean value that determines whether custom paging is allowed.
            </summary>
            <remarks>
            <p class="body">True if the grid allows custom paging; otherwise, False (default).</p>
            <p class="body">Paging enables the grid to display data as multiple pages shown individually, 
            rather than simply one long page. Custom paging can be used to improve performance over automatic paging.</p>
            <p class="body">When custom paging is enabled, it is the application developer's responsibility to provide 
            a DataSource that has the exact set of rows to be displayed. The grid element starts at the beginning of 
            the DataSource and loads the number of rows specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.PageSize"/> property. 
            In this scenario, the DataSource query has to be adjusted to return the correct set of rows, 
            based upon the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.CurrentPageIndex"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.PageSize"/> properties (or other criteria).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.AllowPaging">
            <summary>
            Returns or sets a Boolean value that determines whether paging is allowed.
            </summary>
            <remarks>
            <p class="body">True if the grid allows paging; otherwise, False (default).</p>
            <p class="body">Paging enables the grid to display data as multiple pages, rather than simply one page at a time.</p>
            <p class="body">When paging is enabled, the number of the current data pages is displayed (see <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.PageCount"/>).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.StyleMode">
            <summary>
            Returns or sets a value that specifies the type of <see cref="T:Infragistics.WebUI.UltraWebGrid.Pager"/> user interface to render on the client.
            </summary>
            <remarks>
            <p class="body">When paging is not enabled for the grid, this property is ignored. Developers can be enable paging by setting the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.AllowPaging"/> property to True.</p>
            <p class="body">The Numeric (default) setting renders the page selection panel as a list of page numbers, beginning with 1 and ending with the value of the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.PageCount"/> property, each as a hyperlink. In grid applications with a large number of pages where the page selection list wraps across multiple lines of the page selection pane, developers are encouraged to select an alternate setting to avoid overwhelming the end user.</p>
            <p class="body">The PrevNext setting renders the current page number and total number of pages, with customizable text hyperlinks (<see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.PrevText"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.NextText"/>) to move to adjacent page. This setting may be best for grid applications in which the end user should be confined to move between pages in a linearly sequence.</p>
            <p class="body">The CustomLabels setting uses the text labels specified by <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.CustomLabels"/> instead of the page numbers as the rendered links for different pages. This allows the developer to associate letters or names meaningful to the end user with the pages.</p>
            <p class="body">The ComboBox setting displays the page numbers within a drop-down combo box (a simple HTML &lt;select&gt;) that end users can choose their next page from. Use of this setting may be preferred when random-access is required (cf, Numeric) but the width of the grid in the browser is narrow and a long list of page numbers is undesirable.</p>
            <p class="body">The QuickPages setting lists a reduced number of page numbers ahead of and behind the currently-viewed page (it offers a middle-ground between Numeric's random access and PrevNext's constraint, and allows for further fine-tuning through the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.QuickPages"/> property).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.PagerAppearance">
            <summary>
            Returns or sets a value that specifies where the <see cref="T:Infragistics.WebUI.UltraWebGrid.Pager">Pager</see> selection pane is rendered.
            </summary>
            <remarks>
            <p class="body">The Top setting renders the page selection pane above the grid on the client.</p>
            <p class="body">The Bottom (default) setting renders the page selection pane below the grid on the client.</p>
            <p class="body">The Both setting renders the page selection pane identically both above and below the grid on the client.</p>
            <p class="body">When an end user clicks on a page link in the pager where <b>PagerAppearance</b> is Both, the specific instance
            of the page selection pane (whether it was the top or bottom pane) is indistinguishable on the server.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.Alignment">
            <summary>
            Returns or sets a value that specifies the horizontal alignment of the text displayed when paging is enabled.
            </summary>
            <remarks>
            <p class="body">The Left setting horizontally aligns the text within the pager at the left.</p>
            <p class="body">The Center setting horizontally aligns the text centrally within the pager.</p>
            <p class="body">The Right (default) setting horizontally aligns the text within the pager at the right.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.PrevText">
            <summary>
            Returns or sets the text that is displayed in the "Previous Page" link when the grid allows paging.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Prev".</p>
            <p class="body">The text that is displayed for the "Next Page" link is specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.NextText"/> property.</p>
            <p class="body">The "Previous Page" link will not be shown unless the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.AllowPaging"/> property is set to True and the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.StyleMode"/> property is set to PrevNext.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.NextText">
            <summary>
            Returns or sets the text that is displayed in the "Next Page" link when the grid allows paging.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Next".</p>
            <p class="body">The text that is displayed for the "Previous Page" link is specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.PrevText"/> property.</p>
            <p class="body">The "Next Page" link will not be shown unless the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.AllowPaging"/> property is set to True and the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.StyleMode"/> property is set to PrevNext.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.CustomLabels">
            <summary>
            Returns or sets a list of strings that determine the text to be displayed in lieu of page indices when paging is enabled.
            </summary>
            <remarks>
            <p class="body">This property is ignored unless the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.AllowPaging"/> property is set to True, and the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.StyleMode"/> property is set to CustomLabels.</p>
            <p class="body">When this property is set, the corresponding text label is displayed instead of the page's numeric index. Developers could use this property if, for
            example, their UltraWebGrid application were listing pages based on the characters of the alphabet.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.ChangeLinksColor">
            <summary>
            Allows designers to apply the pager foreground color to the page links.
            </summary>
            <remarks>
            <p class="body">If set to true, the <b>ForeColor</b> of the pager's <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.Style">Style</see> is applied to the page hyperlinks.
            Designers may wish to do this if they want the page links to match that of other foreground text appearing within the page selection list.</p>
            <p class="body">By default, the links' color are inherited from the &lt;body&gt; settings for it's ALINK and VLINK (visited) attributes, or if unspecified on the &lt;body&gt;
            it will be based on the browser's default settings for these colors (which may be customized or overriden by the end user).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.QuickPages">
            <summary>
            Number of quick pages accessible in both directions.
            </summary>
            <remarks>
            <p class="body">If the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.StyleMode"/> property is set to QuickPages then this property controls how many pages are accessible from 
            the current page in any direction (backwards or forwards). For example, if the property is set to 2, then up to 4 more pages are accessible 
            from the current one: the two following pages and two preceding pages. If the current page is the first/last page (or there are fewer than the
            specified number of pages left in that direction), then no (or fewer) page numbers may be displayed in that direction.</p>
            <p class="body">This property is ignored when <b>StyleMode</b> indicates any other setting than QuickPages.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.Pattern">
            <summary>
            Pattern text template displayed within the page selection pane.
            </summary>
            <remarks>
            <p class="body">
            Use this to customize the text displayed in the pager area by adding literal text, HTML formatting 
            and substitution tokens within square brackets that are replaced at run-time. 
            </p>
            <list type="bullet">
            <item>[default] - default pager HTML markup is rendered here. The actual text will depend on the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.StyleMode"/> setting.</item>
            <item>[currentpageindex] - index of the current page.</item>
            <item>[pagecount] - number of pages.</item>
            <item>[pagesize] - number of rows per page.</item>
            <item>[prev] - the link to the previous page.</item>
            <item>[next] - the link to the next page.</item>
            <item> [page:N:text] - the link to the page N. N can be either the page number or words 'first', 'prev', 'next' or 'last'.  The text value is used for the link name; if omitted the page number is rendered.</item>
            </list>
            <p class="body">
            Make sure you include the [default] token or the pager links generated by the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.StyleMode"/> setting won't be rendered. The Pattern property can be used with all 
            StyleMode settings. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Pager.MinimumPagesForDisplay">
            <summary>
            The number of pages of data required to show the pager.
            </summary>
            <remarks>
            <p class="body">Increasing this value sets a minimum number of pages required to display the pager.  For example:</p>
            <ul>
            <li>When the PageSize is 10 and MinimumPagesForDisplay is 2, 11 or more rows are required to display the pager.</li>
            <li>When the PageSize is 10 and MinimumPagesForDisplay is 3, 21 or more rows are required to display the pager.  If 20 or fewer rows are present, all rows will be displayed on one page.</li>
            </ul>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterOptions">
            <summary>
            This class encapsulates default settings for RowFiltering
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterOptions.#ctor">
            <summary>
            Default constructor	
            </summary>
            <remarks>Not for general use. This class is instatiated by the control for use by the user.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterOptions.LoadViewState(System.Object)">
            <summary>
            Loads ViewState of the control.
            </summary>
            <remarks>
            <p class="body">Called automatically by the control to rehydrate the server side object based on it's persisted viewstate.</p>
            </remarks>
            <param name="savedState">The viewstate of the grid that was returned by the page.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterOptions.SaveViewState">
            <summary>
            Persists the object along with it's child elements into the Page's ViewState.
            </summary>
            <remarks>Called automatically to persist the object into ViewState</remarks>
            <returns>An object array containing ViewState information.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterOptions.TrackViewState">
            <summary>
            Marks modified elements for serialization into ViewState
            </summary>
            <remarks>
            <p class="body">Called automatically by the control to determine which properties need to be persisted into ViewState.</p>		
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterOptions.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterOptions"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterOptions.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterOptions"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterOptions"/> class to their default values.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterOptions.CopyFrom(Infragistics.WebUI.UltraWebGrid.FilterOptions)">
            <summary>
            Applies the attributes of an existing <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterOptions"/> object to the current <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewRow"/> 
            object.
            </summary>
            <remarks>
            <p class="body">Invoke this method to copy some or all of an existing object's property settings to 
            another object of the same type.</p>
            <p class="body">All the properties of the object provided are copied by this method into the current object.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.GatherFilterData">
            <summary>
            Gets or sets whether the FilterOption owner should programmatically gather data 
            when filter is dropped
            </summary>
            <remarks>This property is to be used in conjuction with the FilterCollection property of the Column.  If the FitlerCollection is
            populated on the server, and the list is complete, then setting this to False will prevent the control from gathering data
            for the filter.  This can be used rather then canceling the BeforeFilterPopulated event on the client.
            
            If all the filters are being populated programmatically, then this property can be used to turn off all data mining.
            If the value of NotSet is set to the FilterOptionsDefault, the value will resolve to DefaultableBoolean.True
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterIcon">
            <summary>
            Whether the column headers will display a filter icon or not for grids that use the HeaderIcons FilterUIType.
            </summary>
            <remarks>
            <p class="body">
            If you set the FilterIcon to false, you can programmatically set filters on the column that the user will not be 
            able to change using the filter dropdown in the column header.
            </p>
            <p class="body">
            This property will only affect columns that would normally display a FilterIcon. The FilterIcon property will 
            be ignored if filtering is not enabled or if the <see cref="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterUIType">FilterUIType</see> is not
            set to <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterUIType">HeaderIcons</see>.
            </p>
            <p class="body">
            Setting this property will affect an entire band. You can also set this property at the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.FilterIcon">column</see> or <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FilterOptionsDefault">grid</see> level. 
            </p>
            <p class="body">
            For more information about using this property, see the <a href="WebGrid_Hide_the_Filter_Icon_for_a_Column.html">
            Hide the Filter Icon for a Column</a> help topic.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.DropDownRowCount">
            <summary>
            DropDownRowCount states how many rows should be displayed in the DropDown.  If this value is 
            set then it will be used instead of the height set on the FilterDropDownLayout.
            </summary>
            <remarks>
            <p>This property is designed to limit the visible area of the DropDown.</p>
            If this value is set to a value less then zero it will be reset to zero.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.EqualsString">
            <summary>
            Gets or sets the string used for the Equals condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.NotEqualsString">
            <summary>
            Gets or sets the string used for the NotEquals condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.LikeString">
            <summary>
            Gets or sets the string used for the Like condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.NotLikeString">
            <summary>
            Gets or sets the string used for the NotLike condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.GreaterThanString">
            <summary>
            Gets or sets the string used for the GreaterThan condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.GreaterThanOrEqualsString">
            <summary>
            Gets or sets the string used for the GreaterThanOrEquals condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.LessThanString">
            <summary>
            Gets or sets the string used for the LessThan condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.LessThanOrEqualsString">
            <summary>
            Gets or sets the string used for the LessThanOrEquals condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.StartsWithString">
            <summary>
            Gets or sets the string used for the StartsWith condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.DoesNotStartWithString">
            <summary>
            Gets or sets the string used for the DoesNotStartWith condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.EndsWithString">
            <summary>
            Gets or sets the string used for the EndsWith condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.DoesNotEndWithString">
            <summary>
            Gets or sets the string used for the DoesNotEndWith condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.ContainsString">
            <summary>
            Gets or sets the string used for the Contains condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.DoesNotContainString">
            <summary>
            Gets or sets the string used for the DoesNotContain condition for row filtering
            </summary>
            <remarks>Used by the FilterRow feature, this string appears in the Item list drop next to the icon for the filtering type.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.AllString">
            <summary>
            Gets or sets the string used for the All condition for row filtering
            </summary>
            <remarks>If the All condition is not to be used by the end user, set the ShowAllCondition property
            to false.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.EmptyString">
            <summary>
            Gets or sets the string used for the Empty condition for row filtering
            </summary>
            <remarks>If the Empty condition is not to be used by the end user, set the ShowEmptyCondition property
            to false.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.NonEmptyString">
            <summary>
            Gets or sets the string used for the NonEmpty condition for row filtering
            </summary>
            <remarks>
            If the NonEmpty condition is not to be used by the end user, set the ShowNonEmptyCondition property
            to false.
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.ShowAllCondition">
            <summary>
            Gets or sets whether or not the All option should be included in the filter list
            </summary>
            <remarks>
            When set to true, the text that is listed on the <seealso cref="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.AllString"/>
            will be used in the filter list.  If false this option is not visible to the end user.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.ShowEmptyCondition">
            <summary>
            Gets or sets whether or not the Empty option should be included in the filter list
            </summary>
            <remarks>
            When set to true, the text that is listed on the <seealso cref="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.EmptyString"/>
            will be used in the filter list.  If false this option is not visible to the end user.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.ShowNonEmptyCondition">
            <summary>
            Gets or sets whether or not the NonEmpty option should be included in the filter list
            </summary>
            <remarks>
            When set to true, the text that is listed on the <seealso cref="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.NonEmptyString"/>
            will be used in the filter list.  If false this option is not visible to the end user.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.ApplyOnAdd">
            <summary>
            Gets or sets if filter is applied to the rows collection after a new row is added.
            </summary>
            <remarks>
            If the property is set to True, the new row that is added to the rows collection is evaluated and depending on the
            filtering conditions, may be hidden.
            
            At the Layout level, NotSet will resolve to False.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.AllowRowFiltering">
            <summary>
            Gets or sets whether the object will allow row filtering
            </summary>
            <remarks>Setting this value will enable or disable row filtering based on values of the cells in the column.
            <p class="body">If using MergeCells with Column Filtering the the RowFiltering property needs to be set to OnServer for correct operation.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterDropDownStyle">
            <summary>
            The default style that will be appplied to row filtering box. 
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to row filtering box that is dropped down showing filter options.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterHighlightRowStyle">
            <summary>
            The default style that will be appplied to row filtering box. 
            </summary>
            <remarks>
            <p class="body">This property specifies a default style that will be applied to row filtering box that is dropped down showing filter options.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterDropDownStyleMerged">
            <summary>
            FilterDropDownStyleMerged is called by each band during renderering.  
            </summary>
            <remarks>I do not expect this method to be called by the FilterOptionDefault object, since 
            each band is going to call this individiually 
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterHighlightRowStyleMerged">
            <summary>
            FilterHighlightRowStyleMerged is called by each band during renderering.  
            </summary>
            <remarks>I do not expect this method to be called by the FilterOptionDefault object, since 
            each band is going to call this individiually 
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.HasFilterHighlightRowStyle">
            <summary>
            Determines if a style has been applied to highlighted row of the filter. 
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for the highlighted row is on the layout level.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.HasFilterDropDownStyle">
            <summary>
            Determines if a style has been applied to row filter. 
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for the row filter box is on the layout level.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.RowFilterMode">
            <summary>
            RowFilterMode controls how the filtering will be evaluated.
            </summary>
            <remarks>
            The RowFilterMode is what determines the span of data that can be changed by a single filter.  Under SiblingRowsOnly, the filter is applied
            to the collection of rows closest to the filter.  Under AllRowsInBand the filter is applied on a more global level.
            
            On the DefaultLayout.FilterOptionsDefault, the value of NotSet will be evaluated as RowFilterMode.SiblingRowsOnly
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.HasFilterRowStyle">
            <summary>
            Determines if a style has been applied to filter row.
            </summary>
            <remarks>
            <p class="body">Returns True if a default style for the filter row is on the layout level.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterRowStyle">
            <summary>
            The GridItemStyle that will be used to style the FilterRow
            </summary>
            <remarks>
            <p class="body">The FilterRow can be styled either at the Default level or individually by accessing FilterOption object off the UltraGridBand.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterRowStyleMerged">
            <summary>
            FilterRowStyleMerged is called by each band during renderering.  
            </summary>
            <remarks>I do not expect this method to be called by the FilterOptionDefault object, since 
            each band is going to call this individiually 
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.HasFilterOperandDropDownStyle">
            <summary>
            Determines if a style has been applied to FilterOperandDropDown 
            </summary>
            <remarks>
            <p class="body">Returns True if a style is set for the FilterOperandDropDown..</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterOperandDropDownStyle">
            <summary>
            The GridItemStyle that will be used to style the FilterOperandDropDown
            </summary>
            <remarks>
            <p class="body">The FilterOperandDropDown can be styled either at the Default level or individually by accessing FilterOption object off the UltraGridBand.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.HasFilterOperandItemStyle">
            <summary>
            Determines if a style has been applied to FilterOperandItem 
            </summary>
            <remarks>
            <p class="body">Returns True if a style is set for the FilterOperandItem.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterOperandItemStyle">
            <summary>
            The GridItemStyle that will be used to style the FilterOperandItem
            </summary>
            <remarks>
            <p class="body">The FilterOperandItem can be styled either at the Default level or individually by accessing FilterOption object off the UltraGridBand.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.HasFilterOperandItemHoverStyle">
            <summary>
            Determines if a style has been applied to FilterOperandItemHover 
            </summary>
            <remarks>
            <p class="body">Returns True if a style is set for the FilterOperandItemHover.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterOperandItemHoverStyle">
            <summary>
            The GridItemHoverStyle that will be used to style the FilterOperandItemHover
            </summary>
            <remarks>
            <p class="body">The FilterOperandItemHover can be styled either at the Default level or individually by accessing FilterOption object off the UltraGridBand.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.HasFilterOperandButtonStyle">
            <summary>
            Determines if a style has been applied to FilterOperandButton 
            </summary>
            <remarks>
            <p class="body">Returns True if a style is set for the FilterOperandButton.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterOperandButtonStyle">
            <summary>
            The GridItemStyle that will be used to style the FilterOperandButton
            </summary>
            <remarks>
            <p class="body">The FilterOperandButton can be styled either at the Default level or individually by accessing FilterOption object off the UltraGridBand.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterComparisonType">
            <summary>
            Specifies whether the filtering is performed case-sensitive. Default is to perform filtering case-insensitive.  
            </summary>
            <remarks>
            By default the UltraWebGrid performs filtering using case-insensitive string comparison. You can set the FilterComparisonType property to CaseSensitive to perform filtering using case sensitve string comparisons.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterUIType">
            <summary>
            The FilterUIType controls how the WebGrid will allow the user to interact with the filtering mechanism.
            </summary>
            <remarks>
            When resolved at the FilterOptionDefault object, a setting of Default will evaluate to HeaderIcons.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterRowView">
            <summary>
            The FilterRowView determines where the FilterRow object will be rendered on the control.
            </summary>
            <remarks> 
            This property controls whether the FilterRow will be located on the header or footer object.  The Value of
            NotSet on the FilterOptionDefault object will be seen as Top during the Render phase on Band Zero.        
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterOptions.FilterEvaluationTrigger">
            <summary>
            Specifies when the filter input into filter row cells is applied.
            </summary>
            <remarks>When using RowFilter based row filtering, when the actual filtering takes place is control by this property.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterRowCell">
            <summary>
            FilterRowCell is used by the WebGrid to render the cells in a FilterRow
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterRowCell.Infragistics#WebUI#UltraWebGrid#IRenderable#Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            If an element supports rendering this method should be implemented
            </summary>
            <param name="stream">
            Direct output stream
            </param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RenderDesignHTML">
            <summary>
            Renderer for Design Time
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RenderDHTMLGrid">
            <summary>
               Implements all HTML rendering logic for the control
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RenderDHTMLGrid.RenderGroupByRowImage(Infragistics.WebUI.UltraWebGrid.GroupByRow)">
            <summary>
            Renders out the Image that was set on the GroupByRow
            </summary>
            <param name="row">The GroupByRow which is currently being processed.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RenderDHTMLGrid.RenderCellCheckbox(Infragistics.WebUI.UltraWebGrid.UltraGridCell,System.Boolean)">
            <summary>
            This method supports the Infragistics control infrastructure and is not intended for
            use from application code.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RenderDHTMLGrid.ResolveStyle(System.Object)">
            <summary>
            Resolves style for the cell up to the object model
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RenderDnLvlHTML">
            <summary>
            Renderer for Down Level Browser
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IPlugInConsumer">
            <summary>
            Interface permitting registration of external plug-ins.
            </summary>
            <remarks>
            <p class="body">The UltraWebGrid control implements this interface
            to act as a consumer of content rendered by external plug-ins.  This
            interface allows external plug-ins to register their conforming
            implementations with the UltraWebGrid.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IPlugInConsumer.AddFactory(Infragistics.WebUI.UltraWebGrid.IPlugInFactory)">
            <summary>
            Provides an <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInFactory"/> to UltraWebGrid to use when
            creating instances of external plug-ins.
            </summary>
            <param name="factoryImpl">
            An implementation of <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInFactory"/>.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IPlugInConsumer.RemoveFactory(Infragistics.WebUI.UltraWebGrid.IPlugInFactory)">
            <summary>
            Removes a previously registered <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInFactory"/> with UltraWebGrid
            to use when creating instances of external plug-ins.
            </summary>
            <param name="factoryImpl">
            An implementation of <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInFactory"/> that must have been previously
            added to this <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInConsumer"/> to be removed.
            </param>
            <remarks>
            <p class="body">If the given <i>factoryImpl</i> has not been registered with this
            instance of an UltraWebGrid <b>IPlugInConsumer</b>, then nothing happens.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IPlugInFactory">
            <summary>
            Interface permitting implementations of plug-in interfaces to be created.
            </summary>
            <remarks>
            <p class="body">Plug-in providers must implement this in one of their
            components and supply it to an <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInConsumer"/> through
            that Consumer's <see cref="M:Infragistics.WebUI.UltraWebGrid.IPlugInConsumer.AddFactory(Infragistics.WebUI.UltraWebGrid.IPlugInFactory)">AddFactory</see>
            method.  It is important that the plug-in implementation remove itself</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IPlugInFactory.CreateExternalRenderer">
            <summary>
            Creates a concrete implementation of the <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInRender"/>
            interface that can be used to insert HTML into that rendered by
            UltraWebGrid at specific points.
            </summary>
            <returns>An implementation of <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInRender"/>.</returns>
            <remarks>
            <p class="body">This method is called by the UltraWebGrid when it is
            about to generate HTML at extensible points during its rendering.
            These extensibility points are defined by the <see cref="T:Infragistics.WebUI.UltraWebGrid.RenderLocation"/>
            enumeration.</p>
            <p class="body">After the rendering is complete, whether or not the
            renderer returned from this factory method is used, if it implements
            <b>IDisposable</b> then its <b>Dispose</b> method is called to clean-up
            any resources it may require.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IPlugInRender">
            <summary>
            An interface that defines the services an external plug-in must
            provide to UltraWebGrid to inject customized HTML into the rendering.
            </summary>
            <remarks>
            <p class="body">Developers that want to inject custom HTML at one of
            the extensibility points defined by the <see cref="T:Infragistics.WebUI.UltraWebGrid.RenderLocation"/>
            enumeration must implement this interface and <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInFactory"/>
            and then register their factory object with an <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInConsumer"/>
            such as UltraWebGrid.</p>
            <p class="body">Developers who wish confirmation that their <b>IPlugInRender</b>
            implementation has been called but not used (because <see cref="P:Infragistics.WebUI.UltraWebGrid.IPlugInRender.Location"/> does
            not match the current rendering point), or that have resource-intensive
            implementations, are advised to additionally implement <see cref="M:Infragistics.WebUI.UltraWebGrid.IPlugInRender.Dispose(System.Boolean)"/>
            for end-of-life notification and clean-up.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IPlugInRender.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders custom HTML content at the current <see cref="P:Infragistics.WebUI.UltraWebGrid.IPlugInRender.Location"/> in UltraWebGrid.
            </summary>
            <param name="output">
            An <b>HtmlTextWriter</b> drain into which custom content shall be rendered by this
            method.
            </param>
            <returns>
            Guidance the consumer that is True if subsequent rendering plug-ins should be called,
            false otherwise (some <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInConsumer"/> implementations are at liberty to
            disregard this advice).
            </returns>
            <remarks>
            <p class="body">This method will only be invoked on a plug-in renderer when its desired
            <see cref="P:Infragistics.WebUI.UltraWebGrid.IPlugInRender.Location"/> matchs the current extensibility point within UltraWebGrid's
            rendering process.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IPlugInRender.Dispose(System.Boolean)">
            <summary>
            Disposes of any resources retained by the current <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInRender"/> implementation.
            </summary>
            <param name="skipped">Indicates this <b>IPlugInRender</b> was skipped.</param>
            <remarks>
            <p class="body">This method is <i>always</i> invoked after an <b>IPlugInRender</b> implementation
            has been created. If the <see cref="M:Infragistics.WebUI.UltraWebGrid.IPlugInRender.Render(System.Web.UI.HtmlTextWriter)"/> method was skipped because <see cref="P:Infragistics.WebUI.UltraWebGrid.IPlugInRender.Location"/>
            does not match the current rendering point within UltraWebGrid, the <i>skipped</i> parameter will
            be true.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.IPlugInRender.Location">
            <summary>
            Point in UltraWebGrid's rendering at which this HTML is to be injected.
            </summary>
            <remarks>
            <p class="body">If the location at which this <b>IPlugInRender</b> implementation
            is offering its services does not match the location at which UltraWebGrid is
            presently rendering, then the <see cref="M:Infragistics.WebUI.UltraWebGrid.IPlugInRender.Render(System.Web.UI.HtmlTextWriter)"/> method will not be called.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RendererConsumerBase">
            <summary>
            Base class implementing <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInConsumer"/> that
            supports pluggable external renderers for UltraWebGrid.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RendererConsumerBase.#ctor">
            <summary>
            Creates a basic plug-in consumer for external renderers.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RendererConsumerBase.Infragistics#WebUI#UltraWebGrid#IPlugInConsumer#AddFactory(Infragistics.WebUI.UltraWebGrid.IPlugInFactory)">
            <summary>
            Adds an <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInFactory"/> implementation.
            </summary>
            <param name="factoryImpl">An <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInFactory"/> implementation
            to be added.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RendererConsumerBase.Infragistics#WebUI#UltraWebGrid#IPlugInConsumer#RemoveFactory(Infragistics.WebUI.UltraWebGrid.IPlugInFactory)">
            <summary>
            Removes an <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInFactory"/> implementation, if present.
            </summary>
            <param name="factoryImpl">An <see cref="T:Infragistics.WebUI.UltraWebGrid.IPlugInFactory"/> implementation
            to be removed.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RendererConsumerBase.RenderExternal(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders content generated externally from UltraWebGrid into the HTML
            at the current Location.
            </summary>
            <param name="output">
            Drain into which to sink the content generated by external renderers.
            </param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RendererConsumerBase.Location">
            <summary>
            Specifies the current location of HTML rendering for this
            server control.
            </summary>
            <value>A <see cref="T:Infragistics.WebUI.UltraWebGrid.RenderLocation"/> at which external
            rendering is being injected.</value>
            <remarks>
            <p class="body">It is the developer's responsibility to
            set this property to the appropriate value to reuse a
            single instance of <b>RendererConsumerBase</b> across
            the whole rendering process.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RenderDelegate">
            <summary>
            Delegate representing the rendering behavior of an HTML server control.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.InGridRenderer">
            <summary>
            Plug-in renderer implementation that allows extensions to render
            themselves in special docking regions within the UltraWebGrid.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.InGridRenderer.#ctor(Infragistics.WebUI.UltraWebGrid.RenderDelegate,Infragistics.WebUI.UltraWebGrid.RenderLocation)">
            <summary>
            Creates an instance of an In-Grid external renderer.
            </summary>
            <param name="renderCallBack">A method that can be called back
            to initiate rendering from the extension control that will be
            consumed by UltraWebGrid.
            </param>
            <param name="where">The dockable location within the UltraWebGrid
            where the extension control desires to be rendered.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.InGridRenderer.Infragistics#WebUI#UltraWebGrid#IPlugInRender#Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders content to the appropriate docking region of UltraWebGrid.
            </summary>
            <param name="writer">An <b>HtmlTextWriter</b> drain in which to
            deposit the rendered HTML content for inclusion within the grid.
            </param>
            <returns>True if subsequent renderers should be called, false
            otherwise.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.InGridRenderer.Infragistics#WebUI#UltraWebGrid#IPlugInRender#Dispose(System.Boolean)">
            <summary>
            Method for disposing resources retained during the render operation.
            </summary>
            <param name="skipped">Whether this external renderer was skipped.</param>
            <remarks>
            <p class="body">This method as presently implemented performs no operation.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.InGridRenderer.Infragistics#WebUI#UltraWebGrid#IPlugInRender#Location">
            <summary>
            Gets the location where this extension control should be rendered
            within UltraWebGrid.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RenderXmlGrid">
            <summary>
            Implements XML rendering logic for the UltraWebGrid.
            </summary>
            <remarks>
            <p class="body">This renderer is only used when the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Browser">Browser</see> is set to a
            <see cref="T:Infragistics.WebUI.UltraWebGrid.BrowserLevel">BrowserLevel</see> of <b>Xml</b>. At present, only a serialization of the UltraWebGrid
            in the layout schema is supported.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RenderXmlGrid.WriteFilterCollection(System.Web.UI.HtmlTextWriter,Infragistics.WebUI.UltraWebGrid.UltraWebGrid)">
            <param name="writer">HtmlTextWriter - the writer that is currently scribing the webgrid</param>
            <param name="grid">UltraWebGrid - the webgrid being rendered</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RenderXmlGrid.WriteXmlResponseObject(System.Web.UI.HtmlTextWriter,Infragistics.WebUI.UltraWebGrid.UltraWebGrid)">
            <summary>
            Adds the XML response object to the WebGrid downstream payload.
            </summary>
            <param name="writer">HtmlTextWriter - the writer that is currently scribing the webgrid</param>
            <param name="grid">UltraWebGrid - the webgrid being rendered</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo">
            <summary>
            Holds information about positioning and sizing of a layout element inside its layout.
            </summary>
            <remarks>
            The developer is responsible for proper size/position of the items in the layout.
            If a position set exceeds the layout boundaries it is being wrapped to be correct.
            Overlapped items are not rendered except the latest in the order within layout.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo.#ctor">
            <summary>
            The RowLayoutColumnInfo object contains infromation on how to render the position of the ColumnHeaders 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo.CopyFrom(Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo)">
            <summary>
            Copies the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo"/> object
            </summary>
            <remarks>Perfroms a deep object copy of the source element.</remarks>
            <param name="source">The <see cref="T:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo"/> object which is to be copied.</param>
            <returns>A reference to the current object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo.ToString">
            <summary>
            Overrides default string representation.
            </summary>
            <returns>
            Always returns an empty string.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo.OriginX">
            <summary>
            Left offset of the layout element.
            </summary>
            <remarks>
            The offset is defined in virtual units. One unit equals approximately one column width.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo.OriginY">
            <summary>
            Top offset of the layout element. 
            </summary>
            <remarks>
            The offset is defined in virtual units. One unit equals approximately one item height. The item implied is the actual layout element, for example column header height is taken for the header layout element.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo.SpanX">
            <summary>
            Horizontal span of the layout element. 
            </summary>
            <remarks>
            The span is defined in virtual units. One unit equals approximately one column width.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo.SpanY">
            <summary>
            Vertical span of the layout element. 
            </summary>
            <remarks>
            The span is defined in virtual units. One unit equals approximately one item height. The item implied is the actual layout element, for example column header height is taken for the header layout element.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowLayoutColumnInfo.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowsCollection">
            <summary>
            The Rows Collection manages a set of UltraGridRow objects which are the child rows of an individual Row.  
            </summary>
            <remarks>
            <p class="body">The UltraGridRow objects in a Rows Collection make up a <i>data island</i>. The top-level Rows of a grid are all part of a single data island.</p>
            <p class="body">If the grid is hierarchical, then one or more top-level UltraGridRow objects will have its own Rows Collection, which contains one or more Row objects. This creates a tree structure of parent rows and child rows that is used to display hierarchical data.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.#ctor">
            <summary>
            Constructor for a RowsCollection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.#ctor(System.Boolean)">
            <summary>
            Constructor for a RowsCollection
            </summary>
            <param name="bTrackViewState">True if ViewState should be tracked for this object.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.GetEnumerator">
            <summary>
            Returns an enumerator object for the Rows collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.FromKey(System.String)">
            <summary>
            Key string indexer for the collection. Uses key string to return a row.  
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.FromDataKey(System.Object[])">
            <summary>
            Retrieves a row from the collection by its data key;
            </summary>
            <param name="dataKey">Compound data key of the row to retrieve. Simple data key has to be passed as a singular element of the objects array.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Boolean,System.Boolean)">
            <summary>
            Adds an UltraGridRow object to the collection with control over column template instantiation and
            cell initialization.
            </summary>
            <param name="row">The UltraGridRow object to be added.</param>
            <param name="proceedTemplates">Indicates whether the column templates should be instantiated.</param>
            <param name="withCells">If true the new row's collection of cells will be initialized with empty cells.</param>
            <remarks>
            <p class="body">The new <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> is added to the collection.</p>
            <p class="body">The cells contained by <i>row</i> will be initialized with empty cells.</p>
            <p class="body">If the web application has already specified cell values of the correct data types, <i>withCells</i>
            can be False to prevent reinitialization of those cells. An application developer may pass skip cell initialization,
            if for example, the web application has already specified its own set of default values for the cells that may (for
            application-specific reasons) differ from the default value normally assigned by each <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/>.
            </p>
            <p class="body">Developers may suppress the instantiation of column templates at this point by passing False
            to the <i>proceedTemplates</i> parameter.</p>
            <p class="note">Calling this method has no effect if this <b>RowsCollection</b> is already a non-empty Group By
            collection.  Group By creates its own row collections based on the grouping functionality.  It is inadvisable
            to manually alter a Group By row collection's membership.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.GenerateCellItemID(Infragistics.WebUI.UltraWebGrid.CellItem)">
            <summary>
            Creates a unique ID for a CellItem object based on its position in the grid. 
            </summary>
            <remarks>
            This is meant for internal use only. 
            </remarks>
            <param name="cellItem">The CellItem object that needs an ID</param>
            <returns>A unique ID string that's based on the CellItem's position in the grid.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.GenerateCellItemID(Infragistics.WebUI.UltraWebGrid.CellItem,System.Int32)">
            <summary>
            Creates a unique ID for a CellItem object based on its modified position in the grid. 
            </summary>
            <remarks>
            This is meant for internal use only. This method is called in the cases when the ID needs to be generated 
            with a particular index, not based on the position of the cell item in the CellItems array.
            </remarks>
            <param name="cellItem">The CellItem object that needs an ID</param>
            <param name="cellIndex">The CellItem object's index that should be used for the ID</param>
            <returns>A unique ID string that's based on the CellItem's position in the grid.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Boolean)">
            <summary>
            Adds an UltraGridRow object to the collection with control over column template instantiation.
            </summary>
            <param name="row">The UltraGridRow object to be added.</param>
            <param name="proceedTemplates">Indicates whether the column templates should be instantiated.</param>
            <remarks>
            <p class="body">The new <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> is added to the collection. Its cells are initialized
            with empty cells.  Developers may suppress the instantiation of column templates at this point by passing\
            False to the <i>proceedTemplates</i> parameter.</p>
            <p class="note">Calling this method has no effect if this <b>RowsCollection</b> is already a non-empty Group By
            collection.  Group By creates its own row collections based on the grouping functionality.  It is inadvisable
            to manually alter a Group By row collection's membership.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Adds an UltraGridRow object to the collection.
            </summary>
            <param name="row">The UltraGridRow object to be added.</param>
            <remarks>
            <p class="body">The new <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> is added to the collection. Its cells are initialized
            with empty cells. Any column templates are then instantiated.</p>
            <p class="note">Calling this method has no effect if this <b>RowsCollection</b> is already a non-empty Group By
            collection.  Group By creates its own row collections based on the grouping functionality.  It is inadvisable
            to manually alter a Group By row collection's membership.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Add">
            <summary>
            Creates and adds an UltraGridRow object to the collection.
            </summary>
            <remarks>
            <p class="body">A new <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> is created and then added to this <see cref="T:Infragistics.WebUI.UltraWebGrid.RowsCollection"/>.
            Its cells are initialized with empty cells. Any column templates are then instantiated.</p>
            <p class="note">Calling this method has no effect if this <b>RowsCollection</b> is already a non-empty Group By
            collection.  Group By creates its own row collections based on the grouping functionality.  It is inadvisable
            to manually alter a Group By row collection's membership.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Add(System.String)">
            <summary>
            Creates and adds an UltraGridRow object to the collection using the key value provided.
            </summary>
            <param name="key">The key value to use for the newly created row.</param>
            <remarks>
            <p class="body">A new <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> is created and then added to this <see cref="T:Infragistics.WebUI.UltraWebGrid.RowsCollection"/>.
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Key">Key</see> property of the new row is given the value specified by the developer
            through the <i>key</i> parameter.  The cells of the new row are then initialized with empty cells.  Any column
            templates are then instantiated.</p>
            <p class="note">Calling this method has no effect if this <b>RowsCollection</b> is already a non-empty Group By
            collection.  Group By creates its own row collections based on the grouping functionality.  It is inadvisable
            to manually alter a Group By row collection's membership.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Boolean)">
            <summary>
            Inserts an UltraGridRow object into the collection at the specified index.
            </summary>
            <param name="index">The position in the collection for the new row. Note that if you specify the index of an existing row, the new row will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="row">The UltraGridRow object to be inserted into the collection.</param>
            <param name="proceedTemplates">Indicates whether the column templates should be instantiated.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Inserts an UltraGridRow object into the collection at the specified index.
            </summary>
            <param name="index">The position in the collection for the new row. Note that if you specify the index of an existing row, the new row will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="row">The UltraGridRow object to be inserted into the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Removes the specified UltraGridRow object from the collection.
            </summary>
            <param name="row">The UltraGridRow object to be removed from the collection.</param>
            <remarks>
            <p class="body">Developers can use this method to remove a row from a rows
            collection. If this row was formerly the selected or active row (or it
            contained a selected or active cell) then the selection/activation is
            cancelled prior to the row being removed.</p>
            <p class="note">Any child rows of the row to be removed are disconnected
            from it and also removed.  If an application needs to move a row from one
            rows collection to another with all child rows intact, then it should
            simply add the row to the new parent rows collection (it will be detached
            from this rows collection by its new parent rows collection's <b>Add</b> 
            method).</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.RemoveAt(System.Int32)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the UltraGridRow object at the specified index from the collection.
            </summary>
            <param name="index">The index of the UltraGridRow object to be removed.</param>
            <remarks>
            <p class="body">Developers can use <b>RemoveAt</b> when they know the zero-based <i>index</i>
            of the row they wish to remove. If an object reference to the row to be removed is available
            then <see cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/> can be used instead.</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Clear">
            <summary>
            Removes all of the UltraGridRow objects from the collection.
            </summary>
            <remarks>
            <p class="body">Calling this method is equivalent to calling <see cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>
            on each row within this rows collection. After clearing the collection, it will contain zero
            rows.</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Clear(System.Boolean)">
            <summary>
            Removes all of the UltraGridRow objects from the collection.
            </summary>
            <param name="clearHistory">When true is passed it clears the changes history as well. Should be used when a large data source is bound to reduce the size of the view state.</param>
            <remarks>
            <p class="body">Calling this method is equivalent to calling <see cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>
            on each row within this rows collection. After clearing the collection, it will contain zero
            rows.</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.GetNextRowDepthFirst(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            This method returns the next UltraGridRow within the grid's overall hierarchical structure.
            </summary>
            <param name="ndSearch">An UltraGridRow object for which the next row in the grid should be returned.</param>
            <returns>An UltraGridRow object that corresponds to the row appearing immediately following <i>ndSearch</i> in the overall data hierarchy, or null (Nothing in Visual Basic .NET) if <i>ndSearch</i> is the last row of the grid.</returns>
            <remarks>
            <p class="body">This method is useful for navigating the structure of the grid as it appears when all rows are expanded. Developers can find out which row occurs immediately after a specific row (appearing immediately beneath it on the screen) by passing the row's <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object to this method.</p>
            <p class="body">If the specified row has child rows, the first one is returned. Otherwise, if the row has a next sibling, that sibling is returned. Otherwise, the parent chain is searched to see if the row's parent has a next sibling.</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>ndSearch</i> is supplied as null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.GetPreviousRowDepthFirst(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            This method returns the previous UltraGridRow within the grid's overall hierarchical structure.
            </summary>
            <param name="pdSearch">An UltraGridRow object for which the next row in the grid should be returned.</param>
            <returns>An UltraGridRow object that corresponds to the row immediately preceeding <i>pdSearch</i> in the overall data hierarchy, or null (Nothing in Visual Basic .NET) if <i>pdSearch</i> is the first row of the grid.</returns>
            <remarks>
            <p class="body">This method is useful for navigating the structure of the grid as it appears when all rows are expanded. Developers can find out which row occurs immediately before a specific row (appearing immediately above it on the screen) by passing the row's <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object to this method.</p>
            <p class="body">If the specified row has preceeding siblings, the next predecessor is returned. Otherwise, if the row has a parent, that parent is returned.</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>pdSearch</i> is supplied as null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Sort(System.Boolean)">
            <summary>
            Sorts the Rows collection.
            </summary>
            <remarks>
            <p class="body">
            This method has been deprecated. Use the <see cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Sort"/> method without a parameter instead. 
            </p>
            <p class="body">
            If you need to set case sensitivity, use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SortCaseSensitiveDefault"/> 
            property of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/>, <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> or <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/>.
            </p>
            </remarks>
            <param name="caseSensitive">If True, the sort will be case-sensitive. Case is ignored if False.</param>
            <returns>The sorted Rows collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Sort">
            <summary>
            Sorts the Rows collection.
            </summary>
            <remarks>
            <p class="body">
            This method uses the SortedColumn collection of the band to determine which columns to sort by.
            </p>
            <p class="body">
            To choose whether to sort case sensitively or not, set the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.SortCaseSensitiveDefault"/> 
            property of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/>, <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> or <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/>.
            </p>
            </remarks>
            <returns>The sorted Rows collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.GetFooterText(System.String)">
            <summary>
            Returns text of a footer by the key naming it's column.
            </summary>
            <param name="columnKey">The key of a column whose footer text is returned.</param>
            <returns>The column's footer text.</returns>
            <remarks>
            <p class="body">If the column of the footer does not have a <b>Key</b>
            then you cannot access it's footer text through this method.</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.GetFooterText(System.Int32)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.GetFooterText(System.Int32)">
            <summary>
            Returns text of a footer by the ordinal index of it's column.
            </summary>
            <param name="columnNo">The column's index whose footer text is returned.</param>
            <returns>The column's footer text.</returns>
            <remarks>
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.GetFooterText(System.String)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.SetFooterText(System.String,System.String)">
            <summary>
            Sets text on a footer.
            </summary>
            <param name="columnKey">The key of a column whose footer text is set.</param>
            <param name="footerText">The footer text to be set.</param>
            <remarks>
            <p class="body">This method has no effect if a column does not exist within
            this <see cref="T:Infragistics.WebUI.UltraWebGrid.RowsCollection"/> with a <b>Key</b> matching <i>columnKey</i>.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.SetFooterText(System.Int32,System.String)">
            <summary>
            Sets a footer text.
            </summary>
            <param name="columnNo">The column's index which footer text is set.</param>
            <param name="footerText">The footer text to be set.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.GetRow(System.Int32,System.Boolean)">
            <summary>
            Returns a row from index.
            </summary>
            <param name="index">
            The index of the row to return.
            </param>
            <param name="respectFilter">
            Indicates if filtering of the rows should be respected. If true then the index provided is applied to viisible rows only.
            </param>
            <returns>
            Row that corresponds to the index. Null if no row is found.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the rows collection.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The rows collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
            <remarks>
            The rows collection don't have any attributes. This method always returns -1.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
            <remarks>
            The rows collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
            <remarks>
            The rows collection don't have any attributes. This method always returns Null.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the rows collection. It is always XPathNodeType.Element.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the rows collection.
            </summary>
            <returns>
            Self if the rows collection is a top one. Cells collection of the parent row otherwise,
            as the cells collection precedes the rows collection in the XPath order.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Always Null as the rows collection has no next siblings in the XPath order.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Gets the previous sibling of the rows collection.
            </summary>
            <returns>
            Null if the rows collection is a top one. Cells collection of the parent row otherwise,
            as the cells collection precedes the rows collection in the XPath order.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the rows collection parent node.
            </summary>
            <returns>
            Null if the rows collection is a top one. The parent row otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the rows collection.
            </summary>
            <returns>
            First child row of the rows collection.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.Band">
            <summary>
            Provides access to the UltraGridBand object that contains this collection of rows.
            </summary>
            <remarks>This property should not be set at run time.</remarks>
            
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.IsReadOnly">
            <summary>
            Returns a Boolean value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.Item(System.Int32)">
            <summary>
            Property indexer for the Rows Collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.ColumnFilters">
            <summary>
            The ColumnFilters collection contains the filter object which will be applied to this
            particular RowIsland.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.HasColumnFilters">
            <summary>
            Returns true if this object has a ColumnFiltersCollection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the rows collection has attributes.
            </summary>
            <remarks>
            The rows collection has no attributes. The property is always false.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the rows collection node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the rows collection node.
            </summary>
            <remarks>
            The rows collection has no node value. The property is always Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the rows collection has children.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.Footers">
            <summary>
            Holds the row island footers if any.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.HasVisibleRows">
            <summary>
            Returns true if there are rows in this rows collection that will be visible on the client
            and false the rows collection will be empty on the client. 
            </summary>
            <remarks>
            <p class="body">
            Checks if all the rows' <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Hidden"/> property is true or if all
            the of the rows are filtered out. 
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowsCollection.RowEnumerator">
            <summary>
            Enumerator class for iterating through a RowsCollection object
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.RowEnumerator.#ctor(Infragistics.WebUI.UltraWebGrid.RowsCollection)">
            <summary>
            Constructor for the RowEnumerator class
            </summary>
            <param name="theRows">The collection of Rows to be enumerated</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.RowEnumerator.MoveNext">
            <summary>
            Increments the enumeration to point to the next Row in the collection
            </summary>
            <returns>boolean - true if there is a next element, false if not</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.RowsCollection.RowEnumerator.Reset">
            <summary>
            Resets the enumeration to the beginning of the collection
            			/// </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.RowsCollection.RowEnumerator.Current">
            <summary>
            Provides access to the current Row of the enumeration
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SortRowsCollection">
            <summary>
            The delegate describes a method that can be assigned to the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortImplementation"/> 
            property to implement custom sorting algorithm for the collection. The method takes two 
            parameters - original collection and a reference to the array of indices. Only the array 
            of indices should be modified during sorting. After the method quits the grid will reorder 
            the rows inside of the collection.
            </summary>
            <param name="rows">Rows collection that is being sorted. No changes need to be done 
            to the collection during sorting, the grid will straighten the collection after the 
            sorting is complete.</param>
            <param name="indices">Array of indices of the collection. The array should be modified to 
            provide sorted order of the rows after the sorting is complete. The grid will straighten
            the rows order after this method quits.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterCondition">
            <summary>
            The FilterCondition object is used by the WebGrid to represent a filter.  
            </summary>
            <remarks>This object encapsulates the value and operand information of a filter so that the data can be manipulated accordingly.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterCondition.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>Not for public use.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterCondition.#ctor(Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator,System.Object)">
            <summary>
            Creates a new FilterCondition object
            </summary>        
            <param name="comparisonOperator">The FilterComparisionOperator value designating what kind of operation will be used for evaluation.</param>
            <param name="comparisonValue">The Value that the comparison operation will use.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterCondition.#ctor(System.String,Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator,System.Object)">
            <summary>
            Creates a new FilterCondition object
            </summary>
            <param name="key">A String value to be used for locating the condition inside the collection.</param>
            <param name="comparisonOperator">The FilterComparisionOperator value designating what kind of operation will be used for evaluation.</param>
            <param name="comparisonValue">The Value that the comparision operation will use.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterCondition.#ctor(System.String)">
            <summary>
            Creates a new FilterCondition object
            </summary>
            <param name="key">A String value to be used for locating the condition inside the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterCondition.MeetsCriteria(System.Object,System.String)">
            <summary>
            Evaluates whether the passed in values will allow the row to be displayed during filtering using the Like operator
            </summary>
            <param name="value">Value to be compared against CompareValue of the FilterCondition.</param>
            <param name="text">The text representation, used for comparisons for empty and not empty.</param>
            <returns>True if the row should be displayed based on the condition and the inputted value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterCondition.MeetsCriteriaLike(System.Object,System.String,System.Boolean)">
            <summary>
            Evaluates whether the passed in values will allow the row to be displayed during filtering.
            </summary>
            <param name="value">Value to be compared against CompareValue of the FilterCondition.</param>
            <param name="text">The text representation, used for comparisons for empty and not empty.</param>
            <returns>True if the row should be displayed based on the condition and the inputted value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterCondition.MeetsCriteriaStringMods(System.Object,System.String,System.Boolean,Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator)">
            <summary>
            Evaluates whether the passed in values will allow the row to be displayed during filtering.
            </summary>
            <param name="value">Value to be compared against CompareValue of the FilterCondition.</param>
            <param name="text">The text representation, used for comparisons for empty and not empty.</param>
            <returns>True if the row should be displayed based on the condition and the inputted value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterCondition.MeetsCriteria(System.Object,System.String,System.Boolean)">
            <summary>
            Evaluates whether the passed in values will allow the row to be displayed during filtering.
            </summary>
            <param name="value">Value to be compared against CompareValue of the FilterCondition.</param>
            <param name="text">The text representation, used for comparisons for empty and not empty.</param>
            <param name="ignoreCase">True if the string comparisons should ignore case when evaluating.</param>
            <returns>True if the row should be displayed based on the condition and the inputted value.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterCondition.ComparisonOperator">
            <summary>
            The FilterComparisionOperator which signals which type of comparison will be executed by this Filter.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterCondition.CompareValue">
            <summary>
            The Value that will be used by the filter to determine whether the row should be filtered in or out.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterCondition.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.FilterConditionsCollection">
            <summary>
            A collection of <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterCondition"/> objects, which represent a filter in the WebGrid.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterConditionsCollection.#ctor">
            <summary>
            Creates a new FilterConditionsCollection
            </summary>
            <remarks>Not for general use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterConditionsCollection.Add">
            <summary>
            Adds a new FilterCondition object to the collection
            </summary>
            <returns>A new FilterCondition object</returns>
            <remarks>
            When adding a FilterCondition to the Collection, if the ComparisonOperator and CompareValue are equal, the original item
            from the list is returned and the list is not modified.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterConditionsCollection.Add(System.String)">
            <summary>
            Adds a new FilterCondition object to the collection
            </summary>
            <param name="key">A unique String identifier for the object</param>
            <returns>A new FilterCondition object</returns>
            <remarks>
            When adding a FilterCondition to the Collection, if the ComparisonOperator and CompareValue are equal, the original item
            from the list is returned and the list is not modified.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterConditionsCollection.Add(Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator,System.Object)">
            <summary>
            Adds a new FilterCondition object to the collection
            </summary>		
            <param name="comparisonOperator">The FilterComparisionOperator which will be used to compare the Filter to the Rows.</param>
            <param name="comparisonValue">The Value that will be used as a comparison point for the filter.</param>
            <returns>A new FilterCondition object</returns>
            <remarks>
            When adding a FilterCondition to the Collection, if the ComparisonOperator and CompareValue are equal, the original item
            from the list is returned and the list is not modified.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterConditionsCollection.Add(System.String,Infragistics.WebUI.UltraWebGrid.FilterComparisionOperator,System.Object)">
            <summary>
            Adds a new FilterCondition object to the collection
            </summary>
            <param name="key">A unique String identifier for the object</param>
            <param name="comparisonOperator">The FilterComparisionOperator which will be used to compare the Filter to the Rows.</param>
            <param name="comparisonValue">The Value that will be used as a comparison point for the filter.</param>
            <returns>A new FilterCondition object</returns>
            <remarks>
            When adding a FilterCondition to the Collection, if the ComparisonOperator and CompareValue are equal, the original item
            from the list is returned and the list is not modified.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.FilterConditionsCollection.Add(Infragistics.WebUI.UltraWebGrid.FilterCondition)">
            <summary>
            Adds a new FilterCondition object to the collection
            </summary>
            <param name="fc">The FilterCondition object that will be added to the collection.</param>
            <returns>A new FilterCondition object</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterConditionsCollection.ContainsAllCondition">
            <summary>
            Returns true if the All Condition is in the collection.  
            </summary>
            <remarks>Primarily for internal use.  Detects if the All Condition is inside the collection.  </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterConditionsCollection.Item(System.Int32)">
            <summary>
            Property indexer for the collection.  
            </summary>
            <remarks>Allows for iteration through this collection.</remarks>
            <param name="index">The index of the member in the collection</param>
            <returns>The FilterCondition object at the index.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterConditionsCollection.IsReadOnly">
            <summary>
            Returns a Boolean value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.FilterConditionsCollection.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnFilter">
            <summary>
            The ColumnFilter contains the <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterCondition"/> collection for a given <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFilter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFilter.#ctor(System.String)">
            <summary>
            Creates a new ColumnFilter object
            </summary>
            <param name="key">string - the unique identified for this object in the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFilter.#ctor(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Creates a new ColumnFilter object
            </summary>
            <param name="column">UltraGridColumn - the UltraGridColum object which this filter applies to.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFilter.#ctor(System.String,Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Creates a new ColumnFilter object
            </summary>
            <param name="key">string - the unique identified for this object in the collection.</param>
            <param name="column">UltraGridColumn - the UltraGridColum object which this filter applies to.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFilter.MeetsCriteria(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            MeetsCriteria takes an UltraGridRow object and processes it through all the existing FilterConditions.  If the Row
            object passes all the filters, true is returned.
            </summary>
            <param name="row">The UltraGridRow to process</param>
            <returns>True if there are no filter conditions or if the Row object's cells all pass the filter conditons.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFilter.Column">
            <summary>
            The Column which this ColumnFilter applies
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFilter.FilterConditions">
            <summary>
            The FilterConditions which will apply to the column
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFilter.HasFilterConditions">
            <summary>
            Returns true if the FilterConditionsCollection has been created.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFilter.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection">
            <summary>
            A collection of <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnFilter"/> objects, used to hold what filters will be executed on a given data set	
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection.#ctor">
            <summary>
            Creates a new ColumnFiltersCollection object
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection.#ctor(System.Boolean)">
            <summary>
            Creates a new ColumnFiltersCollection object
            </summary>
            <param name="bTrack">bool - tracks viewState</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection.Add">
            <summary>
            Adds a new ColumnFilter object to the collections
            </summary>
            <returns>A new ColumnFilter object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection.Add(System.String,Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Adds a new ColumnFilter object to the collections
            </summary>
            <param name="key">String - A unique identifier for the object in the collection.</param>
            <param name="column">UltraGridColumn - The UltraGridColumn object which will be manipulated by the ColumnFilter.</param>
            <returns>A new ColumnFilter object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection.Add(System.String)">
            <summary>
            Adds a new ColumnFilter object to the collections
            </summary>
            <param name="key">String - A unique identifier for the object in the collection.</param>
            <returns>A new ColumnFilter object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Adds a new ColumnFilter object to the collections
            </summary>
            <param name="column">UltraGridColumn - The UltraGridColumn object which will be manipulated by the ColumnFilter.</param>
            <returns>A new ColumnFilter object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection.Add(Infragistics.WebUI.UltraWebGrid.ColumnFilter)">
            <summary>
            Adds a new ColumnFilter object to the collections
            </summary>
            <param name="cf">The ColumnFilter to be added to the collection.</param>
            <returns>A new ColumnFilter object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection.GetFilterByColumn(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Returns the ColumnFilter object from the collection which is set against a particular column.
            </summary>
            <param name="col">The UltraGridColumn object to search against.</param>
            <returns>A ColumnFilter object that is currently effecting the UltraGridColumn.  Null if no match is found.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection.Item(System.Int32)">
            <summary>
            Property indexer for the collection.  
            </summary>
            <remarks>Allows for iteration through this collection.</remarks>
            <param name="index">The index of the member in the collection</param>
            <returns>The ColumnFilter object at the index.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection.IsReadOnly">
            <summary>
            Returns a Boolean value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ColumnFiltersCollection.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection">
            <summary>
            This collection manages the UltraGridCell objects that have been selected with the mouse on the client.  
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.GetEnumerator">
            <summary>
            Returns an enumerator object for the SelectedCells collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Inserts an UltraGridCell object into the collection.
            </summary>
            <remarks>
            <p class="body">Adding an UltraGridCell object to this collection will cause that cell to become selected in the grid. Depending on the type of selection that is allowed, this may cause other cells to become unselected.</p>
            </remarks>
            <param name="cell">The UltraGridCell object to be added.</param>
            <returns>The index of the newly added UltraGridCell.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Inserts an UltraGridCell object into the collection at the specified index.
            </summary>
            <remarks>
            <p class="body">Adding an UltraGridCell object to this collection will cause that cell to become selected in the grid. Depending on the type of selection that is allowed, this may cause other cells to become unselected.</p>
            </remarks>
            <param name="index">The position in the collection for the new cell. Note that if you specify the index of an existing cell, the new cell will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="cell">The UltraGridCell object to be inserted into the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Removes the specified UltraGridCell object from the collection.
            </summary>
            <remarks>
            <p class="body">Removing an UltraGridCell object from this collection will de-select the corresponding cell in the grid.</p>
            </remarks>
            <param name="cell">The UltraGridCell object to be removed from the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the UltraGridCell object at the specified index from the collection.
            </summary>
            <remarks>
            <p class="body">Removing an UltraGridCell object from this collection will de-select the corresponding cell in the grid.</p>
            </remarks>
            <param name="index">The index of the UltraGridCell object to be removed.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.Clear">
            <summary>
            Removes all UltraGridCell objects from the collection.
            </summary>
            <remarks>
            <p class="body">Invoking this method will de-select any selected cells in the grid.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.index(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Gets the index of an UltraGridCell object in the collection
            </summary>
            <param name="cell">The UltraGridCell to find in the collection.</param>
            <returns>Int32 index value of the cell in the collection</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.CopyTo(Infragistics.WebUI.UltraWebGrid.UltraGridCell[],System.Int32)">
            <summary>
            Copies the elements of the collection to a System.Array, starting at a particular System.Array index.
            </summary>
            <param name="cells">The one dimensional System.Array that is the destination for the copied elements.</param>
            <param name="index">The starting index for the copied elements.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.IndexOf(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Gets the index of an UltraGridCell object in the collection
            </summary>
            <param name="cell">The UltraGridCell to find in the collection.</param>
            <returns>Int32 index value of the cell in the collection</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.Contains(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Determines whether the collection contains the specified UltraGridCell object.
            </summary>
            <param name="cell">The UltraGridCell object whose presence in the collection you want to verify.</param>
            <returns>True if the specified object exists in the collection. False if the object was not found in the collection.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.IsReadOnly">
            <summary>
            Returns a Boolean value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.Item(System.Int32)">
            <summary>
            Property indexer for the SelectedRowsCollection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.SelectedCellEnumerator.#ctor(Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection)">
            <summary>
            Constructor for creating a SelectedCells enumerator.
            </summary>
            <param name="theCells">The cells collection to be enumerated</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.SelectedCellEnumerator.MoveNext">
            <summary>
            Moves to the next Row of the enumeration
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.SelectedCellEnumerator.Reset">
            <summary>
            Resets the enumeration to the beginning
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection.SelectedCellEnumerator.Current">
            <summary>
            Provides access to the current row of the enumeration
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection">
            <summary>
            This collection manages the UltraGridColumn objects that have been selected with the mouse on the client.  
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.GetEnumerator">
            <summary>
            Returns an enumerator object for the collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Inserts an UltraGridColumn object into the collection.
            </summary>
            <remarks>
            <p class="body">Adding an UltraGridColumn object to this collection will cause that column to become selected in the grid. Depending on the type of selection that is allowed, this may cause other columns to become unselected.</p>
            </remarks>
            <param name="column">The UltraGridColumn object to be added.</param>
            <returns>The index of the newly added UltraGridColumn.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Inserts an UltraGridColumn object into the collection at the specified index.
            </summary>
            <remarks>
            <p class="body">Adding an UltraGridColumn object to this collection will cause that column to become selected in the grid. Depending on the type of selection that is allowed, this may cause other columns to become unselected.</p>
            </remarks>
            <param name="index">The position in the collection for the new column. Note that if you specify the index of an existing column, the new column will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="column">The UltraGridColumn object to be inserted into the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Removes the specified UltraGridColumn object from the collection.
            </summary>
            <remarks>
            <p class="body">Removing an UltraGridColumn object from this collection will de-select the corresponding column in the grid.</p>
            </remarks>
            <param name="column">The UltraGridColumn object to be removed from the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the UltraGridColumn object at the specified index from the collection.
            </summary>
            <remarks>
            <p class="body">Removing an UltraGridColumn object from this collection will de-select the corresponding column in the grid.</p>
            </remarks>
            <param name="index">The index of the UltraGridColumn object to be removed.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.Clear">
            <summary>
            Removes all UltraGridColumn objects from the collection.
            </summary>
            <remarks>
            <p class="body">Invoking this method will de-select any selected columns in the grid.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.CopyTo(Infragistics.WebUI.UltraWebGrid.UltraGridColumn[],System.Int32)">
            <summary>
            Copies the elements of the collection to a System.Array, starting at a particular System.Array index.
            </summary>
            <param name="columns">The one dimensional System.Array that is the destination for the copied elements.</param>
            <param name="index">The starting index for the copied elements.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.IndexOf(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Gets the index of an UltraGridColumn object in the collection
            </summary>
            <param name="column">The UltraGridColumn to find in the collection.</param>
            <returns>Int32 index value of the cell in the collection</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.Contains(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Determines whether the collection contains the specified UltraGridColumn object.
            </summary>
            <param name="column">The UltraGridColumn object whose presence in the collection you want to verify.</param>
            <returns>True if the specified object exists in the collection. False if the object was not found in the collection.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.IsReadOnly">
            <summary>
            Returns a Boolean value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.Item(System.Int32)">
            <summary>
            Property indexer for the SelectedCols Collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.SelectedColumnEnumerator.#ctor(Infragistics.WebUI.UltraWebGrid.SelectedColsCollection)">
            <summary>
            Constructor for creating a SelectedCells enumerator.
            </summary>
            <param name="theColumns">The Columns collection to be enumerated</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.SelectedColumnEnumerator.MoveNext">
            <summary>
            Moves to the next column of the enumeration
            </summary>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.SelectedColumnEnumerator.Reset">
            <summary>
            Resets the enumeration to the beginning
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection.SelectedColumnEnumerator.Current">
            <summary>
            Provides access to the current column of the enumeration
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection">
            <summary>
            This collection manages the UltraGridRow objects that have been selected with the mouse on the client.  
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.#ctor">
            <summary>
            Creates a new SelectedRowsCollection
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.#ctor(Infragistics.WebUI.UltraWebGrid.UltraGridLayout)">
            <summary>
            Creates a new SelectedRowsCollection
            </summary>
            <param name="lo">The <strong>UltraGridLayout</strong> object to associate with this collection.</param>
            <remarks>Not for public use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.GetEnumerator">
            <summary>
            Returns an enumerator object for the collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.IndexOf(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Returns index of the specified UltraGridRow object or -1 if the collection does not contain the row.
            </summary>
            <param name="row">An UltraGridRow object whose index you want fo find out.</param>
            <returns>The index of the passed-in UltraGridRow object if the object exists in the collection, -1 if the object is not found in the collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Inserts an UltraGridRow object into the collection.
            </summary>
            <remarks>
            <p class="body">Adding an UltraGridRow object to this collection will cause that row to become selected in the grid. Depending on the type of selection that is allowed, this may cause other rows to become unselected.</p>
            </remarks>
            <param name="row">The UltraGridRow object to be added.</param>
            <returns>The index of the newly added UltraGridRow.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Inserts an UltraGridRow object into the collection at the specified index.
            </summary>
            <remarks>
            <p class="body">Adding an UltraGridRow object to this collection will cause that row to become selected in the grid. Depending on the type of selection that is allowed, this may cause other rows to become unselected.</p>
            </remarks>
            <param name="index">The position in the collection for the new row. Note that if you specify the index of an existing row, the new row will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="row">The UltraGridRow object to be inserted into the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Removes the specified UltraGridRow object from the collection.
            </summary>
            <remarks>
            <p class="body">Removing an UltraGridRow object from this collection will de-select the corresponding row in the grid.</p>
            </remarks>
            <param name="row">The UltraGridRow object to be removed from the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the UltraGridRow object at the specified index from the collection.
            </summary>
            <remarks>
            <p class="body">Removing an UltraGridRow object from this collection will de-select the corresponding row in the grid.</p>
            </remarks>
            <param name="index">The index of the UltraGridRow object to be removed.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.Clear">
            <summary>
            Removes all UltraGridRow objects from the collection.
            </summary>
            <remarks>
            <p class="body">Invoking this method will de-select any selected rows in the grid.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.Contains(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Determines whether the collection contains the specified UltraGridRow object.
            </summary>
            <param name="row">The UltraGridRow object whose presence in the collection you want to verify.</param>
            <returns>True if the specified object exists in the collection. False if the object was not found in the collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.CopyTo(Infragistics.WebUI.UltraWebGrid.UltraGridRow[],System.Int32)">
            <summary>
            Copies the current values of the collection to the inputted UltraGridRow array.
            </summary>
            <param name="rows">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.IsReadOnly">
            <summary>
            Returns a Boolean value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection.Item(System.Int32)">
            <summary>
            Property indexer for the SelectedRows collection.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.SortedColsCollection">
            <summary>
            The collection of UltraGridColumn objects that are being used to sort the data in the band.
            </summary>
            <remarks>
            <p class="body">You can sort data in a Band on a column-by-column basis by choosing the columns you want to use as sort criteria and sorting them. As you choose a column to sort on, its UltraGridColumn object is added to the <b>SortedCols</b> collection. You can use this collection to determine which columns that are being used to sort the Band and to access the UltraGridColumn objects for those columns as needed.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.#ctor">
            <summary>
            Creates a new SortedColsCollection object.
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Inserts an UltraGridColumn object into the collection.
            </summary>
            <param name="webGridColumn">The UltraGridColumn object to be added.</param>
            <returns>The index of the newly added UltraGridColumn.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.Add(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Boolean)">
            <summary>
            Inserts an UltraGridColumn object into the collection.
            </summary>
            <param name="webGridColumn">The UltraGridColumn object to be added.</param>
            <param name="performSort">Forces the grid to be sorted in pre-render.</param>
            <returns>The index of the newly added UltraGridColumn.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.Add(System.String)">
            <summary>
            Inserts an UltraGridColumn object into the collection. The column is being addressed by its key.
            </summary>
            <param name="key">Key of the column to insert into the collection</param>
            <returns>Index of the column inside of the collection. -1 if the method failed.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.Add(System.String,System.String)">
            <summary>
            Inserts an UltraGridColumn object into the collection. The column is being addressed by its key. This method is an override, it should not be used explicitely in the code.
            </summary>
            <param name="key">Key of the column to insert into the collection</param>
            <param name="headerText">Header of the column. This parameter is ignored for the sorted columns collection.</param>
            <returns>Index of the column inside of the collection. -1 if the method failed.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Inserts an UltraGridColumn object into the collection at the specified index.
            </summary>
            <remarks>
            <p class="body">Adding an UltraGridColumn object to this collection will cause that column to become selected in the grid. Depending on the type of selection that is allowed, this may cause other columns to become unselected.</p>
            </remarks>
            <param name="index">The position in the collection for the new column. Note that if you specify the index of an existing column, the new column will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="webGridColumn">The UltraGridColumn object to be inserted into the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Boolean)">
            <summary>
            Inserts an UltraGridColumn object into the collection at the specified index.
            </summary>
            <remarks>
            <p class="body">Adding an UltraGridColumn object to this collection will cause that column to become selected in the grid. Depending on the type of selection that is allowed, this may cause other columns to become unselected.</p>
            </remarks>
            <param name="index">The position in the collection for the new column. Note that if you specify the index of an existing column, the new column will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="webGridColumn">The UltraGridColumn object to be inserted into the collection.</param>
            <param name="performSort">Forces the grid to be sorted in pre-render.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Removes the specified UltraGridColumn object from the collection.
            </summary>
            <param name="webGridColumn">The UltraGridColumn object to be removed from the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.Remove(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Boolean)">
            <summary>
            Removes the specified UltraGridColumn object from the collection.
            </summary>
            <param name="webGridColumn">The UltraGridColumn object to be removed from the collection.</param>
            <param name="performSort">Forces the grid to be sorted in pre-render.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the UltraGridColumn object at the specified index from the collection.
            </summary>
            <param name="index">The index of the UltraGridColumn object to be removed.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.RemoveAt(System.Int32,System.Boolean)">
            <summary>
            Removes the UltraGridColumn object at the specified index from the collection.
            </summary>
            <param name="index">The index of the UltraGridColumn object to be removed.</param>
            <param name="performSort">Forces the grid to be sorted in pre-render.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.Clear">
            <summary>
            Removes all UltraGridColumn objects from the collection.
            </summary>
            <remarks>
            <p class="body">Invoking this method will remove any sorted column in the band from its sorted columns collection and will reset its sort indicators to <b>None</b>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.Clear(System.Boolean)">
            <summary>
            Removes all UltraGridColumn objects from the collection.
            </summary>
            <remarks>
            <p class="body">Invoking this method will remove any sorted column in the band from its sorted columns collection and will reset its sort indicators to <b>None</b>.</p>
            </remarks>
            <param name="performSort">
            Forces the grid to be sorted in pre-render.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.SortedColsCollection.Clear(System.Boolean,System.Boolean)">
            <summary>
            Removes all UltraGridColumn objects from the collection.
            </summary>
            <remarks>
            <p class="body">Invoking this method will remove any sorted column in the band from its sorted columns collection.</p>
            </remarks>
            <param name="keepSortIndicators">
            Indicates if the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.SortIndicator">sort indicators</see> off the sorted columns should be preserved.
            </param>
            <param name="performSort">
            Forces the grid to be sorted in pre-render.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name
            </summary>
            <param name="value">Name of the category to retreive</param>
            <returns>The localized string value</returns>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.StateChange">
            <summary>
            Internal object used to track changes from the client that were executed on the WebGrid 
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.StateChange.#ctor">
            <summary>
            Internal object
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.StateChange.Type">
            <summary>
            Internal object
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.StateChange.Level">
            <summary>
            Internal object
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.StateChange.DataKey">
            <summary>
            Internal object
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.StateChange.Value">
            <summary>
            Internal object
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.StateChange.OldValue">
            <summary>
            Internal object
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.StateChange.Applied">
            <summary>
            Internal object
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.StateChange.FireEvent">
            <summary>
            Internal object
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.StateChange.Tag">
            <summary>
            Internal object
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.StateChange.InternalTag">
            <summary>
            Internal object
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.StateChanges">
            <summary>
            Used internally
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.StateChanges.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.StateChanges.IndexOf(System.Object)">
            <summary>
            Used internally
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.StateChanges.HasChange(System.String)">
            <summary>
            Searches for a change with specified name.
            </summary>
            <param name="name">Type of the change to search.</param>
            <returns>True if the change exists.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.StateChanges.Item(System.Int32)">
            <summary>
            Used internally
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.Strings">
            <summary>
            This class provides a common location for string that are used in the grid.
            </summary>
            <remarks>The strings class exposes strings that are used in various facets of the WebGrid rendering 
            which are exposed here for convienence.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Strings.#ctor">
            <summary>
            Initializes the <see cref="T:Infragistics.WebUI.UltraWebGrid.Strings"/> object.
            </summary>
            <remarks>
            Default constructor
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Strings.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.Strings"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Strings.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.Strings"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the Strings class to their default values.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Strings.Clone">
            <summary>
            Clone the Strings object
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.Strings.CopyFrom(Infragistics.WebUI.UltraWebGrid.Strings)">
            <summary>
            Copy the Strings object
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.AddNewPrompt">
            <summary>
            Returns or sets a string of text that is displayed to the left of the <see cref="T:Infragistics.WebUI.UltraWebGrid.AddNewBox"/> button.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Add..."</p>
            <p class="body">If the AddNewBox button is hidden, the text specified by this property is not visible.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.GroupByBoxPrompt">
            <summary>
            Returns or sets a string of text that indicates to the user how to perform GroupBy operations.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Drag a column header here to group by that column."</p>
            <p class="body">The prompt will not be shown unless the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.ViewType"/> property is set to OutlookGroupBy.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.GroupByRowDescriptionMaskDefault">
            <summary>
            A string that determines what text is shown in GroupBy rows. This is the default value that may be overridden by individual bands.
            </summary>
            <remarks>
            The <b>GroupByRowDescriptionMaskDefault</b> property can include special substitution strings that will be replaced with information from the grid. For example, you can use them to specify child row count of a GroupBy row. By default, the <tt>[caption]</tt>, <tt>[value]</tt>, and <tt>[count]</tt> substitution strings are set. The column header text gets placed into the <tt>[caption]</tt> field, the common cell value gets placed into the <tt>[value]</tt> field, and the number of rows sharing the common value is placed into the <tt>[count]</tt> field.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.NoDataMessage">
            <summary>
            A string value that specifies the message that should be displayed when the grid contains no data.
            </summary>
            <remarks>
            <p class="body">The default message is "No Data To Display".</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.NullTextDefault">
            <summary>
            Specifies how null values will be represented in the grid. This is the default value that may be overridden by individual band.
            </summary>
            <remarks>
            <p class="body">This property spcifies a string value that will be displayed in a grid cell whenever a null value is received for that cell from the back end. The default setting is to use an empty string (""). However, you can specify any string you want, such as the words "null" or "empty".</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.PagerNextText">
            <summary>
            Returns or sets a string of text that is displayed in the "Next Page" link when the grid allows paging.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Next".</p>
            <p class="body">
            The text that is displayed for the "Previous Page" link is specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.Strings.PagerPrevText"/> property.
            </p>
            <p class="body">
            The "Next Page" link will not be shown unless the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.AllowPaging"/> property is set to 
            True and the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.StyleMode"/> property is set to PrevNext.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.PagerPrevText">
            <summary>
            Returns or sets a string of text that is displayed in the "Previous Page" link when the grid allows paging.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Prev".</p>
            <p class="body">The text that is displayed for the "Next Page" link is specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.Strings.PagerNextText"/> property.</p>
            <p class="body">The "Previous Page" link will not be shown unless the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.AllowPaging"/> property is set to True and the <see cref="P:Infragistics.WebUI.UltraWebGrid.Pager.StyleMode"/> property is set to PrevNext.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.DownLevelEditColumnHeader">
            <summary>
            Returns or sets a string of text that is displayed in the header of the edit column when editing is allowed in the down level grid.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Edit Column".</p>
            <p class="body">The text that is displayed in the header of the edit column. To see that column it is necessary to turn on the down level rendering <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Browser"/> for the grid and allow its editing <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowUpdateDefault"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.DownLevelDeleteColumnHeader">
            <summary>
            Returns or sets a string of text that is displayed in the header of the delete column when deletion is allowed in the down level grid.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Delete Column".</p>
            <p class="body">The text that is displayed in the header of the delete column. To see that column it is necessary to turn on the down level rendering <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Browser"/> for the grid and allow deletion <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowDeleteDefault"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.DownLevelEditPrompt">
            <summary>
            Returns or sets a string of text that is displayed in the edit column cells when editing is allowed in the down level grid.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Edit".</p>
            <p class="body">The text that is displayed in the edit column cells. To see that column it is necessary to turn on the down level rendering <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Browser"/> for the grid and allow its editing <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowUpdateDefault"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.DownLevelUpdatePrompt">
            <summary>
            Returns or sets a string of text that is displayed in the edit column cells when editing is allowed and the grid is in the edit mode in the down level rendering.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Update".</p>
            <p class="body">The text that is displayed in the edit column cells. To see that column it is necessary to turn on the down level rendering <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Browser"/> for the grid and allow its editing <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowUpdateDefault"/>.</p>
            <p class="body">The text appears after an user has clicked on the edit link before. The link with the text is used to update changed information on the server.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.DownLevelCancelPrompt">
            <summary>
            Returns or sets a string of text that is displayed in the edit column cells when editing is allowed and the grid is in the edit mode in the down level rendering.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Cancel".</p>
            <p class="body">The text that is displayed in the edit column cells. To see that column it is necessary to turn on the down level rendering <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Browser"/> for the grid and allow its editing <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowUpdateDefault"/>.</p>
            <p class="body">The text appears after an user has clicked on the edit link before. The link with the text is used to cancel any changes in the edited row and go off the edit mode.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.DownLevelDeletePrompt">
            <summary>
            Returns or sets a string of text that is displayed in the delete column cells when deletion is allowed in the down level grid.
            </summary>
            <remarks>
            <p class="body">The default value of this property is "Delete".</p>
            <p class="body">The text that is displayed in the delete column cells. To see that column it is necessary to turn on the down level rendering <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Browser"/> for the grid and allow deletion <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.AllowDeleteDefault"/>.</p>
            <p class="body">The link with the text is used to delete the row it's in.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Strings.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraWebGridRefBase.FindRoot">
            <summary>
            Retrieves the reference to the root of this reference hierarchy.
            </summary>
            <returns>The implementation of <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/>
            for the root object in this (the current) reference hierarchy.
            </returns>
            <remarks>
            <p class="body">The root reference is used to resolve the
            fully qualifed form of a reference.</p>
            <p class="note">Must be overridden by the Root reference
            to return the <i>this</i> object reference (<i>Me</i> in
            Visual Basic .NET).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraWebGridRefBase.IsSubsetReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Returns true if the supplied Reference is a proper subset of this reference.
            </summary>
            <param name="inReference">The reference to be tested as a candidate proper subset.</param>
            <returns>True if <i>inReference</i> is wholly contained by this reference.</returns>
            <remarks>
            <p class="body">The passed-in reference, <i>inReference</i>, is a <i>proper subset</i> of this, the current
            <b>IUltraCalcReference</b> implementation if every <i>tuple</i> in the passed-in reference is contained by
            this reference <u>and</u> the passed-in reference has no tuple not contained by this reference.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraWebGridRefBase.Context">
            <summary>
            An object from the UltraWebGrid server-side object model that currently
            provides the context of a calculation.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.BandReference.ChildReferences">
            <summary>
            Gets a list for temporary storage of child references.
            </summary>
            <remarks>
            <p class="body">Inheritors can use <b>ChildReferences</b> when they
            override the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.BandReference.GetChildReferences(Infragistics.WebUI.CalcEngine.ChildReferenceType)"/> method of <b>IUltraCalcReference</b>.
            This <b>ArrayList</b> exists for temporary storage purposes only by those
            subclasses overriding <b>GetChildReferences</b> only, its contents are volatile
            and must not be exposed to applications (if the references stored within are
            exposed, they must be copied into a separate array, which is what <b>GetChildReferences</b>
            will commonly do).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.BandReference.ElementName">
            <summary>
            The unqualified name of the referenced <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.BandReference.Band"/>.
            </summary>
            <value>The unqualified name of a band is the same as it's
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Key">Key</see> value, or an autogenerated
            name if the <b>Key</b> has been left unspecified.</value>
            <remarks>
            <p class="body">Used to construct the fully qualified name of this
            band by the <see cref="!:AbsoluteName"/> method. Read Only.
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraCalc.FormulaTargetRefBase.formulaEvaluationResult">
            <summary>
            Stores the result of the calculation engine's evaluation of this formula.
            </summary>
            <remarks>
            <p class="body">This <b>UltraCalcValue</b> may be valueless if it represents
            an error condition raised during the evaluation of the formula (<i>e.g.,</i>
            null reference, incompatible data types, <i>etc.</i>)</p>
            <p class="body">Prior to evaluating the formula on this target, this field
            has a null value (Nothing in Visual Basic .NET).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.FormulaTargetRefBase.#ctor(Infragistics.WebUI.UltraWebGrid.UltraGridLayout,Infragistics.WebUI.UltraWebGrid.UltraCalc.FormulaRefBase,System.Object)">
            <summary>
            Creates and initializes an instance of <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.FormulaTargetRefBase"/> based on a containing <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.FormulaRefBase"/>.
            </summary>
            <param name="layout">The grid layout.</param>
            <param name="containingFormulaRef">The formula's base implementation of <b>IUltraCalcReference</b> encapsulating the
            scope of this formula target is required for initialization.</param>
            <param name="context">The current context object in the grid object model where the formula calculation takes place.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <i>containingFormulaRef</i> is null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.FormulaTargetRefBase.Formula">
            <summary>
            Gets the Formula associated with this object.
            </summary>
            <value>An implementation of <b>IUltraCalcFormula</b> defining
            the associated formula.</value>
            <remarks>
            <p class="body">Instances of <b>FormulaTargetRefBase</b> cannot
            be assigned a different formula once they have been instantiated.</p>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.FormulaTargetRefBase.HasFormula"/>
            </remarks>
            <exception cref="T:System.NotSupportedException">Assigning a formula
            to this property on surrogate <b>IUltraCalcReference</b> implementations
            of this type is not a supported operation.</exception>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.FormulaTargetRefBase.Value">
            <summary>
            Gets the value resulting from evaluating this formula. 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.CellReference.FindAll(System.String)">
            <summary>
            Locates the named reference relative to this reference, with
            scope of "All."
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.CellReference.FindItem(System.String)">
            <summary>
            Locates the named reference to this cell.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name and index.</returns>
            <exception cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException">
            Thrown when no column exists with a <b>Key</b> property matching the
            <i>name</i> parameter.
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.CellReference.FindItem(System.String,System.String)">
            <summary>
            Locates the named, indexed reference to this cell.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index value.</param>
            <returns>The referenced element with that name and index.</returns>
            <exception cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException">
            Thrown when no column exists with a <b>Key</b> property matching the
            <i>name</i> parameter.
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.CellReference.FindItem(System.String,System.Int32,System.Boolean)">
            <summary>
            Locates the named, indexed reference relative to this cell.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index value.</param>
            <param name="isRelative">Indicates if <b>index</b> is relative to this
            cell's base index.</param>
            <returns>The referenced element with that name and index.</returns>
            <exception cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException">
            Thrown when no column exists with a <b>Key</b> property matching the
            <i>name</i> parameter.
            </exception>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.CellReference.BaseParent">
            <summary>
            The parent <b>IUltraCalcReference</b> of this cell.
            </summary>
            <remarks>
            <p class="body">The parent reference of a cell will be it's row.
            A cell can belong to the <b>Cells</b> collection of one row only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.CellReference.ElementName">
            <summary>
            The unqualified name of the cell.
            </summary>
            <remarks>
            <p class="body">Used to construct the fully qualified name of
            this cell as it is referenced from higher-level references,
            with the <see cref="!:AbsoluteName"/> property.</p>
            <p class="body">The local name of a cell is based on the
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Key">Key</see>
            </p>
            <p class="body">This property is Read Only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.CellReference.IsDataReference">
            <summary>
            Indicates whether this reference is a data reference.
            </summary>
            <value>True when this row reference is a data reference.</value>
            <remarks>
            <p class="body">A <i>data reference</i> in the Calc Engine contains a value,
            such as a grid cell or column footer.  Many other referenced elements, such as
            a grid's column or band, do not reference a value and therefore are not treated
            as data references.</p>
            <p class="body">This property is Read Only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.CellReference.Value">
            <summary>
            Gets and/or sets the value from/to the underlying grid cell. 
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.FormulaRefBase.Formula">
            <summary>
            Formula object pertaining to this UltraCalc reference.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.ColumnReference.FindAll(System.String)">
            <summary>
            Locates the named reference relative to this reference, with
            scope of "All."
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.ColumnReference.FindItem(System.String)">
            <summary>
            Returns the named reference relative to this column.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.ColumnReference.FindItem(System.String,System.String)">
            <summary>
            Locates the named, indexed reference relative to this column.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index name.</param>
            <returns>The referenced element with that name and index.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.ColumnReference.FindItem(System.String,System.Int32,System.Boolean)">
            <summary>
            Locates the named, indexed reference relative to this column.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index value.</param>
            <param name="isRelative">Indicates if <b>index</b> is relative to this index.</param>
            <returns>The referenced element with that name and index.</returns>
            <remarks>
            <p class="body">If <i>isRelative</i> is true, then <i>index</i> is treated a
            being relative to this column's index, if any. Otherwise the <i>index</i>
            value is treated as absolute.</p>
            </remarks>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.ColumnReference.FindSummaryItem(System.String)">
            <summary>
            Returns the named summary reference relative to this column.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.ColumnReference.BaseParent">
            <summary>
            The parent <b>IUltraCalcReference</b> surrogate implementation of
            this column.
            </summary>
            <remarks>
            <p class="body">Used to navigate up the element hierarchy. If the
            current column were the root element, <b>BaseParent</b> would return
            null (Nothing in Visual Basic .NET).  Ordinarily, the parent of a
            column reference is that column's band reference.</p>
            <p class="body">This property is Read Only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.ColumnReference.ElementName">
            <summary>
            The unqualified name of the referenced <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn">Column</see>.
            </summary>
            <remarks>
            <p class="body">Used to construct the fully qualified name of this
            column by the <see cref="!:AbsoluteName"/> method. Read Only.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.ColumnReference.IsEnumerable">
            <summary>
            Indicates if this column reference is enumerable.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.ColumnReference.References">
            <summary>
            Gets the collection of references within this column, if it is enumerable.
            </summary>
            <value>An enumerable set of <see cref="!:Infragistics.CalcEngine.IUltraCalcReference">IUltraCalcReference</see>
            implementations scoped by the current column reference.</value>
            <remarks>
            <p class="body">An exception is thrown if this column is not enumerable and
            this method is called.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException">
            <summary>
            Exception signifying a failure to find a reference within UltraWebGrid by the
            UltraCalc engine.
            </summary>
            <remarks>
            <p class="body">This exception may be thrown when an UltraWebGrid object serves
            as an IUltraCalcReference, but exceptional conditions prohibit the UltraCalc
            engine from working with the UltraWebGrid object. A non-exhaustive list of possible
            conditions that could cause this exception to arise include changing the name (Key)
            of a grid object without making a corresponding change to referent Formula(s),
            sudden removal of a grid object with dependencies in the UltraCalc engine during
            re-calc processing (for instance, by way of a separate thread), or unexpected
            topological changes to the calculation network.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException.#ctor">
            <summary>
            Creates an instance of this exception with a default error message.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException.#ctor(System.String)">
            <summary>
            Creates an instance of this exception with the designated error message.
            </summary>
            <param name="message">Error message text.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Creates an instance of this exception with the designated error message and inner exception.
            </summary>
            <param name="message">Error message text.</param>
            <param name="innerException">Exception underlying this <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException"/>,
            often descriptive of the causal factor.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.FooterReference.FindAll(System.String)">
            <summary>
            Locates the named reference relative to this reference, with
            scope of "All."
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.FooterReference.FindItem(System.String)">
            <summary>
            Returns the named reference relative to this column footer.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.FooterReference.FindItem(System.String,System.String)">
            <summary>
            Locates the named, indexed reference relative to this column footer.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index name.</param>
            <returns>The referenced element with that name and index.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.FooterReference.FindItem(System.String,System.Int32,System.Boolean)">
            <summary>
            Locates the named, indexed reference relative to this column footer.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index value.</param>
            <param name="isRelative">Indicates if <b>index</b> is relative to this index.</param>
            <returns>The referenced element with that name and index.</returns>
            <remarks>
            <p class="body">If <i>isRelative</i> is true, then <i>index</i> is treated a
            being relative to this column footer's index, if any. Otherwise the <i>index</i>
            value is treated as absolute.</p>
            </remarks>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.FooterReference.FindSummaryItem(System.String)">
            <summary>
            Returns the named summary reference relative to this column footer.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.FooterReference.BaseParent">
            <summary>
            The parent <b>IUltraCalcReference</b> surrogate implementation of
            this column footer.
            </summary>
            <remarks>
            <p class="body">Used to navigate up the element hierarchy. If the
            current footer were the root element, <b>BaseParent</b> would return
            null (Nothing in Visual Basic .NET).  The parent of a column footer
            is it's column's band.</p>
            <p class="body">This property is Read Only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.FooterReference.ElementName">
            <summary>
            The unqualified name of the referenced <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnFooter"/>.
            </summary>
            <remarks>
            <p class="body">Used to construct the fully qualified name of this
            column footer by the <see cref="!:AbsoluteName"/> method. Read Only.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.FooterReference.IsEnumerable">
            <summary>
            Indicates whether this <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnFooter"/> is enumerable.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.FooterReference.References">
            <summary>
            Gets the collection of references within this column footer, if it is enumerable.
            </summary>
            <value>An enumerable set of <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference">IUltraCalcReference</see>
            implementations scoped by the current column footer reference.</value>
            <remarks>
            <p class="body">An exception is thrown if this column footer is not
            enumerable and this method is called.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.FormulaHolder.ReAddReferenceToCalcNetwork(Infragistics.WebUI.CalcEngine.IUltraCalcManager)">
            <summary>
            Re-adds a reference to the calculation network.
            </summary>
            <param name="oldCalcManager">The _CALCMANAGER_, if any, that this <b>FormulaHolder</b>'s
            underlying formula-bearing object's <b>IUltraCalcReference</b> should be added to the
            calculation network of.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.GetFirstValidTuple(Infragistics.WebUI.CalcEngine.RefParser,System.Collections.IEnumerator,Infragistics.WebUI.CalcEngine.UltraCalcReferenceError@)">
            <summary>
            Gets the first valid tuple from the enumeration.
            </summary>
            <param name="newRef">The <see cref="T:Infragistics.WebUI.CalcEngine.RefParser"/> from which to retrieve tuples (only
            used in event of an error needs to be produced).</param>
            <param name="tupleEnum">An enumerator used to enumerate <see cref="T:Infragistics.WebUI.CalcEngine.RefTuple"/> objects.</param>
            <param name="errorObj">An <b>UltraCalcReferenceError</b> that is modified if an error
            has occurred.</param>
            <returns>The next valid tuple enumerated, after passing several validations.</returns>
            <remarks>
            <p class="body">The validations this method performs include checking that there
            is a next tuple to be enumerated, verifying that the next tuple has an expected
            identifier name, and that the next tuple is within a defined scope (not the
            wildcard <i>Any</i> scope).</p>
            </remarks>
            <exception cref="T:System.InvalidCastException">Thrown if one of the objects in the
            enumeration furnished by <i>tupleEnum</i> is not of the expected type, <b>RefTuple</b>.
            </exception>
            <exception cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException">Thrown
            when the next tuple retrieved from <i>tupleEnum</i> violates one of the criteria
            that <b>GetFirstValidTuple</b> checks for. This exception may also be thrown if
            an attempt is made to enumerate the last tuple from an exhausted <i>tupleEnum</i>
            enumerator.</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)">
            <summary>
            Builds a new <b>IUltraCalcReference</b> surrogate implementation for the
            referenced UltraWebGrid element, or one of its child references.
            </summary>
            <param name="newRef">New base reference.</param>
            <param name="forceDataRef">Force data reference.</param>
            <returns>A newly constructed <b>IUltraCalcReference</b> surrogate object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the <i>newRef</i>
            argument is null (Nothing in Visual Basic .NET).  <b>BuildReference</b>
            requires a foundational <i>newRef</i> with which to construct new instances
            of <b>RefBase</b>.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when the <b>RefTuple</b>
            instances being enumerated include a non-<b>RefTuple</b> sibling.</exception>
            <exception cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException">
            Thrown when <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.GetFirstValidTuple(Infragistics.WebUI.CalcEngine.RefParser,System.Collections.IEnumerator,Infragistics.WebUI.CalcEngine.UltraCalcReferenceError@)"/> fails to enumerate the next
            available <b>RefTuple</b> instance, because there are no more valid tuples
            to enumerate.</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.CreateReference(System.String)">
            <summary>
            Creates a new <b>IUltraCalcReference</b> surrogate implementation for the
            referenced UltraWebGrid element, or one of its child references.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.FindAll(System.String)">
            <summary>
            Locates the named reference relative to this reference, with
            scope of "All."
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.FindItem(System.String)">
            <summary>
            Returns the named reference relative to this UltraWebGrid.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            <exception cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException">
            Thrown when <i>name</i> is not the <b>Key</b> identifying band zero (the
            topmost band.)</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.FindItem(System.String,System.String)">
            <summary>
            Locates the named, indexed reference relative to this UltraWebGrid.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index name.</param>
            <returns>The referenced element with that name and index.</returns>
            <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            <exception cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException">
            Thrown when <i>name</i> is not the <b>Key</b> identifying band zero (the
            topmost band.)</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.FindItem(System.String,System.Int32,System.Boolean)">
            <summary>
            Locates the named, indexed reference relative to this UltraWebGrid.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index value.</param>
            <param name="isRelative">Indicates if <b>index</b> is relative to this index.</param>
            <returns>The referenced element with that name and index.</returns>
            <remarks>
            <p class="body">If <i>isRelative</i> is true, then an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException"/>
            is thrown because the UltraWebGrid is absolute and has no frame-of-reference by
            which an <i>index</i> can be treated as being relative to something else.</p>
            </remarks>
            <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            <exception cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException">
            Thrown when <i>name</i> is not the <b>Key</b> identifying band zero (the
            topmost band), or when <i>isRelative</i> is passed-in as True.</exception>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.AbsoluteName">
            <summary>
            The fully qualified unique name for the referenced UltraWebGrid element.
            </summary>
            <remarks>
            <p class="body">The syntax of the fully-qualified name for the UltraWebGrid
            consists of the <see cref="F:Infragistics.WebUI.CalcEngine.RefParser.RefFullyQualifiedString">RefFullyQualifiedString</see>
            followed by the programmatic identifier of the UltraWebGrid.</p>
            <p class="body">This property is Read Only.</p>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.ElementName"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.BaseParent">
            <summary>
            The parent <b>IUltraCalcReference</b> of the UltraWebGrid element.
            </summary>
            <remarks>
            <p class="body">The UltraWebGrid does not have a base parent, reading
            this property will return null (Nothing in Visual Basic .NET).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.ChildReferences">
            <summary>
            Gets a list for temporary storage of child references.
            </summary>
            <remarks>
            <p class="body">Inheritors can use <b>ChildReferences</b> when they
            override the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.GetChildReferences(Infragistics.WebUI.CalcEngine.ChildReferenceType)"/> method of <b>IUltraCalcReference</b>.
            This <b>ArrayList</b> exists for temporary storage purposes only by those
            subclasses overriding <b>GetChildReferences</b> only, its contents are volatile
            and must not be exposed to applications (if the references stored within are
            exposed, they must be copied into a separate array, which is what <b>GetChildReferences</b>
            will commonly do).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.ElementName">
            <summary>
            The unqualified name of UltraWebGrid element.
            </summary>
            <remarks>
            <p class="body">Used to construct the fully qualified name of
            child references by the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.AbsoluteName"/> method.</p>
            <p class="body">This property assumes the value of the UltraWebGrid's
            programmatic identifier (it disregards any user controls which may
            contain the UltraWebGrid). Read Only.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.GridReference.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RowReferenceBase.ContainsReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Returns true if this reference contains inReference
            </summary>
            <param name="inReference">The contained candidate.</param>
            <returns>true if inReference is contained by this reference.</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.RowReferenceBase.IsDataReference">
            <summary>
            Indicates whether this reference is a data reference.
            </summary>
            <value>True when this row reference is a data reference.</value>
            <remarks>
            <p class="body">A <i>data reference</i> in the Calc Engine contains a value,
            such as a grid cell or column footer.  Many other referenced elements, such as
            a grid's column or band, do not reference a value and therefore are not treated
            as data references.</p>
            <p class="body">This property is Read Only.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GroupByRowReference.FindAll(System.String)">
            <summary>
            Locates the named reference relative to this reference, with
            scope of "All."
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GroupByRowReference.FindItem(System.String)">
            <summary>
            Returns the named reference relative to this row.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GroupByRowReference.FindItem(System.String,System.String)">
            <summary>
            Locates the named, indexed reference relative to this row.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index name.</param>
            <returns>The referenced element with that name and index.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.GroupByRowReference.FindItem(System.String,System.Int32,System.Boolean)">
            <summary>
            Locates the named, indexed reference relative to this row.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index value.</param>
            <param name="isRelative">Indicates if <b>index</b> is relative to this
            row's base index.</param>
            <returns>The referenced element with that name and index.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.GroupByRowReference.BaseParent">
            <summary>
            The parent <b>IUltraCalcReference</b> of the row.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.GroupByRowReference.ElementName">
            <summary>
            The unqualified name of the row.
            </summary>
            <remarks>
            <p class="body">Used to construct the fully qualified name of
            child references by the <see cref="!:AbsoluteName"/> method.</p>
            <p class="body">This property uses the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Key">Key</see>
            of the row's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Band">Band</see>
            combined with the row's index within it's <b>ParentCollection</b>
            to construct a locally-unique identifier for this row within a
            given row island.</p>
            <p class="body">This property is Read Only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.GroupLevelFooterReference.BaseParent">
            <summary>
            The parent <b>IUltraCalcReference</b> surrogate implementation of
            this column footer at the group-by level.
            </summary>
            <remarks>
            <p class="body">Used to navigate up the element hierarchy.  The parent
            of a column footer is it's column's band, but the parent of a grouped
            column footer is a superior <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.GroupLevelReference"/>.</p>
            <p class="body">This property is Read Only.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RefUtils.#ctor">
            <summary>
            This is a singleton class. It cannot be instantiated.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RefUtils.FindBand(Infragistics.WebUI.UltraWebGrid.UltraGridLayout,System.String)">
            <summary>
            Finds the Band object with the specified key name.
            </summary>
            <param name="layout">The grid layout.</param>
            <param name="name">Must match the <b>Key</b> property assigned to
            one of this WebGrid's bands.</param>
            <returns>A Band instance with the specified key.</returns>
            <remarks>
            <p class="body">This method supports the UltraCalc engine. Developers should not call this method from their applications.</p>
            <p class="body">Applications may use the <see cref="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.Exists(System.String)">Exists</see>
            method on the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Bands">Bands</see> collection of UltraWebGrid.</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>layout</i> or <i>name</i> is passed-in to this method with
            a null (Nothing in Visual Basic .NET) value.</exception>
            <exception cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException">Thrown when no Band could be found with the specified <i>name</i> value of
            it's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Key">Key</see> property.</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RefUtils.FindBand0(Infragistics.WebUI.UltraWebGrid.UltraGridLayout)">
            <summary>
            Finds the first Band object for the topmost Band.
            </summary>
            <param name="layout">The grid layout.</param>
            <returns>A first Band instance.</returns>
            <remarks>
            <p class="body">This method supports the UltraCalc engine. Developers should not call this method from their applications.</p>
            <p class="body">Applications may use the <see cref="M:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.GetItem(System.Int32)">GetItem</see>
            method or indexer of the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Bands">Bands</see> collection of UltraWebGrid to
            accomplish the same effect.</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when band zero does not exist. This
            scenario may occur if this method is called before the UltraWebGrid has been databound, or a
            band hasn't otherwise been initialized through some application-specific means.</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RefUtils.GetBandReference(Infragistics.WebUI.UltraWebGrid.UltraGridBand)">
            <summary>
            Gets the Band reference.
            </summary>
            <param name="band">The band instance to retrieve a surrogate implementation
            of the <b>IUltraCalcReference</b> interface from.</param>
            <remarks>
            <p class="body">This method supports the UltraCalc engine. Developers should
            not call this method from their web applications.</p>
            </remarks>
            <returns>An object implementing <b>IUltraCalcReference</b> that represents
            the specified <i>band</i> within the calculation network.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RefUtils.GetGridReference(Infragistics.WebUI.UltraWebGrid.UltraGridLayout)">
            <summary>
            Gets the <b>GridReference</b> from the supplied <b>UltraGridLayout</b>.
            </summary>
            <param name="layout">A layout with a grid reference.</param>
            <returns>The grid reference from the <i>layout</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RefUtils.GetColumnFooterReference(Infragistics.WebUI.UltraWebGrid.ColumnFooter)">
            <summary>
            Gets the <b>FooterReference</b> from the supplied <b>ColumnFooter</b>.
            </summary>
            <param name="columnFooter">The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Footer">Footer</see> from an UltraWebGrid column.</param>
            <returns>The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.FooterReference">FooterReference</see> from the <i>columnFooter</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RefUtils.GetColumnFooterReference(Infragistics.WebUI.UltraWebGrid.UltraGridBand,System.String)">
            <summary>
            Gets the <b>FooterReference</b> by it's <b>Key</b> name from the supplied <b>UltraGridBand</b>.
            </summary>
            <param name="band">The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand">Band</see> in which to search for a <b>ColumnFooter</b> with <b>Key</b>=<i>name</i>.</param>
            <param name="name">The <b>Key</b> name of a <b>ColumnFooter</b> within <i>band</i>.</param>
            <remarks>
            <p class="body">When <i>name</i> is the string representation of a nonnegative integer, it is
            interpretted as an index into the footers (summaries) affiliated with <i>band</i>.</p>
            </remarks>
            <returns>The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.FooterReference">FooterReference</see> from the <i>band</i> whose <b>Key</b> matches <i>name</i>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when either the <i>band</i> or <i>name</i> argument
            is null (Nothing in Visual Basic .NET).</exception>
            <exception cref="T:Infragistics.WebUI.UltraWebGrid.UltraCalc.UltraCalcReferenceException">Thrown when no <b>ColumnFooter</b> matching <i>name</i> could be found within
            <i>band</i>, or when <i>name</i> specifies a numeric index, when that index value exceeds the number of footers contained in this <i>band</i>.</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RowReference.ContainsReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Returns true if this reference contains inReference
            </summary>
            <param name="inReference">The contained candidate.</param>
            <returns>true if inReference is contained by this reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RowReference.FindAll(System.String)">
            <summary>
            Locates the named reference relative to this reference, with
            scope of "All."
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RowReference.FindItem(System.String)">
            <summary>
            Returns the named reference relative to this row.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element with that name.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RowReference.FindItem(System.String,System.String)">
            <summary>
            Locates the named, indexed reference relative to this row.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index name.</param>
            <returns>The referenced element with that name and index.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraCalc.RowReference.FindItem(System.String,System.Int32,System.Boolean)">
            <summary>
            Locates the named, indexed reference relative to this row.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index value.</param>
            <param name="isRelative">Indicates if <b>index</b> is relative to this
            row's base index.</param>
            <returns>The referenced element with that name and index.</returns>
            <see cref="!:BuildReference"/>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.RowReference.BaseParent">
            <summary>
            The parent <b>IUltraCalcReference</b> of the row.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraCalc.RowReference.ElementName">
            <summary>
            The unqualified name of the row.
            </summary>
            <remarks>
            <p class="body">Used to construct the fully qualified name of
            child references by the <see cref="!:AbsoluteName"/> method.</p>
            <p class="body">This property uses the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.Key">Key</see>
            of the row's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.Band">Band</see>
            combined with the row's index within it's <b>ParentCollection</b>
            to construct a locally-unique identifier for this row within a
            given row island.</p>
            <p class="body">This property is Read Only.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.RowsEnumMode">
            <summary>
            Indicates what kind of rows should be enumerated.
            </summary>
            <remarks>
            The enumeration that is used to initialize the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator"/> object.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowsEnumMode.AllRows">
            <summary>
            All rows should be enumerated. This mode is used to create an instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator"/> object when the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GetRowsEnumerator"/> is invoked.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.RowsEnumMode.ChangedRows">
            <summary>
            Only changed rows should be enumerated. This mode is used to create an instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator"/> object when the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GetBatchUpdates"/> is invoked.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator">
            <summary>
            Enumerator for the rows in a band.
            </summary>
            <remarks>
            An instance of the object is created and returned from the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GetRowsEnumerator"/> and <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.GetBatchUpdates"/> methods off the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator.#ctor(Infragistics.WebUI.UltraWebGrid.UltraGridBand)">
            <summary>
            Initializes the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator"/> object.
            </summary>
            <remarks>
            None
            </remarks>
            <param name="band">
            The band the enumerator is created to enumerate rows off. The <see cref="T:Infragistics.WebUI.UltraWebGrid.RowsEnumMode"/>.AllRows mode is assumed.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator.#ctor(Infragistics.WebUI.UltraWebGrid.UltraGridBand,Infragistics.WebUI.UltraWebGrid.RowsEnumMode)">
            <summary>
            Initializes the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator"/> object.
            </summary>
            <remarks>
            None
            </remarks>
            <param name="band">
            The band the enumerator is created to enumerate rows off.
            </param>
            <param name="mode">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.RowsEnumMode"/> mode that is used to enumerate the rows.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator.MoveNext">
            <summary>
            Moves to the next entree in the enumeration.
            </summary>
            <remarks>
            The method can be used in a while loop to walk through the rows in the enumeration.
            </remarks>
            <returns>
            True if next row is successfully acquired and assigned to the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator.Current"/> property. False if there are no more rows to enumerate and the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator.Current"/> property is set to null.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator.Reset">
            <summary>
            Resets the enumeration.
            </summary>
            <remarks>
            After invoking the method the enumeration is ready to be iterated from the beginning.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator.Current">
            <summary>
            Indicates current row that is being iterated in the enumeration.
            </summary>
            <remarks>
            Set to null when reached the end of the enumeration. If the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridRowsEnumerator.MoveNext"/> method is called when the property is null iteration starts from the beginning of the enumeration.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ChangedCellPair">
            <summary>
            The ChangedCellPair class trackes modifications to cells during the internal processing of the WebGrid.
            </summary>
            <remarks>
            The objects of these class used for internal purposes as well as for enumerating the invalid cell during validation propcess on the server. For more info see the <see cref="T:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator"/> class description.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ChangedCellPair.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>Not for public use</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ChangedCellPair.#ctor(Infragistics.WebUI.UltraWebGrid.UltraGridCell,System.String)">
            <summary>
            Overloaded constructor
            </summary>
            <remarks>Not for public use</remarks>
            		/// <param name="cell">The <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> that was modified.</param>
            <param name="changedValue">The new value for the cell.</param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ChangedCellPair.Cell">
            <summary>
            Used to access the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/>  object that was modified.
            </summary>
            <remarks>Part of a semi private object.  This property should not be modified outside of the internals of the WebGrid during processing.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ChangedCellPair.ChangedValue">
            <summary>
            Used to access the new value of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> that was modified.
            </summary>
            <remarks>Part of a semi private object.  This property should not be modified outside of the internals of the WebGrid during processing.</remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator">
            <summary>
            Enumerator used for invalid cells in a WebGrid that has Columns being validated.
            </summary>
            <remarks>
            If the WebGrid has any columns being validated and some of the columns' cells fail its validation you can use this enumerator to iterate through those cells that failed.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator.#ctor(Infragistics.WebUI.UltraWebGrid.UltraWebGrid)">
            <summary>
            Initializes the <see cref="T:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator"/> object.
            </summary>
            <param name="grid">
            The grid to enumerate invalid cells off.
            </param>
            <remarks>
            An instance of the object is created and returned by the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GetInvalidCellsEnumerator"/> method.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator.MoveNext">
            <summary>
            Moves to the next entree in the enumeration.
            </summary>
            <returns>
            <b>true</b> if next row is successfully acquired and assigned to the <see cref="P:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator.Current"/> property. <b>false</b> if there are no more rows to enumerate and the <see cref="P:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator.Current"/> property is set to <b>null</b>.
            </returns>
            <remarks>
            The method can be used in a while loop to walk through the rows in the enumeration.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator.Reset">
            <summary>
            Resets the enumeration.
            </summary>
            <remarks>
            After invoking the method the enumeration is ready to be iterated from the beginning.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator.Current">
            <summary>
            Current changed cell pair that is being enumerated.
            </summary>
            <remarks>
            The property contains current changed cell that is invalid and its value. It can be used in a while loop in conjunction with the <see cref="M:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator.MoveNext"/> property. The property is <b>null</b> if the enumeration has reached its end or has not started yet.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponse">
            <summary>
            The response object to pass some information back to the server during an out-of-band callback.
            </summary>
            <remarks>
            The XmlHTTpResponse object is designed to be a feedback mechanism for the WebGrid to allow for information
            to be passed from the server to the client object.  It is designed to allow the developer to set values that will passed down to the
            client and accessed during the client side XmlHTTPResponse event.  This object is only designed to be used with XML rendering with XML LoadOnDemand.	
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponse.statusMessage">
            <summary>
            The string message that will be returned to the client on success.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponse.tag">
            <summary>
            A user definable string to pass extra information to the client
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponse.responseStatus">
            <summary>
            A status variable to allow for different status of execution to be signaled.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponse.row">
            <summary>
            The row that's been updated on the cilent.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponse.cancel">
            <summary>
            Tracks whether or not the event was canceled on server
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponse.StatusMessage">
            <summary>
            Gets or sets the string message that is returned to the client after the operation is complete. 
            This value will be accessable in the client side XmlHTTPResponseHandler event.
            </summary>
            <remarks>
            An information about status of the out-of-band callback can be passed through this property back to the client.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponse.Tag">
            <summary> 
            Get or sets a string of user data to be delivered to the client.  This value will be accessable in the client side 
            XmlHTTPResponseHandler event.
            </summary>
            <remarks>
            Any additional information can be passed back to the client through this property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponse.ResponseStatus">
            <summary>
            Gets or sets a status field which signals the status of the server side data manipulation to the client.
            The value defaults to <see cref="T:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponseStatus"/>.Success.
            </summary>
            <remarks>
            Passes back to the client information about status of the callback and whether it succeeded or failed.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponse.Row">
            <summary> 
            The row that's been updated on the cilent.
            </summary>
            <remarks>
            Contains a reference to the row the callback was fired for.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XmlHTTPResponse.Cancel">
            <summary>
            Whether the server event was cancelled.  This value will be
            set by changing the event argument e.Cancel value.  
            </summary>
            <remarks>
            Through the property information about cancelation of the event on the server is brought to the client.
            It can be used to do a proper action on the client in response to the server side cancelation.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid">
            <summary>
            UltraWebGrid is the top-level object for the control.It provides access to the major 
            functional areas of the control.
            </summary>
            <remarks>
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DisplayLayout"/> property of UltraWebGrid contains 
            many of the objects used to define behavior and appearance characteristics for the control.
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Rows"/> collection property allows access to the top level set of rows of the grid.  
            If there are multiple levels, or <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Bands"/>, for the grid, each of the top-level rows will allow access
            to any child rows that may be contained. For basic single level grids, UltraWebGrid 
            exposes the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Columns"/> collection and the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Rows"/> collection for simple programmable access.
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ICanEditNavBar">
            <summary>
            The interface is used to provide information about availability of the WebNavBar during design time.
            </summary>
            <remarks>
            Provides information whether the grid has a WebNavBar attached and whether it is editable at design time.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ICanEditNavBar.EditNavBar">
            <summary>
            Switches to the edit mode for the WebNavBar attached to the grid during design time.
            </summary>
            <remarks>
            The grid that implements the inerface and has a WebNavBar attached switches to the edit mode for the WebNavBar at design time.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ICanEditNavBar.IsNavBarEditable">
            <summary>
            Indicates if the grid has an editable WebNavBar during design time.
            </summary>
            <remarks>
            The property is used to communicate with the grid designer.
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.defaultPreset">
            <summary>
            The preset file that will initially be applied to the control.
            </summary>
            <remarks>This value is for designer purposes only and is not for public use.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SavePreset(System.String,System.String,System.String,Infragistics.WebUI.PresetType)">
            <summary>
            Saves the properties of a control to a file, so that they can be used by another control via the LoadPreset method. 
            </summary>
            <param name="filePath">The absolute path in which to save the Preset File.</param>
            <param name="name">The name the preset will have.</param>
            <param name="desc">A description of the preset.</param>
            <param name="presetType">The type of properties (Appearance, Behavior, or Both) which should be saved in this preset.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SavePreset(System.IO.TextWriter,System.String,System.String,Infragistics.WebUI.PresetType)">
            <summary>
            Saves the properties of a control to a file, so that they can be used by another control via the LoadPreset method. 
            </summary>
            <param name="textWriter">The Text writer in which to write the Preset File. The writer will not be closed at the end of the call, and should be closed afterwards.</param>
            <param name="name">The name the preset will have.</param>
            <param name="desc">A description of the preset.</param>
            <param name="presetType">The type of properties (Appearance, Behavior, or Both) which should be saved in this preset.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SavePreset(System.IO.Stream,System.String,System.String,Infragistics.WebUI.PresetType)">
            <summary>
            Saves the properties of a control to a file, so that they can be used by another control via the LoadPreset method. 
            </summary>
            <param name="stream">The stream in which to write Preset File. The stream will not be closed at the end of the call, and should be closed afterwards.</param>
            <param name="name">The name the preset will have.</param>
            <param name="desc">A description of the preset.</param>
            <param name="presetType">The type of properties (Appearance, Behavior, or Both) which should be saved in this preset.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.LoadPreset(System.String,System.Boolean)">
            <summary>
            Sets properties on the control that effect Appearance, Behavior, or Both, based on the information in the predefined Preset File. 
            </summary>
            <param name="filePath">The aboslute path of the Preset File.</param>
            <param name="reset">Whether to reset all properties on the control before applying the preset.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.LoadPreset(System.IO.Stream,System.Boolean)">
            <summary>
            Sets properties on the control that effect Appearance, Behavior, or Both, based on the information in the predefined Preset File. 
            </summary>
            <param name="stream">A Stream that references a Preset File. The stream will not be closed at the end of the call, and should be closed afterwards.</param>
            <param name="reset">Whether to reset all properties on the control before applying the preset.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.LoadPreset(System.IO.TextReader,System.Boolean)">
            <summary>
            Sets properties on the control that effect Appearance, Behavior, or Both, based on the information in the predefined Preset File. 
            </summary>
            <param name="reader">A Text Reader that references a Preset File. The reader will not be closed at the end of the call, and should be closed afterwards.</param>
            <param name="reset">Whether to reset all properties on the control before applying the preset.</param>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.gridDesigner">
            <summary>
            Reference to the grid's designer.
            </summary>
            <remarks>
            Used from within the Design assembly to tie the reference of the grid's designer to the grid.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.#ctor">
            <summary>
            UltraWebGrid default constuctor.  
            </summary>
            <remarks>
            This constructor should not be called directly from code.  
            To create the UltraWebGrid control in code use the alternate constuctor: UltraWebGrid(controlID).
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.#ctor(System.String)">
            <summary>
            Special constructor used to create the grid dynamically in code. 
            </summary>
            <remarks>
            The string parameter is used to populate the ID property of the control.  
            The constructor then initializes internal data structures of the control.
            </remarks>
            <param name="id">The ID name of the control</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnDataPropertyChanged">
            <summary>
            Override of the control OnDataPropertyChanged event.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnLoad(System.EventArgs)">
            <summary>
            Overrides the base class <b>OnLoad</b>
            </summary>
            <param name="e">Arguments passed into the event.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInit(System.EventArgs)">
            <summary>
            Overrides the base class <b>OnInit</b>.
            </summary>
            <param name="e">
            Arguments passed into the event.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.IdentifyDocumentType(System.Web.UI.Page)">
            <summary>
            Identifies the Document Type Definition on the <b>Page</b>,
            which may affect rendering.
            </summary>
            <param name="p">
            Page to identify the doctype off.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ShouldSerializeRows">
            <summary>
            Designer support for the rows.
            </summary>
            <remarks>
            Enable the grid's ability to reset rows during design time.
            </remarks>
            <returns>
            Returns true if any property of Rows has at least one item.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ResetRows">
            <summary>Clears the Rows collection</summary>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ShouldSerializeColumns">
            <summary>
            Designer support for the columns.
            </summary>
            <remarks>
            Enable the grid's ability to reset columns during design time.
            </remarks>
            <returns>
            Returns true if any property of Columns has at least one item.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ResetColumns">
            <summary>Clears the Columns collection</summary>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ShouldSerializeBands">
            <summary>
            Designer support for the bands.
            </summary>
            <remarks>
            Enable the grid's ability to reset bands during design time.
            </remarks>
            <returns>
            Returns true if any property of Bands has at least one item.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ResetBands">
            <summary>
            Clears the Bands collection
            </summary>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.PreRenderGrid">
            <summary>
               Prepare the renderer and emit JavaScript 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.PerformGroupRows">
            <summary>
            Sorts all rows and creates the Group-By hierarchy when changes to the rows
            collection are made.
            </summary>
            <remarks>
            <p class="body">This method must be called from the application if there are
            any changes relating to the Grouping-By, Sorting, Adding or Deleting of rows
            made.</p>
            <p class="body">If one or more columns have been marked <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.IsGroupByColumn">IsGroupByColumn</see>
            and those columns have column footers containing calculated values, then this
            method must be called before accessing the results of those calculations.  In
            calling this method, the calculation engine is refreshed for the new topology
            exhibited by the UltraWebGrid, and the affected footers are marked dirty and
            can be recalculated. Undefined behavior occurs when accessing formula results
            after changing the <b>IsGroupByColumn</b> of one or more columns, and before
            calling <b>PerformGroupRows</b>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SortGroupRows(Infragistics.WebUI.UltraWebGrid.RowsCollection)">
            <summary>
            Sorts and groups the grid's rows according to the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.SortedColumns"/> collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GroupRows(Infragistics.WebUI.UltraWebGrid.RowsCollection,Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Groups the rows collection on the passed column.
            </summary>
            <param name="rows">
            Rows to group.
            </param>
            <param name="column">
            The column to group by.
            </param>
            <returns>
            Grouped rows collection.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UnGroupRows(Infragistics.WebUI.UltraWebGrid.RowsCollection)">
            <summary>
            Ungroups the rows collection.
            </summary>
            <param name="rows">
            Rows to ungroup.
            </param>
            <returns>
            Ungrouped rows collection.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            	Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RenderDesignTime(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders dummy HTML at design time.
            </summary>
            <param name="output">
            The output to render dummy HTML.
            </param>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.renderer">
            <summary>
            the renderer class for the grid
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.TrackViewState">
            <summary>
            Enables tracking the grid's view state.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SaveViewState">
            <summary>
               Called by the framework to load round-trip data from the grid into the html ViewState variable.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.LoadViewState(System.Object)">
            <summary>
               Called by the framework to load round-trip data into the grid.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SetupRows(System.Int32,Infragistics.WebUI.UltraWebGrid.RowsCollection,Infragistics.WebUI.UltraWebGrid.RowsCollection)">
            <summary>
            Set up the row properties:  ownerRow, Band etc.
            </summary>
            <param name="bandIndex"></param>
            <param name="rows"></param>
            <param name="oldRows"></param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DataBind">
            <summary>
            Binds the grid to the data source specified by the <b>DataSource</b> property.
            </summary>
            <remarks>
            The method should be invoked by the developer to manually data bind to the data source
            assigned to the <b>DataSource</b> property.<br/>
            However explicit call of the method is not required when the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeDataSource"/> 
            event is handled. In that case the grid assumes that by handling the event the application developer
            provides appropriate data source inside of the event handler and the <b>DataBind</b> method
            is called by the grid at the time when the data is needed. That usually happens before the 
            <b>Page_Load</b> event handler is invoked by the framework so the developer can have access to the 
            grid's data inside of the page load event.<br/>
            During the data binding process several events are fired. The <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeBand"/> event is
            fired after every band is created for the grid. Right after the bands and columns structure 
            is bound to the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeLayout"/> event is fired, so the developer can change the bands
            settings and/or rearrange columns. Then for every row of the data in the grid the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeRow"/> 
            event is fired which gives access to the row object and cells and can by used for modifying the cells values 
            of every row while data binding.<br/>
            Event though the grid supports hiearchical data structure its table relations are limited to one-to-one.
            That means that a band of data can have only one successive band of data. If the data source provided
            to the grid is built using one-to-many table relations the first relation is assumed by default as the 
            next level band data source. To change that order the band's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ChildBandColumn"/>
            property can be used.
            <seealso cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeDataSource"/>
            <seealso cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeBand"/>
            <seealso cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeLayout"/>
            <seealso cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeRow"/>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ChildBandColumn"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GetDataSourceView(System.String)">
            <summary>
            The method can be used to retrieve the <b>DataSourceView</b> object the grid is bound to.
            </summary>
            <param name="viewName">Name of the view to return.</param>
            <returns>
            <b>DataSourceView</b> object the grid is bound to.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GetHierarchicalDataSourceView">
            <summary>
            The method can be used to retrieve the <b>HierarchicalDataSourceView</b> object the grid is bound to.
            </summary>
            <returns>
            <b>HierarchicalDataSourceView</b> object the grid is bound to. If the data source is not hierarchical null is returned.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnFilterPopulating(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.String,System.Collections.ArrayList,Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection)">
            <summary>
            Invoked prior to the RowFilter being populated
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.FilterPopulating"/> event.</p>
            </remarks>		
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnFilterPopulating(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.String,System.Collections.ArrayList)">
            <summary>
            Invoked prior to the RowFilter being populated
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.FilterPopulating"/> event.</p>
            </remarks>		
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnFilterPopulated(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.String,System.Collections.ArrayList)">
            <summary>
            Invoked after to the RowFilter being populated
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.FilterPopulated"/> event.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnFilterPopulated(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.String,System.Collections.ArrayList,Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection)">
            <summary>
            Invoked after to the RowFilter being populated
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.FilterPopulated"/> event.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnRowFilterApplying(Infragistics.WebUI.UltraWebGrid.ColumnFilter,Infragistics.WebUI.UltraWebGrid.FilterCondition)">
            <summary>
            Invoked prior to the RowFilter being applied.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RowFilterApplying"/> event.</p>
            </remarks>		
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnRowFilterApplied(Infragistics.WebUI.UltraWebGrid.ColumnFilter)">
            <summary>
            Invoked after the RowFilter is applied.
            </summary>
            <remarks>
            	<p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RowFilterApplied"/> event.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnActiveCellChange(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Invoked when the active cell is about to be changed.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveCellChange"/> event.</p>
            </remarks>
            <param name="cell">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object that is to become active.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnActiveCellChange(Infragistics.WebUI.UltraWebGrid.UltraGridCell,System.Object)">
            <summary>
            Invoked when the active cell is about to be changed.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveCellChange"/> event.</p>
            </remarks>
            <param name="cell">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object that is to become active.</param>
            <param name="data">Additional info provided to the event handler. If initiated from within the grid this parameter contains old reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object that used to be active.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnActiveRowChange(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Invoked when the active row is about to be changed.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveRowChange"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object to become active.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnActiveRowChange(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Object)">
            <summary>
            Invoked when the active row is about to be changed.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveRowChange"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object to become active.</param>
            <param name="data">Additional info provided to the event handler. If initiated from within the grid this parameter contains a reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object that used to be active.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnAddRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Invoked when a row is about to be added to the grid.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRow"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object that will be the new row.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnAddRowBatch(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Invoked when a row is about to be added to the grid.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRowBatch"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object that will be the new row.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnClickCellButton(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Invoked when a cell button is clicked.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ClickCellButton"/> event.</p>
            </remarks>
            <param name="cell">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object that had its button clicked.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnClick(Infragistics.WebUI.UltraWebGrid.UltraGridRow,Infragistics.WebUI.UltraWebGrid.UltraGridColumn,Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Invoked when a row, a column or a cell is clicked.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Click"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object that had been clicked.</param>
            <param name="column">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object that had been clicked.</param>
            <param name="cell">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object that had been clicked.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnCollapseRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Invoked when a row is about to be collapsed.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CollapseRow"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object to be collapsed.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnColumnMove(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Object)">
            <summary>
            Invoked when the column has been moved.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ColumnMove"/> event.</p>
            </remarks>
            <param name="column">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object that is being moved.</param>
            <param name="index">The new index of the column.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnColumnMove(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Int32,System.Int32,System.Object)">
            <summary>
            Invoked when the column has been moved.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ColumnMove"/> event.</p>
            </remarks>
            <param name="column">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object that is being moved.</param>     
            <param name="fromIndex">The original index of the UltraGridColumn</param>
            <param name="oldData"></param>
            <param name="toIndex">The new index of the UltraGridColumn</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnColumnSizeChange(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Object)">
            <summary>
            Invoked when the width of a column has been changed since the last postback.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ColumnSizeChange"/> event.</p>
            </remarks>
            <param name="column">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object that is being resized.</param>
            <param name="newSize">The new width value.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnDblClick(Infragistics.WebUI.UltraWebGrid.UltraGridRow,Infragistics.WebUI.UltraWebGrid.UltraGridColumn,Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Invoked when a row, a column or a cell is double clicked.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DblClick"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object that had been double clicked.</param>
            <param name="column">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object that had been double clicked.</param>
            <param name="cell">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object that had been double clicked.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnDeleteRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Int32)">
            <summary>
            Invoked when a row is about to be deleted.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DeleteRow"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object to be deleted.</param>
            <param name="index">The index of the row before it was deleted.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnDeleteRowBatch(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Int32)">
            <summary>
            Invoked when a row is about to be deleted.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DeleteRowBatch"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object to be deleted.</param>
            <param name="index">The index of the row before it was deleted.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnExpandRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Invoked when a row is about to be expanded.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ExpandRow"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object to be deleted.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnGroupColumn(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Invoked when a column is about to be grouped.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GroupColumn"/> event.</p>
            </remarks>
            <param name="column">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object to be grouped.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeBand(Infragistics.WebUI.UltraWebGrid.UltraGridBand)">
            <summary>
            Invoked when band needs to be configured during data binding. This event can be useful if your DataSource 
            contents more than one column in the band which can be considered as a band of the next level. In this 
            case it is recommended to set the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridBand.ChildBandColumn"/> 
            property of the band to insure that proper column is used for the next level band.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeBand"/> event.</p>
            </remarks>
            <param name="band">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> object which requires a configuration.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeDataSource">
            <summary>
            Invoked before the grid starts to data bind itself to the data source.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeDataSource"/> event.</p>
            </remarks>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False. 
            If the event is canceled no further data binding is being performed.</p>
            </returns>		
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnXmlHTTPRequest(Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType,Infragistics.WebUI.UltraWebGrid.UltraGridBand,Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Int32,System.String,System.Object)">
            <summary>
            Invoked during an XmlHTTPRequest from the client.
            </summary>
            <param name="type">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType"/> of the request that is fired from the client.
            </param>
            <param name="band">
            The band the request is fired for. <b>null</b> if not applicable.
            </param>
            <param name="column">
            The column the request is fired for. <b>null</b> if not applicable.
            </param>
            <param name="rowNo">
            The row number the request is fired for. <b>-1</b> if not applicable.
            </param>
            <param name="rowDataKey">
            The row data key string. <b>null</b> if not applicable.
            </param>
            <param name="data">
            Any dadditional data that is assotiated with the event.<br/>
            When a cell is being updated the parameter contains the new cell value.<br/>
            When a row is being updated or deleted the parameter contains the row object reference.<br/>
            During the <b>Custom</b> HTTP request the parameter contains data that is provided from the client.
            </param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False. 
            If the event is canceled no further data binding is being performed.</p>
            </returns>		
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.XmlHTTPRequest"/> event.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnXmlHTTPRequest(Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType,Infragistics.WebUI.UltraWebGrid.UltraGridBand,Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Int32,System.Object[],System.Object)">
            <summary>
            Invoked during an XmlHTTPRequest from the client.
            </summary>
            <param name="type">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType"/> of the request that is fired from the client.
            </param>
            <param name="band">
            The band the request is fired for. <b>null</b> if not applicable.
            </param>
            <param name="column">
            The column the request is fired for. <b>null</b> if not applicable.
            </param>
            <param name="rowNo">
            The row number the request is fired for. <b>-1</b> if not applicable.
            </param>
            <param name="rowDataKey">
            The compound row data key array. <b>null</b> if not applicable.
            </param>
            <param name="data">
            Any dadditional data that is assotiated with the event.<br/>
            When a cell is being updated the parameter contains the new cell value.<br/>
            When a row is being updated or deleted the parameter contains the row object reference.<br/>
            During the <b>Custom</b> HTTP request the parameter contains data that is provided from the client.
            </param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False. 
            If the event is canceled no further data binding is being performed.</p>
            </returns>		
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.XmlHTTPRequest"/> event.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeFooter(Infragistics.WebUI.UltraWebGrid.RowsCollection)">
            <summary>
            Invoked when footers need to be configured during data binding.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeFooter"/> event.</p>
            </remarks>
            <param name="rows">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.RowsCollection"/> collection whose rows require the configuration of the footers.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeLayout(Infragistics.WebUI.UltraWebGrid.UltraGridLayout)">
            <summary>
            Invoked when the grid's layout needs to be initialized during data binding.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeLayout"/> event.</p>
            </remarks>
            <param name="layout">A reference to the new <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> object.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Invoked when a row needs to be initialized during data binding.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeRow"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object that to be initialized.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Object)">
            <summary>
            Invoked when a row needs to be initialized during data binding.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeRow"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object that to be initialized.</param>
            <param name="data">A reference to a data object that represents the row in its data source.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeGroupByRow(Infragistics.WebUI.UltraWebGrid.GroupByRow)">
            <summary>
            Invoked when a group by row needs to be initialized during its creation.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeGroupByRow"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupByRow"/> object that to be initialized.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnMoveRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Object)">
            <summary>
            Invoked when a row is moved inside its collection.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.MoveRow"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object that is moved.</param>
            <param name="data">Additional info provided into the RowEventArgs object. That is the old index the row had before it was moved.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnPageIndexChanged(System.Int32,System.Int32)">
            <summary>
            Invoked when a new page of data is about to be displayed when paging is enabled.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.PageIndexChanged"/> event.</p>
            </remarks>
            <param name="newPageIndex">An integer value indicating the index of the data page to be displayed.</param>
            <param name="oldPageIndex">An integer value indicating the index of the data page that was displayed.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnRowSizeChange(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Invoked when the height of a row is being changed.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RowSizeChange"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object that is being resized.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnSelectedCellsChange(Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection)">
            <summary>
            Invoked when a cell or cells in the grid are about to be selected or unselected.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedCellsChange"/> event.</p>
            </remarks>
            <param name="selectedCells">A reference to the new <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection"/> collection of selected cells.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnSelectedColumnsChange(Infragistics.WebUI.UltraWebGrid.SelectedColsCollection)">
            <summary>
            Invoked when a column or columns in the grid are about to be selected or unselected.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedColumnsChange"/> event.</p>
            </remarks>
            <param name="selectedCols">A reference to the new <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedColsCollection"/> collection of selected columns.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnSelectedRowsChange(Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection)">
            <summary>
            Invoked when a row or rows in the grid are about to be selected or unselected.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedRowsChange"/> event.</p>
            </remarks>
            <param name="selectedRows">A reference to the new <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedRowsCollection"/> collection of selected rows.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnSortColumn(System.Int32,System.Int32)">
            <summary>
            Invoked when the grid is about to be sorted.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SortColumn"/> event. The event is generated for all sorted columns at once. To cancel or change sort order use the SortedColumns collection to find out which columns are being sorted.</p>
            </remarks>
            <param name="bandNo">This parameter is obsolete. An integer value indicating the index of the band that contains the column being sorted. In the current version it shows the last column's band that is being sorted.</param>
            <param name="columnNo">This parameter is obsolete. An integer value indicating the index of the column being sorted. In the current version it shows the last column's band that is being sorted.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnSortColumn(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Invoked when the grid is about to be sorted.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SortColumn"/> event. The event is generated for all sorted columns at once. To cancel or change sort order use the SortedColumns collection to find out which columns are being sorted.</p>
            </remarks>
            <param name="bandNo">This parameter is obsolete. An integer value indicating the index of the band that contains the column being sorted. In the current version it shows the last column's band that is being sorted.</param>
            <param name="columnNo">This parameter is obsolete. An integer value indicating the index of the column being sorted. In the current version it shows the last column's band that is being sorted.</param>
            <param name="shiftKey">A boolean value indicating the state of the shift key. True if the shift key is pressed while the header is clicked; otherwise, False.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnUnGroupColumn(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Invoked when a column is about to be ungrouped.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UnGroupColumn"/> event.</p>
            </remarks>
            <param name="column">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> object to be ungrouped.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnUpdateGrid(Infragistics.WebUI.UltraWebGrid.UltraWebGrid)">
            <summary>
            Invoked when the grid is about to be updated, meaning the value of a cell or cells changed, or rows were added or deleted.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateGrid"/> event.</p>
            </remarks>
            <param name="grid">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/> object to be updated.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnUpdateCell(Infragistics.WebUI.UltraWebGrid.UltraGridCell,System.Object)">
            <summary>
            Invoked when a cell's value is about to be updated.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCell"/> event.</p>
            </remarks>
            <param name="cell">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object to be updated.</param>
            <param name="oldValue">Previous value of the cell.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnUpdateCellBatch(Infragistics.WebUI.UltraWebGrid.UltraGridCell,System.Object)">
            <summary>
            Invoked when a cell is about to be updated.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCellBatch"/> event.</p>
            </remarks>
            <param name="cell">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object to be updated.</param>
            <param name="oldValue">Previous value of the cell.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnUpdateRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Object)">
            <summary>
            Invoked when a rows' cell values are updated.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRow"/> event.
            When LoadOnDemand has setting other than Xml this event is fired after all cells are updated for the row.<br/>
            If LoadOnDemand.Xml is used only the UpdateRow event is fired for every updated row (XMLHttpRequest is fired 
            once for whole row whether it was updated and/or added); if the row is updated on the server new information 
            gets back to the client.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object to be updated.</param>
            <param name="oldRow">Reference to the row object that holds previous row state and cell values.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnUpdateRowBatch(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Object)">
            <summary>
            Invoked when a row is updated.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRowBatch"/> event.</p>
            </remarks>
            <param name="row">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> object to be updated.</param>
            <param name="oldRow">Reference to the row object that holds previous row state and cell values.</param>
            <returns>
            <p class="body">A Boolean value indicating whether the event was canceled. True if the event was canceled; otherwise, False.</p>
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnDemandLoad(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            <p class="body">Raises the <b>DemandLoad</b> event.</p>
            </summary>
            <remarks>
            <p class="body">Invoke this method to programmatically generate the <b>DemandLoad</b> event.</p>
            <p class="body">Raising an event invokes the event handler through a delegate.</p>
            <p class="body">This method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>
            <p class="body">When overriding <b>DemandLoad</b> in a derived class, be sure to call the base class' <b>OnDemandLoad</b> method so that registered delegates receive the event.</p>
            </remarks>
            <param name="row">
            <p class="body">A reference to the <b>Row</b> object that needs to be loaded with children.</p>
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnTemplatedColumnRestored(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Invoked after a Templated column has been restored from Viewstate.
            </summary>
            <remarks>
            <p class="body">This method generates the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.TemplatedColumnRestored"/> event.</p>
            </remarks>
            <param name="column">A reference to the <see cref="T:Infragistics.WebUI.UltraWebGrid.TemplatedColumn"/> object recently 
            restored.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Dispose">
            <summary>
            Performs final clean-up before the UltraWebGrid is released from memory
            by the garbage collector.
            </summary>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.getRenderer(System.Boolean)">
            <summary>
               Determine the correct rendering class to instantiate and do it
            </summary>
            
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CreateControlHierarchy(System.Boolean)">
            <summary>
            Overrides the base class' <b>CreateControlHierarchy</b>.
            </summary>
            <param name="useDataSource">
            Indicates whether the grid should use its data source to create its controls hierarchy.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.PrepareControlHierarchy">
            <summary>
            Overrides the base class' <b>PrepareControlHierarchy</b>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ExpandAll">
            <summary>
            Expands all rows in the grid.
            </summary>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ExpandAll(System.Boolean)">
            <summary>
            Expands all rows in the grid.
            </summary>
            <param name="expand">
             Determines whether the rows should be expanded or collapsed.
            </param>
            <remarks>
            None.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ConvertToUrlEncode(System.String)">
            <summary>
            Using the encoding style that is found inside of the WebGrid, takes a string and encodes it
            for transmission
            </summary>
            <param name="input">string - the string to be UrlEncoded</param>
            <returns>string - the UrlEncoded string</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.MergeStyle(Infragistics.WebUI.UltraWebGrid.GridItemStyle)">
            <summary>
            Merges grid's frame style with the passed style.
            </summary>
            <param name="style">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> style to merge the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> with.
            </param>
            <remarks>
            The method merges the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> with the style provided. The properties that are set on the <b>FrameStyle</b> take precedence over the passed in style ones.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CreateChildControls">
            <summary>
            Overrides the base class' <b>CreateChildControls</b>.
            </summary>
            <remarks>
            Creates child controls collection, fills it and instanciate in every control in it. The child controls collection is created basing on the templates that are set  in the grid.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GetInvalidCellsEnumerator">
            <summary>
            Creates and returns a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator"/>.
            </summary>
            <returns>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.InvalidCellsEnumerator"/> which helps to go through all of the cells with invalid value after a post back.
            </returns>
            <remarks>
            If the grid has any columns being validated and some of the columns' cells fail its validation the enumerator will help to iterate through those cells. 
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.EnsureChildControls">
            <summary>
            Determines whether the server control contains child controls. If it does not, it creates child controls.
            </summary>
            <remarks>
            Should be called to ensure that the child controls of the grid are properly created before accessing them. The child controls of the grid are created through the templates mechanism.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RaisePostBackEvent(System.String)">
            <summary>
            Enables the grid to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">
            A string that represents an optional event argument to be passed to the event handler. 
            </param>
            <remarks>
            Called by the framework to enable the grid to fire the events in response to the client side changes.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Called by the framework to load node edits from the client.  
            </summary>
            <param name="postDataKey">
            The key identifier for the control.
            </param>
            <param name="values">
            The collection of all incoming name values.
            </param>
            <returns>
            <b>true</b> if the server control's state changes as a result of the post back; otherwise <b>false</b>.
            </returns>
            <remarks>
            The method is called by the framework when a post back occures. Data about changes on the client that is provided into the method is being applied at that time.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GetDataKeysFromCallback(System.String,System.Char,System.Char,System.Boolean)">
            <summary>
            When ajax updates are done on a row in the grid, the client passes back a data key string to identify
            the row in the grid. The string contains the data key of each of the row's ancestors seperated by a 
            control character so the grid can search for each of the parent rows in the grid and locate the row 
            that was updated. 
            
            This method translate the information that's passed back from an ajax callback into an array of dataKeys
            that the ResolveRowLevel method can use.
            </summary>
            <param name="dataKey">The dataKey string that came from the client</param> 
            <param name="levelDelimiter">The character that seperates keys for the different bands in the grid</param>
            <param name="keyDelimiter">The character that seperate multiple keys at the same level of the grid</param>
            <param name="urlDecode">true if the string needs url decoding, false if it doesn't</param>
            <returns>An array containing a list of keys that can be used to find a particular row in the grid.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateDBRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Updates the row in the data source the grid is bound to. The method takes all cell values from the passed row and provides them to the data source control for the corresponding data to update.
            </summary>
            <param name="row">The row to get the cell values from and to update the data source with.</param>
            <returns>
            Boolean value indicating if the data source row was successfully updated.
            </returns>
            <remarks>
            Applies only to data sources which are set using the <b>DataSourceID</b> property. The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.DataKey">DataKey</see> property of the passed row has to be exactly the same as the row's data key in the data source.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateDBRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow,Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Updates the row in the data source the grid is bound to. The method takes all cell values from the passed row and provides them to the data source control for the corresponding data to update.
            </summary>
            <param name="row">The row to get the cell values from and to update the data source with.</param>
            <param name="oldRow">The row to compare old values with in the case when <b>ConflictDetection=CompareAllValues</b> is set off the data source control</param>
            <returns>
            Boolean value indicating if the data source row was successfully updated.
            </returns>
            <remarks>
            Applies only to data sources which are set using the <b>DataSourceID</b> property. The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.DataKey">DataKey</see> property of the passed row has to be exactly the same as the row's data key in the data source.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InsertDBRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Inserts the row into the data source the grid is bound to. The method takes all cell values from the passed row and provides them to the data source control for the corresponding row to insert.
            </summary>
            <param name="row">The row to get the cell values from and to insert a new row into the data source.</param>
            <returns>
            Boolean value indicating if the data source row was successfully inserted.
            </returns>
            <remarks>
            Applies only to data sources which are set using the <b>DataSourceID</b> property.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DeleteDBRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Deletes corresponding row from the data source the grid is bound to.
            </summary>
            <param name="row">The row to delete.</param>
            <returns>
            Boolean value indicating if the data source row was successfully inserted.
            </returns>
            <remarks>
            Applies only to data sources which are set using the <b>DataSourceID</b> property. The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridRow.DataKey">DataKey</see> property of the passed row has to be exactly the same as the row's data key in the data source.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DataSourceViewOperationCallback(System.Int32,System.Exception)">
            <summary>
            Call back method that is called after Update, Insert or Delete operation of the data source is completed.
            </summary>
            <param name="affectedRecords">
            Indicates how many records were affected by the operation.
            </param>
            <param name="exception">
            Exception that is thrown in case of an error.
            </param>
            <returns>
            <b>True</b> if the thrown exception was handled. By default the grid always returns <b>False</b>.
            </returns>
            <remarks>
            The method is used anly when the grid is bound using the <b>DataSourceID</b> property.<br/>
            The method can be overriden to provide custom response to any of the update operations.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ResolveRowLevel(System.String,System.String)">
            <summary>
            This overload of ResolveRowLevel was created specifically for dealing with dataKey strings which 
            come from ajax callbacks. I did this because I ended up with lots of logic just for extracting the
            dataKey array without doing any more general row resolution.
            </summary>
            <param name="level"></param>
            <param name="dataKey"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ResolveRowLevel(System.String,System.String[])">
            <summary>
            This method is used for getting a reference to a row in the grid based on it's position in the grid or
            it's DataKey. Using the DataKey is useful if you're doing things where the row order might not be the 
            same every time (like ajax row updates).
            
            To reference the row by it's position in the grid, pass in a string with the row's index in each band 
            seperated by an underscore:
                string level = "1_5_4"; 
            
            To use the DataKey to find the row, pass an array with an element for the row and each of its parents.
            The first element in the array should have the DataKey of the parent in band zero and the last element  
            should have the DataKey of the row you are looking for:
                string[] dataKeys = new string[] {"Accounting,Mary", null, "HE09412"};
            
            If some of the parent rows don't have keys, leave the array entry as null and the index will be used instead. 
            If any of the bands have multiple primary keys, add them as a single key as a comma seperated list. 
            If you want to reference the row only by their position in the grid you can set the dataKey param to null.
            An example of a dataKey array to locate a row in band 2 which had the dataKey of HE09412 would be:
            </summary>
            <param name="level">A string containing the row's index in each of the bands in the grid.</param>
            <param name="dataKeys">An array containing a dataKey string for each of the row's ancestors.</param>
            <returns>The row you are looking for or null if it can't be found</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ResolveRowPath(System.String[],System.Boolean)">
            <summary>
            This method supports the Infragistics control infrastructure and is not
            intended for use by application logic.
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.FormatException"></exception>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SortPendingDeletions(System.Xml.XmlNode)">
            <summary>
            Sorts pending row deletions to delete the deepest child rows first.
            </summary>
            <param name="varAr">The &lt;DeletedRows&gt; element posted back from
            the client-side state bag.</param>
            <returns>The supplied XML element with its children rearranged such
            that the deepest children appear earliest for pending deletion, or
            null if varArg is not the correct &lt;DeletedRows&gt; element.
            </returns>
            <remarks>
            <p class="body">This method bubble sorts the deleted rows such that the
            deepest children appear earliest in the children of &lt;DeletedRows&gt;,
            ensuring they are the first deleted.  This is done during the <b>RaisePostDataChanged</b> method call
            to prevent any breach of referential integrity, and erase <b>UltraWebGrid</b>
            from the bottom-up.</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ApplyPendingDeletion(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ApplyPendingDeletion(Infragistics.WebUI.UltraWebGrid.UltraGridRow)">
            <summary>
            Executes removal logic equivalent to the behavior performed in response
            to a client-side deletion.
            </summary>
            <param name="row">Row marked for deletion.</param>
            <returns>True if the deletion was successfully completed, otherwise False
            if any server-side event handler canceled the deletion.</returns>
            <remarks>
            <p class="body">This method is performed to carry-out the deletion logic
            on individual rows whose deletion is pending by the <b>RaisePostDataChanged"</b> method,
            and other Infragistics controls that need to precisely emulate this behavior.</p>
            <p class="body">Other Infragistics controls that perform row deletions on the
            UltraWebGrid server-side are responsible for callinh <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.PerformGroupRows"/>
            on the grid after any deletions are applied if <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.EnableInternalRowsManagement">
            EnableInternalRowsManagement</see> is turned on, or <see cref="!:UltraGridLayout.Pager.AllowPaging">
            AllowPaging</see> is turned off.</p>
            <p class="body">When a deletion occurs, this method takes care of firing the
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DeleteRow"/> and <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DeleteRowBatch"/> events.  Should a
            developer cancel one of these events, <i>row</i> is restored to its pristine
            state.</p>
            <seealso cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SortPendingDeletions(System.Xml.XmlNode)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ApplyPendingInsertion(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Boolean,System.Int32)">
            <summary>
            Executes insertion logic equivalent to the behavior performed in response
            to a client-side insertion.
            </summary>
            <param name="row">Point beneath which the row will be inserted, or null
            if inserting a top-level row.</param>
            <param name="insOverride">Default flag for whether insertion is allowed earlier
            than the end of the grid or band.</param>
            <param name="insIndex">The insertion index, only valid when <i>insOverride</i>
            is true. Typically taken from the last step of the row path.</param>
            <returns>The newly inserted grid row, or null (Nothing in Visual Basic .NET)
            if the insertion failed or was canceled by an event handler.</returns>
            <remarks>
            <p class="body">This method is called by the <b>RaisePostDataChanged"</b> method
            to handle row insertions in response to &lt;AddedRows&gt; elements. It may also
            be used by other Infragistics controls that must attach to the UltraWebGrid and
            perform insertions in a manner that emulates the client-side behavior.</p>
            <p class="body">The <b>ApplyPendingInsertion</b> method handles the firing of
            the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRow"/> and <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRowBatch"/> events.</p>
            <p class="body">The caller is responsible for following any successful call to
            <b>ApplyPendingInsertion</b> (in which it does not return null or Nothing in
            Visual Basic .NET) with a call to <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.PerformGroupRows"/> if the
            <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.EnableInternalRowsManagement">EnableInternalRowsManagement</see>
            property is true.</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when an attempt is made
            to insert a new child row into a band that does not exist.</exception>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RaisePostDataChangedEvent">
            <summary>
            Parses the client updates and applies them to the proper rows.
            </summary>
            <remarks>
            	<p class="body">This method is called by the ASP.NET framework and is not
            intended to be directly called by application logic.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Export(Infragistics.WebUI.UltraWebGrid.IUltraGridExporter)">
            <summary>
            Export method used internally by UltraWebGrid.
            </summary>
            <param name="exporter">An <see cref="T:Infragistics.WebUI.UltraWebGrid.IUltraGridExporter"/> implementation.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the parameter, <i>exporter</i>, is supplied as null (or Nothing in Visual Basic.)</exception>
            <remarks>
            The method is used to communicate with the ExcelExporter. It should never be called directly.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IResolveStyles#Resolve(Infragistics.WebUI.UltraWebGrid.UltraGridCell)">
            <summary>
            Resolve the style appropriate for the given Cell.
            </summary>
            <param name="cell">An UltraWebGrid cell instance.</param>
            <returns>The style appropriate for the given cell.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IResolveStyles#Resolve(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)">
            <summary>
            Resolve the style appropriate for the given Column.
            </summary>
            <param name="column">An UltraWebGrid column instance.</param>
            <returns>The style appropriate for the given column's header.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#CalcEngine#IUltraCalcParticipant#RecreateReference">
            <summary>
            Recreates the UltraCalc references rooted beneath the <b>UltraWebGrid</b>.
            </summary>
            <remarks>
            <p class="body">This method only needs to be called at design-time
            when the name of the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/> has changed, thereby
            affecting the absolute names of any subordinate <b>IUltraCalcReference</b>
            implementations it may contain.</p>
            <p class="body">Application developers should never need to call this
            method at run-time.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#CalcEngine#IUltraCalcParticipant#GetDesignerReferences(Infragistics.WebUI.CalcEngine.IFormulaProvider)">
            <summary>
            Gets references needed at design-time by the Formula Builder.
            </summary>
            <param name="formulaProvider">A reference to an UltraCalc formula provider,
            which is an interface any object that wants to expose a <b>Formula</b>
            property must implement.</param>
            <value>Returns a <b>ReferenceNode</b> that's the hierarchical tree of grid
            objects that should appear in the Formula Builder.</value>
            <remarks>
            <p class="body">Inheritors with subclasses that provide new <b>IFormulaProvider</b>
            objects that need to be exposed to the Formula Builder at design-time should
            override this method (making sure to call the this base class' implementation)
            and insert their own <b>ReferenceNode</b> instances that correspond to their
            formula-bearing objects at the appropriate junctures within the tree.</p>
            <p class="note">The Formula Builder can only be used with an <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/>
            when there is an instance of <b>UltraWebCalcManager</b> also on the <b>Page</b> at
            design-time.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#WebControls#IProvideImageDirectoryResolution#ResolveImageUrl(System.String)">
            <summary>
            Returns the resolved image path.  This path will be used in the img tag's src attribute, so it must be fully resolved.
            </summary>
            <param name="url">The unresolved url.  This may contain "~/".  The final resolved Url must take into account any values specified by config files.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#WebControls#IProvideImageDirectoryResolution#ResolveImageResourceUrl(System.String)">
            <summary>
            Resolves a resource path into a URL.  This can be done by using the Page.GetWebResourceUrl method.
            </summary>
            <param name="path">A string path to an embedded resource in the assembly.</param>
            <returns>The Url, which can be used to retrieve the embedded resource.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>
            The OnBubbleEvent is used by the control to expose controls from templated columns 
            to the developer for eventing purposes.
            </summary>
            <param name="sender">The WebControl which causes the event.</param>
            <param name="e">The event argument from the control which caused the event.</param>
            <returns>A boolean value whether the event bubbling should continue.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnItemCommand(System.Object,Infragistics.WebUI.UltraWebGrid.UltraWebGridCommandEventArgs)">
            <summary>
            The OnItemCommand method calls the delegate for the ItemCommand event
            </summary>
            <param name="sender">The UltraWebGrid from where the event was fired.</param>
            <param name="e">The UltraWebGridCommandEventArgs wrapper which contains the original event.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Clear">
            <summary>
            Removes data from the grid.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>
            XPathNavigator implementation.
            </summary>
            <returns>
            Creates and returns XPathDataNavigator off the grid.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.String)">
            <summary>
            Gets attribute by name.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeIndex(System.String)">
            <summary>
            Gets attribute's index.
            </summary>
            <param name="name">
            Name of the attribute.
            </param>
            <returns>
            The attribute's index. -1 if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttribute(System.Int32)">
            <summary>
            Gets attribute by index.
            </summary>
            <param name="index">
            Index of the attribute
            </param>
            <returns>
            The attribute's value. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetAttributeName(System.Int32)">
            <summary>
            Gets attribute's name by index.
            </summary>
            <param name="index">
            Index of the attribute.
            </param>
            <returns>
            The attribute's name. Null if no such attribute.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetType">
            <summary>
            Returns type of the node of the grid. It is always XPathNodeType.Root.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstSibling">
            <summary>
            Gets the first sibling of the grid.
            </summary>
            <returns>
            Self as it is always the root.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetNextSibling">
            <summary>
            Returns next sibling.
            </summary>
            <returns>
            Always Null as the grid has no next siblings in the XPath order.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetPreviousSibling">
            <summary>
            Gets the previous sibling of the grid.
            </summary>
            <returns>
            Always Null as the grid has no previous siblings in the XPath order.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetParent">
            <summary>
            Gets the grid parent node.
            </summary>
            <returns>
            Null because the grid is always the root.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#GetFirstChild">
            <summary>
            Gets first child node of the grid.
            </summary>
            <returns>
            Rows collection of the grid.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnDataBound(System.EventArgs)">
            <summary>
            Fires the delegates bound to the DataBound event.
            </summary>
            <param name="e">The event arguments for the event.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GetClientInitializationString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GetResourceCssInternal(System.String)">
            <summary>
            
            </summary>
            <param name="cssStyleSheetName"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#Shared#IProvideAppStyling#DesignRefresh(System.Boolean,System.String,System.String)">
            <summary>
            Called by Application Styling Framework(tm) to refresh the UltraWebGrid rendering after a change
            during design-time.
            </summary>
            <param name="enableAppStyling">The EnableAppStyling setting for the AppStylingManager</param>
            <param name="styleSetName">The StyleSet setting for the AppStylingManager</param>
            <param name="styleSetPath">The StyleSetPath setting for the AppStylingManager</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#Shared#IProvideAppStyling#ResolveImageUrl(System.String)">
            <summary>
            Resolves image URL on the UltraWebGrid control.
            </summary>
            <param name="imageUrl">An unresolved image URL.</param>
            <returns>Resolved URL to the image file.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#Shared#IProvideAppStyling#InitializeStyles">
            <summary>
            Initializes styles with the Style Repository.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnPreRender(System.EventArgs)">
            <summary>
            Overrides the base class <b>OnPreRender</b>.
            </summary>
            <param name="e">
            Arguments passed into the event.
            </param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Controls">
            <summary>
            The child controls collection of the grid.
            </summary>
            <remarks>
            The collection is getting filled with the controls off cells, headers, footers and/or row edit templates when present.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ClientResponse">
            <summary>
            Information related to an out-of-band update request that
            is occurring, including information which can be set and
            sent to the client, to be handled in the XmlHTTPResponseHandler
            function.
            </summary>
            <remarks>
            <p class="body">Properties set on the ClientResponse object on the
            server during an out-of-band request, such as ClientResponse.StatusMessage,
            will be copied to a client-side XmlResponse object, and passed to
            the XmlHTTPResponseHandler function as the third argument.</p>
            <p class="body">Such information is useful for updating the grid on the client in
            response to what happened on the server in an out-of-band update request.  Also, 
            this property is used for out-of-band exception handling.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ValidationProperty">
            <summary>
            The property is used to enable the grid to particibate in the validation cycle of the page.
            </summary>
            <remarks>
            When the grid has a validator assigned to any of its columns the grid starts participating 
            in the validation cycle of the page. The property is being checked for its validity. In order
            to do so it iterates through all attached validators and checks them against changed values from
            the client.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DisplayLayout">
            <summary>
            Returns a reference to or sets the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridLayout"/> object for the grid.
            </summary>
            <remarks>
            <p class="body">The UltraGridLayout object is the primary means of controlling layout and display information for the grid.</p>
            In CLR2 builds of the control this property is ReadOnly in order to better support themeing.  If this property was being set, the code in
            question will now have to reset the existing layout object and set the changes to initial object.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CssClass">
            <summary>
            Returns the CssClass off the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> class.
            </summary>
            <remarks>
            The CssClass for the grid's frame.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Enabled">
            <summary>
            Not supported by the grid.
            </summary>
            <remarks>
            Overrides the base class property and hides it from the intelli-sense.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ToolTip">
            <summary>
            Not supported by the grid.
            </summary>
            <remarks>
            Overrides the base class property and hides it from the intelli-sense.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AccessKey">
            <summary>
            Not supported by the grid.
            </summary>
            <remarks>
            Overrides the base class property and hides it from the intelli-sense.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Browser">
            <summary>
            Returns or sets a value that determines how the control is rendered to the client.
            </summary>
            <remarks>
            <p class="body">The Auto (default) setting has the control determine the best way to render itself, based on the browser's capabilities. In this mode the grid can detect whether UpLevel or DownLevel browser should be used. The Xml mode must be set explicitly for the grid to be able to take advantage of the AJAX post backs.</p>
            <p class="body">The DownLevel setting has the control render itself using HTML 3.2.</p>
            <p class="body">The Uplevel setting has the control render itself using HTML 4.0 and DHTML.</p>
            <p class="body">The Xml setting has the control render itself as XML data and the XSL transformation is applied to it on the client. If the target browser does not support XML/XSL tramsformations Up-level setting is used.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DocumentType">
            <summary>
            Identifies the Document Type Definition on the <b>Page</b>,
            which may affect rendering.
            </summary>
            <value>An enumerated value identifying recognized DTD types
            by their formal public identifier (FPI).</value>
            <remarks>
            <p class="body">The value of this property will be undefined
            before the start of rendering.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.StandardsMode">
            <summary>
            Returns true if the doctype of the page will make it render in standards mode
            and false if the page will render in quirks mode.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BackColor">
            <summary>
            Returns or sets a <b>Color</b> object that specifies the background color of the control.
            </summary>
            <remarks>
            When this property is set, other objects in the grid may use the value of this property as the default value of their corresponding property.
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ForeColor"/> property specifies the foreground color of the control.<br/>
            The property is the reflection of the BackColor property off the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> object.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BorderColor">
            <summary>
            Returns or sets a <b>Color</b> object that specifies the color of the control's borders.
            </summary>
            <remarks>
            When this property is set, other objects in the grid may use the value of this property as the default value of their corresponding property.
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BorderStyle"/> property specifies the style of the borders.
            If the BorderStyle property is not set, this property is ignored.<br/>
            The property is the reflection of the BorderColor property off the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> object.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BorderStyle">
            <summary>
            Returns or sets a <b>BorderStyle</b> object that specifies the style of the control's borders.
            </summary>
            <remarks>
            When this property is set, other objects in the grid may use the value of this property as the default value of their corresponding property.
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BorderColor"/> property specifies the color of the borders.
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BorderWidth"/> property specifies the width of the borders.<br/>
            The property is the reflection of the BorderStyle property off the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> object.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BorderWidth">
            <summary>
            Returns or sets a <b>Unit</b> object that specifies the width of the control's borders.
            </summary>
            <remarks>
            When this property is set, other objects in the grid may use the value of this property as the default value of their corresponding property.
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BorderStyle"/> property specifies the style of the borders.
            If the BorderStyle property is not set, this property is ignored.
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BorderColor"/> property specifies the color of the borders.<br/>
            The property is the reflection of the BorderWidth property off the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> object.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Font">
            <summary>
            Returns a reference to or sets the <b>Font</b> object that specifies the font of the text displayed by the grid.
            </summary>
            <remarks>
            When this property is set, other objects in the grid may use the value of this property as the default value of their corresponding property.<br/>
            The property is the reflection of the Font property off the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> object.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ForeColor">
            <summary>
            Returns or sets a <b>Color</b> object that specifies the foreground color of the control.
            </summary>
            <remarks>
            The default value of this property is 0.
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BackColor"/> property specifies the background color of the control.<br/>
            The property is the reflection of the ForeColor property off the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> object.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CellPadding">
            <summary>
            Returns or sets a value that specifies the amount of space between cell borders and cell values.
            </summary>
            <remarks>
            <p class="body">The default value of this property is 0.</p>
            <p class="body">When this property is set, other objects in the grid may use the value of this property as the default value of their corresponding property.</p>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CellSpacing"/> property specifies the amount of space between each cell.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CellSpacing">
            <summary>
            Returns or sets a value that specifies the amount of space between each cell.
            </summary>
            <remarks>
            <p class="body">When this property is set, other objects in the grid may use the value of this property as the default value of their corresponding property.</p>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CellPadding"/> property specifies the amount of space between each cell.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.HorizontalAlign">
            <summary>
            Returns or sets a value that specifies the horizontal alignment of the text displayed by the grid.
            </summary>
            <remarks>
            <p class="body">The Center setting centers text horizontally.</p>
            <p class="body">The Justify setting spreads text uniformly so that it is aligned with both the left and right margins.</p>
            <p class="body">The Left setting horizontally aligns text at the left margin.</p>
            <p class="body">The NotSet (default) setting indicates that horizonal alignment has not been set.</p>
            <p class="body">The Right setting horiztonally aligns text at the right margin.</p><br/>
            The property is the reflection of the HorizontalAlign property off the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> object.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GridLines">
            <summary>
            Returns or sets a value that specifies which cell borders should be displayed for the grid.
            </summary>
            <remarks>
            <p class="body">When this property is set, other objects in the grid may use the value of this property as the default value of their corresponding property.</p>
            <p class="body">The None setting does not display borders for the cells of the grid.</p>
            <p class="body">The Horizontal setting displays only horizontal borders for the cells.</p>
            <p class="body">The Vertical setting displays only vertical borders for the cells.</p>
            <p class="body">The Both (default) setting displays both horizontal and vertical borders for the cells.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Rows">
            <summary>
            Returns a reference to a <see cref="T:Infragistics.WebUI.UltraWebGrid.RowsCollection"/> collection that contains a collection of <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridRow"/> objects.
            </summary>
            <remarks>
            <p class="body">Each UltraGridRow in the collection represents a row or record of data in the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Columns">
            <summary>
            Returns a reference to a <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnsCollection"/> collection that contains a collection of <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridColumn"/> objects.
            </summary>
            <remarks>
            <p class="body">Each UltraGridColumn in the collection represents a column or field of data in the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Bands">
            <summary>
            Returns a reference to a <see cref="T:Infragistics.WebUI.UltraWebGrid.BandsCollection"/> collection that contains a collection of <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridBand"/> objects.
            </summary>
            <remarks>
            <p class="body">Each Band represents a level in the hierarchical organization of the grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Height">
            <summary>
            Returns or sets a value that specifies the height of the grid.
            </summary>
            <remarks>
            The property is the reflection of the Height property off the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> object.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Width">
            <summary>
            Returns or sets a value that specifies the width of the grid.
            </summary>
            <remarks>
            The property is the reflection of the Width property off the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.FrameStyle"/> object.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DataKeyField" -->
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DropDownCombo">
            <summary>
            Indicates if the grid is a part of the <b>WebCombo</b> control.
            </summary>
            <remarks>
            The property is set to true when the grid is used as a drop down for the <b>WebCombo</b> control.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DropDownComboInitDataSource">
            <summary>
            Indicates if the grid is a part of the <b>WebCombo</b> control and the InitializeDataSource is handled off the combo.
            </summary>
            <remarks>
            The property is set to true when the grid is used as a drop down for the <b>WebCombo</b> control and the InitializeDataSource is handled off the combo.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RenderedPostJavaScript">
            <summary>
            Contains intializing java script code during rendering if the grid is a part of the <b>WebCombo</b> control.
            </summary>
            <remarks>
            The code is used by the <b>WebCombo</b> control to render it along with its own 
            code and avoid the problem of mixing up the start up script blocks introduced by 
            the ASP.NET framework.<br/>
            For the information on the problem see the <a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;817032">bug description</a> on the MSDN site.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.IsXmlHttpRequest">
            <summary>
            Shows that an XML HTTP request is being performed to load more info down to the client. 
            </summary>
            <remarks>
            The property should be used to check if the grid is in the XML HTTP (out-of-band) call back mode.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.JavaScriptFileName">
            <summary>
            The base name and path for the JavaScript files that are used for client side behavior. 
            </summary>
            <remarks>
            The root name of the file, (ig_WebGrid) is used as the base for determining the other 
            files that are contain related functionality. 
            If this root file name is changed, then all other file names must be changed as well.<br/>
            The property reflects <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.JavaScriptFileName"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.JavaScriptFileNameCommon">
            <summary>
            The relative path to the common javascript file.
            </summary>
            <remarks>
            The common javascript file is the javascript that is used through out all NetAdvantage controls on the client side.
            To control location of the grid's javascript files use the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.JavaScriptFileName"/> property.<br/>
            The property reflects <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridLayout.JavaScriptFileNameCommon"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ImageUrls">
            <summary>
            Object holder for images of the grid.
            </summary>
            <remarks>
            This property provides a common location for image file names and image path 
            information. By default, all images are referenced with respect to the 
            <see cref="P:Infragistics.WebUI.UltraWebGrid.ImageUrls.ImageDirectory"/> property. 
            If an image property value starts with "/" or "./" or "../" then the <b>ImageDirectory</b> property 
            is not added to it. If the image path is relative to the project directory, start the 
            name with "./" "\ig_Images" is the default image directory where the basic grid related 
            gif files are installed. The ig_Images directory is located in the 
            "Program Files/Common Files/Infragistics/Web" sub directory structure and is added 
            to IIS as a virtual directory when the product is installed. 
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DataSourceSchema">
            <summary>
            Design time indication of the fields of the data source control. Helps getting primary keys.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BoundDataSourceID">
            <summary>
            Previous datasource id. During rebinding holds old id of the data source it was bound to.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DesignDataSourceID">
            <summary>
            Design time use only. Holds real data source id during GetDesignTimeHtml call.
            </summary>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.FilterPopulating">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterPopulatingEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the prior to a RowFilter being populated.  Allows for user modification and generation of the dropdown list.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.FilterPopulated">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.FilterPopulatedEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs after the RowFilter is populated.  Allows for final viewing of the generated list prior to return to the client.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RowFilterApplying">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.RowFilterApplyingEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the prior to a RowFilter being applied. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnRowFilterApplying(Infragistics.WebUI.UltraWebGrid.ColumnFilter,Infragistics.WebUI.UltraWebGrid.FilterCondition)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RowFilterApplied">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.RowFilterAppliedEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the after to a RowFilter being applied. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnRowFilterApplied(Infragistics.WebUI.UltraWebGrid.ColumnFilter)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveCellChange">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.ActiveCellChangeEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the active cell is about to change. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnActiveCellChange(Infragistics.WebUI.UltraWebGrid.UltraGridCell)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ActiveRowChange">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.ActiveRowChangeEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the active row is about to change. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnActiveRowChange(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRow">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.AddRowEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a row is about to be added to the grid. This event initiates a postback process. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnAddRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.AddRowBatch">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.AddRowBatchEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a row is about to be added to the grid. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnAddRowBatch(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ClickCellButton">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.ClickCellButtonEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a cell button is clicked. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnClickCellButton(Infragistics.WebUI.UltraWebGrid.UltraGridCell)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Click">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.ClickEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a row, a column header or a cell is clicked. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnClick(Infragistics.WebUI.UltraWebGrid.UltraGridRow,Infragistics.WebUI.UltraWebGrid.UltraGridColumn,Infragistics.WebUI.UltraWebGrid.UltraGridCell)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CollapseRow">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.CollapseRowEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a row is about to be collapsed. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnCollapseRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ColumnMove">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnMoveEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the column has been moved. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnColumnMove(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Object)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ColumnSizeChange">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.ColumnSizeChangeEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the width of a column has been changed since the last postback. This event is fired as a batch event, and will not force a postback itself.  Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnColumnSizeChange(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Object)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DblClick">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.DblClickEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a row, a column or a cell is double clicked. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnDblClick(Infragistics.WebUI.UltraWebGrid.UltraGridRow,Infragistics.WebUI.UltraWebGrid.UltraGridColumn,Infragistics.WebUI.UltraWebGrid.UltraGridCell)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DeleteRow">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.DeleteRowEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a row is about to be deleted. This event initiates a postback process. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnDeleteRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Int32)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DeleteRowBatch">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.DeleteRowBatchEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a row is about to be deleted. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnDeleteRowBatch(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Int32)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ExpandRow">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.ExpandRowEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a row is about to be expanded. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnExpandRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.GroupColumn">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.GroupColumnEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a column is about to be grouped. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnGroupColumn(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeBand">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.InitializeBandEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when band needs to be configured during data binding. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeBand(Infragistics.WebUI.UltraWebGrid.UltraGridBand)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeDataSource">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.InitializeDataSourceEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the grid is being data bound. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeDataSource"/>.
            By handling this event the application developers signals to the grid that the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DataBind"/> method
            should be called automatically whenever the data is needed by the grid. No manual call of the method is required
            after that.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.XmlHTTPRequest">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the grid is getting a request from client to server. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnXmlHTTPRequest(Infragistics.WebUI.UltraWebGrid.XmlHTTPRequestType,Infragistics.WebUI.UltraWebGrid.UltraGridBand,Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Int32,System.String,System.Object)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeFooter">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.InitializeFooterEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when footers need to be configured during data binding. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeFooter(Infragistics.WebUI.UltraWebGrid.RowsCollection)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeLayout">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.InitializeLayoutEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the grid's layout needs to be initialized during data binding. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeLayout(Infragistics.WebUI.UltraWebGrid.UltraGridLayout)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeRow">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.InitializeRowEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a row needs to be initialized during data binding. 
            Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>. The event is not intended to be fired when a row is simply added
            into its collection or added through the <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraGridBand.AddNew"/> method. In those cases the developer can
            initialize the row right after it is added.<br/>
            For the client side <see cref="P:Infragistics.WebUI.UltraWebGrid.ClientSideEvents.InitializeRowHandler"/> event the behavior is the opposite. This event
            is fired after a new row is added to its collection, but no event during data binding as the binding process is carried 
            out on the server side.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.InitializeGroupByRow">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.InitializeGroupByRowEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a group by row needs to be initialized during creating the row. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnInitializeGroupByRow(Infragistics.WebUI.UltraWebGrid.GroupByRow)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.MoveRow">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.MoveRowEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a row is moved inside its collection. This event initiates a postback process. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnMoveRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Object)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.PageIndexChanged">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.PageIndexChangedEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a new page of data is about to be displayed when paging is enabled. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnPageIndexChanged(System.Int32,System.Int32)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RowSizeChange">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.RowSizeChangeEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the height of a row is being changed. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnRowSizeChange(Infragistics.WebUI.UltraWebGrid.UltraGridRow)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedCellsChange">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedCellsChangeEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a cell or cells in the grid are about to be selected or unselected. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnSelectedCellsChange(Infragistics.WebUI.UltraWebGrid.SelectedCellsCollection)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedColumnsChange">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedColumnsChangeEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a column or columns in the grid are about to be selected or unselected. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnSelectedColumnsChange(Infragistics.WebUI.UltraWebGrid.SelectedColsCollection)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedRowsChange">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.SelectedColumnsChangeEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a column or columns in the grid are about to be selected or unselected. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnSelectedColumnsChange(Infragistics.WebUI.UltraWebGrid.SelectedColsCollection)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SortColumn">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.SortColumnEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the grid is about to be sorted. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnSortColumn(System.Int32,System.Int32)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UnGroupColumn">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.UnGroupColumnEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a column is about to be ungrouped. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnUnGroupColumn(Infragistics.WebUI.UltraWebGrid.UltraGridColumn)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateGrid">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.UpdateGridEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when the grid is about to be updated, meaning the value of a cell or cells changed, or rows were added or deleted. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnUpdateGrid(Infragistics.WebUI.UltraWebGrid.UltraWebGrid)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCell">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.UpdateCellEventHandler"/>.
            </summary>
            <remarks>
            <p class="body">Occurs when a cell's value is about to be updated. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnUpdateCell(Infragistics.WebUI.UltraWebGrid.UltraGridCell,System.Object)"/>.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCellBatch">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.UpdateCellBatchEventHandler"/>.
            </summary>
            <remarks>
            Occurs when a cell's value is updated. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnUpdateCellBatch(Infragistics.WebUI.UltraWebGrid.UltraGridCell,System.Object)"/>.
            Unlike the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateCell"/> event, handling the 
            UpdateCellBatch event does not immediately trigger a 
            PostBack when a cell has been updated on the client.
            This event will only be raised when a PostBack has been
            initiated from client-side code, or from a user action
            which causes PostBack, such as a button click.
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRow">
            <summary>
            Manages delegates of the type <see cref="T:Infragistics.WebUI.UltraWebGrid.UpdateRowEventHandler"/>.  Raised after a row in the grid has been updated and 
            focus is moved to a different row, or another control.
            </summary>
            <remarks>
            <p class="body">Occurs when a rows' cell values are updated. Called by <see cref="M:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.OnUpdateRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Object)"/>.</p>
            <p class="body">In a grid that is not using Xml LoadOnDemand,
            the web application developer may wish to use the 
            <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRowBatch"/> event instead of UpdateRow, for 
            batch update processing.</p>
            <p class="body">If this event is handled on the server, then 
            it will cause a PostBack to occur every time a row is edited 
            on the client.</p>
            <p class="body">Note that if LoadOnDemand is set to Xml, 
            UpdateRow is raised out-of-band.</p>
            <p class="body">If UpdateRow is handled on the server, all 
            intermediate events (UpdateCell and AddRow) are postponed 
            until the event has been raised and handled.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRowBatch">
            <summary>
            Event raised when a postback has occurred after rows 
            have been updated.
            </summary>
            <remarks>
            <p class="body">
            Unlike the <see cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRow"/> event, handling the 
            UpdateRowBatch event does not immediately trigger a 
            PostBack when a row has been updated on the client.
            This event will only be raised when a PostBack has been
            initiated from client-side code, or from a user action
            which causes PostBack, such as a button click.
            </p>
            <seealso cref="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UpdateRow"/> 
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DemandLoad">
            <summary>
            <p class="body">Occurs when a <b>Row</b> expand button has been clicked and its children need to be populated.</p>
            </summary>
            <remarks>
            <p class="body">This event is generated when a row expansion indicator is clicked by user interaction.</p>
            <p class="body">This event will only be fired if the LoadOnDemand property of the WebGrid is set to LoadOnDeman.Manual.</p>
            <p class="body">A row can be expanded programmatically by setting the <b>Expanded</b> property to true, but the event is not fired in this case.</p>
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.SelectedIndexChanged">
            <summary>
            Not supported by the grid.
            </summary>
            <remarks>
            The event is inherited and overriden to hide it from the designer property window.
            </remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.TemplatedColumnRestored">
             <summary>
            
             </summary>
             <remarks>
             <p class="body">Now would be a good time to set a <see cref="T:Infragistics.WebUI.UltraWebGrid.TemplatedColumn"/>
             HeaderTemplate, FooterTemplate or CellTemplate property.</p>
             </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.About">
            <summary>
            The purpose of the property is to expose itself in the designer and provide a button to click on to show the about box of the grid.
            </summary>
            <remarks>
            The property always returns null.
            The property type editor exposes a button tha opens the about box of the grid.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IResolveStyles#Context">
            <summary>
            Contextual information for the Style Resolver.
            </summary>
            <remarks>
            <p class="body">This property is normally set to give the Style Resolver hints that it can
            use when resolving styles.  UltraWebGrid exposes this property for informational purposes
            only.  HTML rendering is unaffected by changes made to the <b>Context</b> property.</p>
            <p class="body">This property implements the <see cref="T:Infragistics.WebUI.UltraWebGrid.IResolveStyles"/> interface.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CalcManager">
            <summary>
            Gets or sets the <b>UltraWebCalcManager</b> used for evaluating formulas
            in the grid.
            </summary>
            <remarks>
            Attaches an <b>UltraWebCalcManager</b> reference to perform calculations.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#CalcEngine#IUltraCalcParticipant#RootReference">
            <summary>
            Gets the root <b>IUltraCalcReference</b> implementation for this participant
            in the UltraCalc network.
            </summary>
            <remarks>
            <p class="body">All other <b>IUltraCalcReference</b> implementations that
            this participant exposes are nested (or contained) beneath this <i>root 
            reference</i>. The first reference tuple (token) in the absolute name of
            all references contained by this participant must be the <b>ElementName</b>
            of this <i>root reference</i>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#CalcEngine#IUltraCalcParticipant#SuppressCalcSettings">
            <summary>
            Indicates whether this participant wishes to be extended by a default
            <b>IUltraCalcReference</b> implementation provided by the <b>UltraWebCalcManager</b>.
            </summary>
            <value>Always returns True.</value>
            <remarks>
            <p class="body">Since the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraWebGrid"/> provides it's own complex
            <b>IUltraCalcReference</b> implementation, it does not need the default implementation
            accessible through the calculation settings of it's <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.CalcManager"/>.</p>
            <p class="body">Inheritors of the <b>UltraWebGrid</b> must override this property
            in their subclass in order to suppress the association of a calculation settings
            object (and corresponding default <b>IUltraCalcReference</b> implementation) with
            their subclassed grid.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Caption">
            <summary>
            This property is added by the .Net Framework 1.1 and inherited by the control.		
            </summary>
            <remarks>
            The .Net Framework added properties to a base object of the WebGrid, which causes the WebGrid 
            to display extra properties which are not implemented on the control.  These properties are not 
            used for any render time behavior at this time.
            </remarks>		
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.UseAccessibleHeader">
            <summary>
            This property is added by the .Net Framework 1.1 and inherited by the control.		
            </summary>
            <remarks>
            The .Net Framework added properties to a base object of the WebGrid, which causes the WebGrid 
            to display extra properties which are not implemented on the control.  These properties are not 
            used for any render time behavior at this time.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ImageDirectoryResolved">
            <summary>
            Returns the final resolved ImageDirectory path that should be used for an image.
            </summary>
            <remarks>This path returned here should already have resolved "~/", and taken any values from config files if present.</remarks>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ItemCommand">
            <summary>
            The ItemCommand event is raised when a WebControl inside of the WebGrid emits an event which would cause a postback.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.BindingOption">
            <summary>
            Indicates what to bind for the grid
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasAttributes">
            <summary>
            Indicates if the grid has attributes.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#LocalName">
            <summary>
            Local name of the grid node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#Value">
            <summary>
            Value of the grid node.
            </summary>
            <remarks>
            The grid has no node value. The property is always Null.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#UltraWebGrid#IXPathDataNavigable#HasChildren">
            <summary>
            Indicates if the grid has children.
            </summary>
        </member>
        <member name="E:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.DataBound">
            <summary>
            Occurs after the server control binds to a data source.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.WebAgent">
            <summary>
            Holds a reference to the web agent object. The object is responsible for app styling an lots of other things.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.StyleSheetFileName">
            <summary>
            File name and path to the CSS stylesheet for this <b>UltraWebGrid</b>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ParsedStyles">
            <summary>
            Contains the <b>ParsedStyleCollection</b> consisting of CSS class
            definitions read from external sources.
            </summary>
            <value>The <b>ParsedStyleCollection</b> after external CSS class
            definitions have been parsed, or null (Nothing in Visual Basic .NET)
            if parsing hasn't been performed yet.</value>
            <remarks>
            <p class="body"></p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.EnableAppStyling">
            <summary>
            Enables support on UltraWebGrid for the Application Styling Framework(tm).
            </summary>
            <value>
            <em>True</em> indicates Application Styling is enabled, <em>False</em>
            indicates Application Styling is disabled, and <em>NotSet</em> indicates
            support for Application Styling should default to page- or application-level
            settings.
            </value>
            <remarks>
            <p class="body">Turn on support for Application Styling of UltraWebGrid
            when using the Application Styling Framework(tm) (ASF) by setting the 
            EnableAppStyling property to True.</p>
            <p class="body">When EnableAppStyling has it's default value of NotSet,
            this control will defer the determination of whether to use Application
            Styling to settings you make at the page- or application-level.  Place
            the <strong>WebPageStyler</strong> control on the same Web form as this control
            to configure ASF support for all controls on that Page.  ASF support can
            also be turned on application-wide with the <em>enableAppStyling</em>
            attribute in your "web.config" file.</p>
            <p class="body">Turn off support for the ASF in UltraWebGrid (even though
            it may have been enabled at a higher level) by setting the EnableAppStyling
            property to False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.StylePrefix">
            <summary>
            Returns a string prefix value that is used within the CSS file to prefix each style class name.
            Can be overridden to change the prefix used for this control.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.StyleSetName">
            <summary>
            Name of the Application Styling Framework(tm) style set defining the
            themed appearance for this control.
            </summary>
            <value>
            <p class="body">The name of the Application Styling Framework(tm) (ASF)
            style set which has been designed to give this control a consistent
            appearance with other controls in your application.</p>
            <p class="body">This property may return the empty string ("") to
            imply that the default style set (named "Default") should be used.
            </p>
            </value>
            <remarks>
            <p class="body">Web sites can configure a single, consistent,
            application-wide style set through the <em>styleSetName</em>
            attribute in their "web.config" file. Alternately, they can
            define the style set to apply Application Styling to all
            controls on a Page by placing a <strong>WebPageStyler</strong>
            control on that Page and setting it's StyleSetName property.</p>
            <p class="body">At the control level this property allows an
            application developer to customize the style set applied to a
            single instance of a control.</p>
            <p class="body">Normally, graphics designers will furnish you
            with a style set containing one or more style sheet files (one
            for each type of control) and image files. The name of the style
            set (with the exception of the "Default" style set) must appear
            in each Cascading Style Sheet (CSS) class name defined by this
            control's style sheet file. For example, two WebTree controls
            that each use a different style set, "Aqua" and "Onyx", would
            expect their CSS class names for the ASF <em>Node</em> role to
            be "igtr_AquaNode" and "igtr_OnyxNode", respectively. This
            allows the uniqueness of CSS class names necessary to distinguish
            multiple style sets for the same type of control, without there
            being any naming collisions.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.ImageDirectory">
            <summary>
            The path of the directory where the images used by the control are stored.
            </summary>
            <remarks>
            <p class="body">This is the path to the directory on the server that contains
            the images used to construct the user interface of the UltraWebGrid.</p>
            <p class="body">If this property is empty the default image path is redirected
            to "/ig_common/Images/", or if support for Application Styling has been enabled
            for the application, page or this UltraWebGrid control explicitly, then an empty
            value will redirect the image path to the style set's "images" subdirectory.</p>
            <p class="body">To make UltraWebGrid use the local path of your Web application
            you should use "./" as the ImageDirectory.</p>
            </remarks>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.EnableAppStyling"/>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.StyleSetPath">
            <summary>
            Path containing the Application Styling Framework(tm) style set files
            for this type of control.
            </summary>
            <remarks>
            <p class="body">Web sites can configure the directory path containing
            their style set files application-wide by using the <em>styleSetPath</em>
            attribute of their "web.config" file. It is also possible to configure
            the style set path applicable to all controls on a Page that are subject
            to Application Styling by placing a <strong>WebPageStyler</strong> control
            on that Page and setting it's StyleSetPath property.</p>
            <p class="body">At the control level this property allows an
            application developer to customize the location of the style set
            being applied to a single instance of a control.</p>
            <p class="note">Be aware that customizing the style set path at the control
            level will not allow you to copy a style set's files to this new location,
            changing a few style property values in them, and then use it successfully
            with separate instances of the control referencing the original style set
            of the same name. This is because there would be naming collisions in the
            Cascading Style Sheet (CSS) class names, which will produce an undefined
            appearance. You must ensure the CSS class names defined by style sheets
            in the new style set path are unique from those CSS class names being
            used by other style sheets that may continue to be referenced. The
            recommended guidance in this scenario is to create a new style set
            having a new style set name, that contains your modifications.</p>
            </remarks>
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.StyleSetName"/>
            <seealso cref="P:Infragistics.WebUI.Shared.IProvideAppStyling.StyleSetPathResolved"/>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.Infragistics#WebUI#Shared#IProvideAppStyling#StyleSetPathResolved">
            <summary>
            StyleSetPath implementation. Indicates the style set directory. Can be customized for the control.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.EnableCrawlerDetection">
            <summary>
            Indicates if the grid should be detecting search engine web crawlers and 
            optimizing its output to be search engines friendly.
            </summary>
            <remarks>
            This property is set to True by default.
            A developer has the power to turn web crawlers detection off if that is 
            not essential or performance impacting for the web application he's working on.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.UltraWebGrid.RenderInitScriptInline">
            <summary>
            Forces the grid to render its initialization JavaScript inline as opposed to using RegisterClientScript block.
            If the property is set to true the initialization script will be rendered right after the HTML of the grid on the client.
            False is the default value of the property.<br/>
            <b>Warning</b>: by setting this property to true the initialization script is executed before the whole page is loaded. This
            can bring problems of alligning the grid's column if it is placed in a container, like TABLE for example.
            The developer should understand all consequences of setting this property to true.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IDataBindable">
            <summary>
            Indicates if a class is data bindable.
            </summary>
            <remarks>
            Used to provide to information about necessity to data bind to WebCombo 
            if the grid is a part of one.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.IDataBindable.RequiresDataBinding">
            <summary>
            Indicates if the object should data bind.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.Exporter.ExportMode">
            <summary>
            Listing of export modes that control the behavior of the export
            as it is experienced by end users.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Exporter.ExportMode.InBrowser">
            <summary>
            Launches Microsoft Excel within the end user's browser window
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Exporter.ExportMode.Download">
            <summary>
            Downloads the exported spreadsheet to a file on the end user's local file system.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.UltraWebGrid.Exporter.ExportMode.Custom">
            <summary>
            Export must be handled by the developer in a custom manner.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.Exporter.UltraWebGridExporter">
            <summary>
            The base exporter class used by the exporter components.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Exporter.UltraWebGridExporter.ExportMode">
            <summary>
            Determines what export behavior the control takes automatically when Export
            has been called.
            </summary>
            <remarks>
            <p class="body">
            By default, the control automatically sends the results of an export operation to the client browser
            whenever <see cref="!:Export"/> has been called from server-side ASP.NET code as part of the HTTP 
            Response.  Developers can customize this behavior and the user experience it affords UltraWebGrid 
            applications with this property.
            </p>
            <p class="body">
            Normally, the exported file is downloaded by the end user's browser, and the user can 
            choose to Open, Save or Cancel the download.  Different browsers may display this notice to 
            the end user in different manners.  In particular, some browsers may display a warning 
            message concerning the security ramifications of opening untrusted binary downloads.
            </p>
            <p class="body">
            If <see cref="P:Infragistics.WebUI.UltraWebGrid.Exporter.UltraWebGridExporter.ExportMode">InBrowser</see> is specified, but the client machine does not have 
            a browser plugin to handle the file the ExportMode falls back and behaves like
            <see cref="P:Infragistics.WebUI.UltraWebGrid.Exporter.UltraWebGridExporter.ExportMode">Download</see>.</p>
            <p class="body">
            When <see cref="P:Infragistics.WebUI.UltraWebGrid.Exporter.UltraWebGridExporter.ExportMode">Custom</see> is specified,
            the developer assumes all responsibility for directing the exported file
            stream (it is not automatically sent to the client browser).  This mode might
            be used by advanced applications that require sending the exported file across
            a <strong>NetworkStream</strong> or saving it into a file located on the server.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Exporter.UltraWebGridExporter.Infragistics#WebUI#Shared#IUltraLicensedComponent#License">
            <summary>
            Gets the license cached within this Element.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.Exporter.UltraWebGridExporter.DownloadExtension">
            <summary>
            TODO: comment
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem">
            <summary>
            The object is used as an item of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection"/>.
            </summary>
            <remarks>
            The object's properties are providing the supprot for the validators' ids to be stored in the validators collection.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> class.
            </summary>
            <remarks>
            Default constructor
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> class with a validator id.
            </summary>
            <remarks>
            Creates a new instance of the object with a validator id.
            </remarks>
            <param name="v">
            The validator ID to initialize the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> with.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItem.ToString">
            <summary>
            Reflects the object's string representation.
            </summary>
            <remarks>
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.ValidatorItem.Value"/> property is used as the object representation.
            </remarks>
            <returns>
            The <see cref="P:Infragistics.WebUI.UltraWebGrid.ValidatorItem.Value"/> property. Empty string if the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValidatorItem.Value"/> is not set.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItem.LoadViewState(System.Object)">
            <summary>
            Laods the view state for the object.
            </summary>
            <param name="savedState">
            The saved view state to load from
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItem.SaveViewState">
            <summary>
            Saves the view state of the object.
            </summary>
            <returns>
            Saved view state of the object.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItem.TrackViewState">
            <summary>
            Turns on tracking the view state which is off by default.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValidatorItem.Value">
            <summary>
            Name of the validator control.
            </summary>
            <remarks>
            The validator's ID is stored in the property.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValidatorItem.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection">
            <summary>
            The validators collection that are assigned to a grid's column to validate its correct input. 
            <seealso cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.Validators"/>
            </summary>
            <remarks>
            The collection is used to store validators ids on the page that have to be applied to a column 
            to check its valid input when edited.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection"/> class.
            </summary>
            <remarks>
            Default constructor
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection"/> class.
            </summary>
            <remarks>
            Can be used to create the collection and indicate it to save its changes into 
            the view state right from its creation.
            </remarks>
            <param name="bTrack">
            Directs to start saving the view state right after creation.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.Add(Infragistics.WebUI.UltraWebGrid.ValidatorItem,System.Boolean)">
            <summary>
            Adds a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object into the collection.
            </summary>
            <remarks>
            Can be directed to check if the item already exists in the collection and prevent from having duplicate entrees.
            </remarks>
            <param name="item">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object to add.
            </param>
            <param name="checkExisted">
            Shows to check existance of the object in the collection. If the parameter is true and the 
            object exists it is not added for the second time. If the parameter is false the object can be added 
            into the collection inspite of its presence there.
            </param>
            <returns>
            Index of newly added item inside the collection. -1 if the operation failed.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.Add(Infragistics.WebUI.UltraWebGrid.ValidatorItem)">
            <summary>
            Adds a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object into the collection.
            </summary>
            <remarks>
            The method does not allow to add more than one instance into the collection. 
            An attempt to add more than one instance will fail.
            </remarks>
            <param name="item">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object to add.
            </param>
            <returns>
            Index of newly added item inside the collection. -1 if the operation failed.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.Add(System.Web.UI.WebControls.BaseValidator)">
            <summary>
            Creates the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object from a validator object and adds it into the collection.
            </summary>
            <remarks>
            A new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object with ID of the provided validator 
            is created by the method. New instance of the object is is added into the collection afterwards.
            </remarks>
            <param name="bv">
            The validator object to create a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object after and add into the collection.
            </param>
            <returns>
            Index of newly added item inside the collection. -1 if the operation failed.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.ValidatorItem)">
            <summary>
            Inserts a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object into the collection.
            </summary>
            <remarks>
            The method inserts a new object into the collection at a specified index.
            </remarks>
            <param name="index">
            The index to insert the object at. Existing objects are being pushed to the greater indexes.
            </param>
            <param name="item">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object to insert.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.Remove(Infragistics.WebUI.UltraWebGrid.ValidatorItem)">
            <summary>
            Removes the first occurence of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object from the collection.
            </summary>
            <remarks>
            The method removes the specified object from the collection.
            </remarks>
            <param name="item">
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object to remove.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
            <remarks>
            Use the method to clear the validators collection.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.CopyTo(Infragistics.WebUI.UltraWebGrid.ValidatorItem[],System.Int32)">
            <summary>
            Copies a range of elements from the collection into one-dimensional array of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> objects, starting from the provided index.
            </summary>
            <remarks>
            The method copies from the collection into an array of the objects.
            </remarks>
            <param name="items">
            The array to copy into.
            </param>
            <param name="index">
            The index to start copying from.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.Contains(Infragistics.WebUI.UltraWebGrid.ValidatorItem)">
            <summary>
            Checks if an item is present in the collection.
            </summary>
            <remarks>
            The method checks if the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object already exists in the collection.
            </remarks>
            <param name="item">
            The object to check its existance in the collection.
            </param>
            <returns>
            True if the object exists in the collection. False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.IndexOf(Infragistics.WebUI.UltraWebGrid.ValidatorItem)">
            <summary>
            Searches for the specified <see cref="T:Infragistics.WebUI.UltraWebGrid.ValidatorItem"/> object 
            and returns zero-based index of the first occurence within the collection.
            </summary>
            <remarks>
            The method can be also used to check the presence of the object inside the collection.
            </remarks>
            <param name="item">
            The object to get its index within the collection.
            </param>
            <returns>
            The index of the object within the collection. -1 if no occurence has met.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.LoadViewState(System.Object)">
            <summary>
            Loads the view state of the collection.
            </summary>
            <param name="savedState">
            Saved array of view states of the items to load from.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.SaveViewState">
            <summary>
            Save's the object's view state.
            </summary>
            <returns>
            The array of the view states of the stored items of the collection.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.TrackViewState">
            <summary>
            Turns on tracking the view state which is off by default.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.Item(System.Int32)">
            <summary>
            Iterator for the ValidatorItem collection
            </summary>
            <param name="index">The index of the ValidatorItem in the collection</param>
            <returns>The ValidatatorItem at the index</returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValidatorItemsCollection.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.IProvideEditorDropDownList">
            <summary>
            Should be implemented by the object that will provide values for the property.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IProvideEditorDropDownList.GetValueList(System.String)">
            <summary>
            Returns list of the values for the property.
            </summary>
            <param name="propertyName">
            Name of the property to provide the list for.
            </param>
            <returns>
            List of possible values of the property.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.IProvideEditorDropDownList.SetValue(System.String,System.String)">
            <summary>
            Sets the new property value back to the container
            </summary>
            <param name="propertyName">
            Name of the property to set
            </param>
            <param name="value">
            New value to set
            </param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ValueList">
            <summary>
            The ValueList object maintains a list of values that the user can choose from when entering data. The ValueList is the common mechanism used to populate simple dropdown lists.
            </summary>
            <remarks>
            The ValueList object maintains a collection of items that can be displayed as the contents of a dropdown selection box. The user can click on a dropdown list in their browser and select the data supplied by the ValueList, which will appear in the grid. ValueList objects are associated with a particular column in the grid by using the <b>ValueList</b> property of the Column object. Each cell of the column will display the value list when placed into edit mode. ValueList objects display one value as text to the user while storing another value in the datasource.
            </remarks>	
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueList.#ctor">
            <summary>
            Creates a default valuelist object that does not track viewstate
            </summary>
            <remarks>
            If you are creating the object on every postback this constructor would be appropriate. 
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueList.#ctor(System.Boolean)">
            <summary>
            Creates a valuelist object.
            </summary>
            <remarks>
            This constructor allows the control be entered into the ViewState and in most cases is the recommened one to use.
            </remarks>
            <param name="bTrack">bool - True adds the valuelist object to ViewState</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueList.CopyFrom(Infragistics.WebUI.UltraWebGrid.ValueList)">
            <summary>
            Duplicates the properties of the specified <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> into the instance of the ValueList class from which this method is invoked.
            </summary>
            <remarks>
            <p class="body">Use the CopyFrom method to duplicate the properties of the specified ValueList into the instance of the ValueList class from which this method is invoked.</p>
            </remarks>
            <param name="passin">
            <p class="body">A ValueList object that represents the ValueList to copy.</p>
            </param>
            <returns>This instance of the object with it's properties changed to match the passed in values.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueList.DataBind">
            <summary>
            Binds the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> to the data source specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DataSource"/> property.
            </summary>
            <remarks>
            <p class="body">The <b>DataSource</b> property is used to specify the data source to which the ValueList should be bound.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueList.DataBind(System.Object,System.String,System.String,System.String)">
            <summary>
            Binds the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> to the data source and member specified as parameters.
            </summary>
            <param name="dataSource"><p class="body">The data source that populates the items of the ValueList.</p></param>
            <param name="dataMember"><p class="body">The table of the data source used to populate the ValueList.</p></param>
            <param name="displayMember"><p class="body">The field of the table in the data source that will provide the item text for a ValueList.</p></param>
            <param name="valueMember"><p class="body">The field of the table in the data source that will provide the item values for a ValueList.</p></param>
            <remarks>The DataBind method takes the input values, sets the instance properties to match the input values and completes the DataBind on the <b>ValueList</b></remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueList.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
            <returns>The string representation of this control, in this case the empty string.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueList.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the ValueList class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the ValueList will return False until set again.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.Key">
            <summary>
            Returns or sets a string of text that uniquely identifies this <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> within a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> collection.
            </summary>
            <remarks>Inherited from KeyedObjectBase</remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.WebCombo">
            <summary>
            Returns or sets a string that identifies a WebCombo control to use for the ValueList dropdown.  The string passed in must be the name of the control on the page.
            </summary>
            <remarks>
            <b>Not for public use.</b>  The <b>WebCombo</b> property is a legacy construct of the <b>ValueList</b> object.  If a <b>WebCombo</b> is to be used 
            as an embedded editor for a column the <see cref="P:Infragistics.WebUI.UltraWebGrid.UltraGridColumn.EditorControlID"/> should be used to direct the control.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.Style">
            <summary>
            Returns a reference to or sets a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object that determines how the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> is rendered on the client.
            </summary>
            <remarks>
            <p class="body">Individual style attributes can be applied by setting the GridItemStyle object's corresponding properties. For example, a style's background color can be changed by setting its <b>BackColor</b> property.</p>
            <p class="body">A comprehensive pre-defined style can be applied by setting the GridItemStyle object's <b>CssClass</b> property to the name of the style.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.HasStyle">
            <summary>
            Returns a Boolean value that determines whether the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.Style"/> property is currently set to a <see cref="T:Infragistics.WebUI.UltraWebGrid.GridItemStyle"/> object.
            </summary>
            <remarks>
            <p class="body">This property returns True if the Style property is currently set; otherwise, it returns False.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.ValueListItems">
            <summary>
            Returns a reference to a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection"/> collection that contains a collection of <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> objects.
            </summary>
            <remarks>
            <p class="body">Each ValueListItem in the collection represents an item in the ValueList dropdown.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.DataSource">
            <summary>
            Returns or sets the data source that populates the items of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> object.
            </summary>
            <remarks>
            <p class="body">This property is used to specify a source of data to populate a ValueList.</p>
            <p class="body">Use the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DataMember"/> property to specify the field in the data source specified by this property.</p>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DisplayMember"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.ValueMember"/> properties are used to specify the fields in the data source that will be used to populate the list.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.DataSourceID">
            <summary>
            The control ID of an IDataSource that will be used as the data source.
            </summary>
            
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.DataMember">
            <summary>
            Returns or sets a string of text that specifies the record set of the data source used to populate the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> object.
            </summary>
            <remarks>
            <p class="body">Use this property to specify the record set in the data source specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DataSource"/> property to populate a ValueList.</p>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DisplayMember"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.ValueMember"/> properties are used to specify the fields in the record set that will be used to populate the list. <b>DisplayMember</b> specifies the value that will be displayed to the user, <b>ValueMember</b> specifies the value that will be stored in the datasource.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.DisplayMember">
            <summary>
            Returns or sets a string of text that specifies the field of the table in the data source that will provide the item text for a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> object.
            </summary>
            <remarks>
            <p class="body">Use this property to specify the field of the table in the data source specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DataMember"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DataSource"/> properties.</p>
            <p class="body">The field specified will provide the item text for a ValueList. The field providing item values is specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.ValueMember"/> property.</p>
            <p class="body">This property, in conjunction with the ValueMember property, provides a way to store one value in the data source while displaying another. In this manner, the user can be presented with a list of states, for example, and if he or she selects "New York," the value "NY" could be stored in the data source. In this example, "New York" is the value of the field specified by the DisplayMember property while "NY" is the value of the field specified by the ValueMember property.</p>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DisplayStyle"/> property is used to determine whether the DisplayMember or ValueMember value is shown in the ValueList.</p>
            <p class="body">The default value for this property is an empty string.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.DisplayStyle">
            <summary>
            Returns or sets a value that specifies whether DisplayText or DataValue of the ValueListItem objects are shown in the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/>.
            </summary>
            <remarks>
            <p class="body">The DisplayText and DataValue properties of ValueListItems provide a way to store one value in the data source while displaying another. In this manner, the user can be presented with a list of states, for example, and if he or she selects "New York," the value "NY" could be stored in the data source. In this example, "New York" is the value of the field specified by the DisplayText property while "NY" is the value of the field specified by the DataValue property.</p>
            <p class="body">The DisplayText (default) setting specifies that DisplayText property of ValueListItems will be used.</p>
            <p class="body">The DataValue setting specifies that the values shown in the ValueList are provided by the ValueMember property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.ValueMember">
            <summary>
            Returns or sets a string of text that specifies the field of the table in the data source that will provide the item values for a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> object.
            </summary>
            <remarks>
            <p class="body">Use this property to specify the field of the table in the data source specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DataMember"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DataSource"/> properties.</p>
            <p class="body">The field specified will provide the item values for a ValueList. The field providing item text is specified by the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DisplayMember"/> property.</p>
            <p class="body">This property, in conjunction with the DisplayMember property, provides a way to store one value in the data source while displaying another. In this manner, the user can be presented with a list of states, for example, and if he or she selects "New York," the value "NY" could be stored in the data source. In this example, "New York" is the value of the field specified by the DisplayMember property while "NY" is the value of the field specified by the ValueMember property.</p>
            <p class="body">The <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueList.DisplayStyle"/> property is used to determine whether the DisplayMember or ValueMember value is shown in the ValueList.</p>
            <p class="body">The default value for this property is an empty string.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.Column">
            <summary>
            The UltraGridColumn owner of the list
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.Prompt">
            <summary>
            Appears in the first line of the value list and is selected by default if there is no matching item in the list.
            </summary>
            <remarks> 
            Using the <b>Prompt</b> will allow the <see cref="T:Infragistics.WebUI.UltraWebGrid.UltraGridCell"/> object show a 'Select Value' type message.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.Page">
            <summary>
            The page the grid is on.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.IsTrackingViewState">
            <summary>
            Defines if the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> object is tracking view state.
            </summary>
            <remarks>
            If the property is set all changes made to the object are getting stored into its view state and maintained over post backs.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueList.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ValueListItem">
            <summary>
            The ValueListItem object represents a single row within the dropdown <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> collection.
            </summary>
            <remarks>
            The object manages the information for displaying and updating the item within the browser.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItem.#ctor">
            <summary>
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> belongs to a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> and acts as a single, valid value for that list.
            </summary>
            <remarks>
            It is recommended that the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DisplayText"/> property be set when using this constructor.  		
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItem.#ctor(System.String)">
            <summary>
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> belongs to a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> and acts as a single, valid value for that list.
            </summary>
            <remarks>
            Initializes the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DisplayText"/> property.
            </remarks>
            <param name="displayText">string - The value that will be set as the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DisplayText"/> and if not overridden, the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DataValue"/> of the ValueListItem</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItem.#ctor(System.String,System.Object)">
            <summary>
            The <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> belongs to a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> and acts as a single, valid value for that list.
            </summary>
            <remarks>
            Initializes the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DisplayText"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DataValue"/> properties.
            </remarks>
            <param name="displayText">string - The value that will be set as the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DisplayText"/>.</param>
            <param name="dataValue">object - the value that will be set as the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DataValue"/> of the ValueListItem.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItem.ToString">
            <summary>
            Returns a string representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
            <returns>
            String representation of an <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> object.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItem.Reset">
            <summary>
            Resets all properties of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the ValueListItem class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the ValueListItem will return False until set again.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItem.CopyFrom(Infragistics.WebUI.UltraWebGrid.ValueListItem)">
            <summary>
            Duplicates the properties of the specified <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> into the instance of the ValueListItem class from which this method is invoked.
            </summary>
            <remarks>
            <p class="body">Use the CopyFrom method to duplicate the properties of the specified ValueList into the instance of the ValueList class from which this method is invoked.</p>
            </remarks>
            <param name="passin">
            <p class="body">A ValueList object that represents the ValueList to copy.</p>
            </param>
            <returns>
            Returns current object.
            </returns>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.Key">
            <summary>
            Unique identification of the item.
            </summary>
            <remarks>
            Returns or sets a string of text that uniquely identifies this <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> within the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection"/>.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.ValueList">
            <summary>
            Returns a reference to or sets the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> object that contains this <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/>.
            </summary>
            <remarks>
            <p class="body">Use this property to specify which ValueList holds this ValueListItem.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.Tag">
            <summary>
            Returns or sets an object that contains any additional data associated with this <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/>.
            </summary>
            <remarks>
            <p class="body">Use this property to associate any additional information with this ValueListItem.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DisplayText">
            <summary>
            Returns or sets a string of text that specifies the text displayed when this <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> is selected by the user from a <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.ValueList"/>.
            </summary>
            <remarks>
            <p class="body">This property, in conjunction with the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DataValue"/> property, provides a way to store one value in the data source while displaying another. In this manner, the user can be presented with a list of states, for example, and if he or she selects "New York," the value "NY" could be stored in the data source. In this example, "New York" is the value of the DisplayText property while "NY" is the value of the DataValue property.</p>
            <p class="body">The default value for this property is an empty string.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DataValue">
            <summary>
            Returns or sets a value that specifies the value stored in the data source when this <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> is selected by the user from a <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.ValueList"/>.
            </summary>
            <remarks>
            <p class="body">This property, in conjunction with the <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DisplayText"/> property, provides a way to store one value in the data source while displaying another. In this manner, the user can be presented with a list of states, for example, and if he or she selects "New York," the value "NY" could be stored in the data source. In this example, "New York" is the value of the DisplayText property while "NY" is the value of the DataValue property.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection">
            <summary>
            The collection of ValueListItem objects that make up a ValueList object.
            </summary>
            <remarks>
            This collection manages the adding, inserting and removal of ValueListItem elements from the list.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection"/> class.
            </summary>
            <remarks>
            Default constructor
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.GetEnumerator">
            <summary>
            Returns an enumerator object for the collection.
            </summary>
            <remarks>
            Creates and returns the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.ValueListItemEnumerator"/> object. 
            To use the enumerator properly it is recommended to store the reference returned and use it. 
            Invoking the method again will create another instance of the enumerator.
            </remarks>
            <returns>
            A new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.ValueListItemEnumerator"/> object.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.Add(Infragistics.WebUI.UltraWebGrid.ValueListItem)">
            <summary>
            Inserts a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> object into the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection"/>.
            </summary>
            <remarks>
            Already existed <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> is inserted into the collection by this method.
            </remarks>
            <param name="valueListItem">The <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> object to be added.</param>
            <returns>The index of the added <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> within the collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.Add(System.Object)">
            <summary>
            Creates and adds an item into the collection.
            </summary>
            <remarks>
            Creates a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> with the specified <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DataValue"/> property and inserts it into the collection.
            </remarks>
            <param name="dataValue">The <b>DataValue</b> of the item to be added. This is the value that will be stored in the database when this item is selected.</param>
            <returns>The ValueListItem that was added to the collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.Add(System.Object,System.String)">
            <summary>
            Creates and adds an item into the collection.
            </summary>
            <remarks>
            Creates a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> with the specified <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DataValue"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DisplayText"/> properties and inserts it into the collection.
            </remarks>
            <param name="dataValue">The <b>DataValue</b> of the item to be added. This is the value that will be stored in the database when this item is selected.</param>
            <param name="displayText">The <b>DisplayText</b> of the item to be added. This is the value that will be displayed in the list for the user to choose.</param>
            <returns>The ValueListItem that was added to the collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.Insert(System.Int32,System.Object,System.String)">
            <summary>
            Creates and inserts an item into the collection.
            </summary>
            <remarks>
            Creates a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> with the specified <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DataValue"/> and <see cref="P:Infragistics.WebUI.UltraWebGrid.ValueListItem.DisplayText"/> properties and inserts it into the collection.
            </remarks>
            <param name="index">The position in the collection for the new ValueListItem. Note that if you specify the index of an existing ValueListItem, the new item will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="dataValue">The <b>DataValue</b> of the item to be added. This is the value that will be stored in the database when this item is selected.</param>
            <param name="displayText">The <b>DisplayText</b> of the item to be added. This is the value that will be displayed in the list for the user to choose.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.Insert(System.Int32,Infragistics.WebUI.UltraWebGrid.ValueListItem)">
            <summary>
            Inserts a <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> at a specified index
            </summary>
            <remarks>
            Use the method to insert an existed item into the specified index.
            </remarks>
            <param name="index">The position in the collection for the new <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/>. 
            Note that if you specify the index of an existing <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/>, the new 
            item will be inserted <i>before</i> the existing one in the collection.</param>
            <param name="valueListItem">The ValueListItem to be inserted into the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.Remove(Infragistics.WebUI.UltraWebGrid.ValueListItem)">
            <summary>
            Removes the specified <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> object from the collection.
            </summary>
            <remarks>
            Removes an item from the collection by its reference.
            </remarks>
            <param name="valueListItem">The ValueListItem to be removed from the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> object at the specified index from the collection.
            </summary>
            <remarks>
            Removes an item from the collection by its index.
            </remarks>
            <param name="index">The index of the ValueListItem object to be removed.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.Clear">
            <summary>
            Removes all the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> objects from the collection.
            </summary>
            <remarks>
            All items are removed from the collection by the method.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.IsReadOnly">
            <summary>
            Returns a Boolean value indicating whether the collection is read-only.
            </summary>
            <remarks>
            The property is an override for the <see cref="P:Infragistics.WebUI.UltraWebGrid.KeyedObjectCollectionBase.IsReadOnly"/> abstract property. Always returns false for this collection.
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.Item(System.Int32)">
            <summary>
            <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/> property indexer for the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection"/>.
            </summary>
            <remarks>
            Numeric indexer. Returns a collection member by its numeric index.
            </remarks>
            <param name="index">
            Zero based index of a collection member. If the index exceeds the collection boundaries null is returned.
            </param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.ValueListItemsCollection.ValueList">
            <summary>
            Returns a reference to or sets the <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueList"/> object that contains this <see cref="T:Infragistics.WebUI.UltraWebGrid.ValueListItem"/>.
            </summary>
            <remarks>
            <p class="body">Use this property to specify which ValueList holds this ValueListItem.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.XmlClientWrite">
            <summary>
            Summary description for XmlClientWrite.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.XmlWrite">
            <summary>
            The helper object to persist the whole WebGrid into a layout file.
            Used from within the SaveLayout method.
            </summary>
            <remarks>
            The SaveLayout method is obsolete starting in version 4.1.20041 of the WebGrid.
            It is recommended for the latest versions to use Presets or AppStyling instead.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlWrite.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.WebUI.UltraWebGrid.XmlWrite"/> class.
            </summary>
            <remarks>
            Default constructor
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlWrite.GetFilename">
            <summary>
            Gets a file name to store the layout into.
            </summary>
            <remarks>
            Opens the Save dialog to choose a file to save the layout into. Should be used during design time only.
            </remarks>
            <returns>
            The file name to the layout into. Null if an error occured.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlWrite.SaveLayout(Infragistics.WebUI.UltraWebGrid.UltraGridLayout,System.Xml.XmlTextWriter,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Saves the grid's layout.
            </summary>
            <remarks>
            The grid's layout is saved by the method into the XmlTextWriter provided. Puts start document and end document tags around the saved XML data.
            </remarks>
            <param name="lo">The gris' layout to save.</param>
            <param name="tw">The XmlTextWriter object to save the layout into.</param>
            <param name="bWriteStyles">Indicates if the styles need to be saved.</param>
            <param name="bWriteBehaviors">Indicates if the behavior properties need to be saved.</param>
            <param name="bWriteColumns">Indicates if the columns need to be saved.</param>
            <param name="bWriteData">Indicates if the data (rows and cells) needs to be saved.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlWrite.SaveLayoutData(Infragistics.WebUI.UltraWebGrid.UltraGridLayout,System.Xml.XmlTextWriter,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Saves the grid's layout.
            </summary>
            <remarks>
            The grid's layout is saved by the method into the XmlTextWriter provided. Does not put start document and end document tags around the saved XML data. Use <see cref="M:Infragistics.WebUI.UltraWebGrid.XmlWrite.SaveLayout(Infragistics.WebUI.UltraWebGrid.UltraGridLayout,System.Xml.XmlTextWriter,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/> to persist the complete XML document.
            </remarks>
            <param name="lo">The gris' layout to save.</param>
            <param name="tw">The XmlTextWriter object to save the layout into.</param>
            <param name="bWriteStyles">Indicates if the styles need to be saved.</param>
            <param name="bWriteBehaviors">Indicates if the behavior properties need to be saved.</param>
            <param name="bWriteColumns">Indicates if the columns need to be saved.</param>
            <param name="bWriteData">Indicates if the data (rows and cells) needs to be saved.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlWrite.WriteFont(System.Web.UI.WebControls.FontInfo,System.Xml.XmlWriter)">
            <summary>
            Writes the Font member of the Style object to XML
            </summary>
            <param name="font"></param>
            <param name="tw"></param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.XmlRead">
            <summary>
            The helper object to restore the whole WebGrid from a layout file.
            Used from within the LoadLayout method.
            </summary>
            <remarks>
            The LoadLayout method is obsolete starting in version 4.1.20041 of the WebGrid.
            It is recommended for the latest versions to use Presets or AppStyling instead.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.#ctor">
            <summary>
            Base constructor for the class.		
            </summary>
            <remarks> Called automatically by the control during LoadLayout.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.GetFilename">
            <summary>
            This method is used to open a file dialog in the preset directory to choose a layout file to open.
            </summary>
            <remarks>
            Opens the Open dialog to choose a file to save the layout into. Should be used during design time only.
            </remarks>
            <returns>The fully qualified filename of the layout file being loaded</returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.LoadLayout(Infragistics.WebUI.UltraWebGrid.UltraGridLayout,System.Xml.XmlTextReader,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This method takes the layout persisted in an xml based file and applys the settings onto the WebGrid
            </summary>
            <remarks>
            The layout file is similar format to that of the ASPX generated by the control.  This method can be called at runtime.
            </remarks>
            <param name="lo">The UltraGridLayout object of the UltraWebGrid</param>
            <param name="tr">The XmlReader which is parsing the layout.</param>
            <param name="bReadStyles">True if style information is to be loaded</param>
            <param name="bReadBehaviors">True if behavior information should be loaded</param>
            <param name="bReadColumns">True if UltraGridColumn object should be populated</param>
            <param name="bReadData">True if Data should be loaded.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadMargin(Infragistics.WebUI.Shared.Margin,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="margin"></param>
            <param name="tr">The XmlReader which is parsing the layout.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadPadding(Infragistics.WebUI.Shared.Padding,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="padding"></param>
            <param name="tr">The XmlReader which is parsing the layout.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadBorderDetails(Infragistics.WebUI.Shared.BorderDetails,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="borderDetails"></param>
            <param name="tr">The XmlReader which is parsing the layout.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadFont(System.Web.UI.WebControls.FontInfo,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="font"></param>
            <param name="tr">The XmlReader which is parsing the layout.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadStyle(Infragistics.WebUI.UltraWebGrid.GridItemStyle,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="style"></param>
            <param name="tr">The XmlReader which is parsing the layout.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadBands(Infragistics.WebUI.UltraWebGrid.BandsCollection,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="bands"></param>
            <param name="tr">The XmlReader which is parsing the layout.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadBand(Infragistics.WebUI.UltraWebGrid.UltraGridBand,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="band"></param>
            <param name="tr">The XmlReader which is parsing the layout.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadColumns(Infragistics.WebUI.UltraWebGrid.ColumnsCollection,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="columns"></param>
            <param name="tr">The XmlReader which is parsing the layout.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadColumn(Infragistics.WebUI.UltraWebGrid.UltraGridColumn,System.Xml.XmlReader)">
            <summary>
            Populates a UltraGridColumn object from a layout file
            </summary>
            <remarks>
            Called during LoadLayout, this method populates the inputted column with the data from the layout.
            </remarks>
            <param name="column">The UltraGridColumn object to be populated</param>
            <param name="tr">The XmlReader which is parsing the layout.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadRows(Infragistics.WebUI.UltraWebGrid.RowsCollection,System.Xml.XmlReader,Infragistics.WebUI.UltraWebGrid.BandsCollection,System.Int32)">
            <summary>
            Populates a UltraGridRowsCollection object from serialized data.
            </summary>
            <remarks>
            This method is called by the LoadLayout procedure in order to populate an UltraGridRows collection with data.
            </remarks>
            <param name="rows">The collection to be populated</param>
            <param name="tr">The XmlReader object that is parsing the layout file</param>
            <param name="bands">The UltraGridBands collection for the UltraWebGrid</param>
            <param name="bandLevel">The index of the UltraGridBand object that the rows collection belongs to.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadRow(Infragistics.WebUI.UltraWebGrid.UltraGridRow,System.Xml.XmlReader,Infragistics.WebUI.UltraWebGrid.BandsCollection,System.Int32)">
            <summary>
            Populates a UltraGridRow object with data from a layout
            </summary>
            <remarks>Called during the LoadLayout, this method populates a row object from serialized information.</remarks>
            <param name="row">The UltraGridRow to be populated.</param>
            <param name="tr">The XmlReader object that is parsing the layout file.</param>
            <param name="bands">The UltraGridBand collection of the WebGrid that the UltraGridRow object belongs to.</param>
            <param name="bandLevel">The index of the UltraGridBand that the UltraGridRow parameter belongs to.</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadCells(Infragistics.WebUI.UltraWebGrid.CellsCollection,System.Xml.XmlReader)">
            <summary>
            Populates a UltraGridCellsCollection object with data loaded from a layout.
            </summary>
            <param name="cells">The UltraGridCellsCollection that is being populated from the serialized data.</param>
            <param name="tr">The XmlReader object parsing the loaded layout</param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XmlRead.ReadCell(Infragistics.WebUI.UltraWebGrid.UltraGridCell,System.Xml.XmlReader)">
            <summary>
            Reads a Cell object from the UltraGridLayout and populates the Cell with the serialized information
            </summary>
            <remarks>
            Called internally to process data, not for external use.
            </remarks>
            <param name="cell">The UltraGridCell to be populated.</param>
            <param name="tr">The XmlReader object that is parsing the layout document.</param>
        </member>
        <member name="T:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator">
            <summary>
            Provides XPath navigation for the data of the grid.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.#ctor(Infragistics.WebUI.UltraWebGrid.IXPathDataNavigable)">
            <summary>
            Creates a data navigator with a current object.
            </summary>
            <param name="current">
             The object can be of types: RowsCollectio, UltraGridRow, UltraGridCell.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.Clone">
            <summary>
            Clones the navigator object.
            </summary>
            <returns>
            New navigator object pointing to the sane current node.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
            <summary>
            Defines if provided navigator is at the same position.
            </summary>
            <param name="other">
            Navigator to compare position with.
            </param>
            <returns>
            True if two navigators are at the same position.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
            <summary>
            Moves current node to the same position as provided in the passed in navigator
            </summary>
            <param name="other">
            Navigator to synchronize positions with.
            </param>
            <returns>
            True if positions were successfully synchronized.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.MoveToAttribute(System.String,System.String)">
            <summary>
            Moves to an attribute in the current node
            </summary>
            <param name="localName">
            Name of the attribute.
            </param>
            <param name="namespaceURI">
            Namespace of the attribute.
            </param>
            <returns>
            True if the attribute exists.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.MoveToFirst">
            <summary>
            Moves current node to the first sibling.
            </summary>
            <returns>
            True if the current node was successfully moved. False if the current node is the first sibling.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.MoveToFirstAttribute">
            <summary>
            Moves to the first attribute of the current node.
            </summary>
            <returns>
            True if successfully moved. False if the node has no attributes or the first attribute is already current.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.MoveToFirstChild">
            <summary>
            Moves to the first child of the current node.
            </summary>
            <returns>
            True if successfully moved.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.MoveToNext">
            <summary>
            Moves to next sibling of the current node.
            </summary>
            <returns>
            True if moved successfully.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.MoveToNextAttribute">
            <summary>
            Moves to the next attribute of the current node.
            </summary>
            <returns>
            True if the move was successful.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.MoveToParent">
            <summary>
            Moves to the parent node.
            </summary>
            <returns>
            True if the move was successful.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.MoveToPrevious">
            <summary>
            Moves to the previous sibling of the current node.
            </summary>
            <returns>
            True if moved successfully.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.MoveToRoot">
            <summary>
            Moves to the root node of the current node.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.WriteOuterXml(System.IO.TextWriter)">
            <summary>
            
            </summary>
            <param name="stream"></param>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.Current">
            <summary>
            Current object of the navigator.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.AttributeIndex">
            <summary>
            Current attribute index of the node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.BaseURI">
            <summary>
            Base URI of the grid. To distinguish "our" data.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.HasAttributes">
            <summary>
            Shows if the current node has attributes.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.HasChildren">
            <summary>
            Shows if current node has chidldren.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.IsEmptyElement">
            <summary>
            Indicates if the current node is empty. All grid's data nodes are usually not empty.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.LocalName">
            <summary>
            Local representation of the current node with no prefix and no namespace.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.Name">
            <summary>
            Full name of the current node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.NamespaceURI">
            <summary>
            URI of the node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.NameTable">
            <summary>
            Name table associated with the implemetation.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.NodeType">
            <summary>
            Type of current node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.Prefix">
            <summary>
            Prefix of the node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.Value">
            <summary>
            Value of the node.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.XmlLang">
            <summary>
            Xml language.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.UltraWebGrid.XPathDataNavigator.OuterXml">
            <summary>
            Text representation of the XPathDataNavigator's data.
            </summary>
        </member>
    </members>
</doc>
